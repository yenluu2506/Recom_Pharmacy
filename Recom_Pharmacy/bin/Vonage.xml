<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vonage</name>
    </assembly>
    <members>
        <member name="M:Vonage.Accounts.AccountClient.ChangeAccountSettingsAsync(Vonage.Accounts.AccountSettingsRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.CreateApiSecretAsync(Vonage.Accounts.CreateSecretRequest,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.GetAccountBalanceAsync(Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.RetrieveApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.RetrieveApiSecretsAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.RevokeApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Accounts.AccountClient.TopUpAccountBalanceAsync(Vonage.Accounts.TopUpRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsRequest.MoCallBackUrl">
            <summary>
            The URL where Vonage will send a webhook when an SMS is received to a Vonage number that does not have SMS
            handling configured. Send an empty string to unset this value.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsRequest.DrCallBackUrl">
            <summary>
            The URL where Vonage will send a webhook when an delivery receipt is received without a specific callback
            URL configured. Send an empty string to unset this value.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MoCallbackUrl">
            <summary>
            The current or updated inbound message URI
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.DrCallbackurl">
            <summary>
            The current or updated delivery receipt URI
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxOutboundRequest">
            <summary>
            The maximum number of outbound messages per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxInboundRequest">
            <summary>
            The maximum number of inbound messages per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.AccountSettingsResult.MaxCallsPerSecond">
            <summary>
            The maximum number of API calls per second.
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Balance.Value">
            <summary>
            The balance of the account, in EUR
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Balance.AutoReload">
            <summary>
            Whether the account has auto-reloading enabled
            </summary>
        </member>
        <member name="P:Vonage.Accounts.CreateSecretRequest.Secret">
            <summary>
            the new secret to be created
            The new secret must follow these rules:
              minimum 8 characters
              maximum 25 characters
              minimum 1 lower case character
              minimum 1 upper case character
              minimum 1 digit
            </summary>
        </member>
        <member name="P:Vonage.Accounts.CreateSubAccountRequest.Name">
            <summary>
            the new subaccount to be created
              maximum 80 characters
            </summary>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.GetAccountBalanceAsync(Vonage.Request.Credentials)">
            <summary>
                Retrieve the current balance of your Vonage API account
            </summary>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.TopUpAccountBalanceAsync(Vonage.Accounts.TopUpRequest,Vonage.Request.Credentials)">
            <summary>
                You can top up your account using this API when you have enabled auto-reload in the dashboard.
                The amount added by the top-up operation will be the same amount as was added in the payment
                when auto-reload was enabled. Your account balance is checked every 5-10 minutes and if it falls
                below the threshold and auto-reload is enabled, then it will be topped up automatically. Use this
                endpoint if you need to top up at times when your credit may be exhausted more quickly than the auto-reload may
                occur.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.ChangeAccountSettingsAsync(Vonage.Accounts.AccountSettingsRequest,Vonage.Request.Credentials)">
            <summary>
                Update the default callback URLs (where the webhooks are sent to) associated with your account:
                * Callback URL for incoming SMS messages * Callback URL for delivery receipts
                Note: that the URLs you provide must be valid and active. Vonage will check that they return a 200 OK response
                before the setting is saved
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecretsAsync(System.String,Vonage.Request.Credentials)">
            <summary>
                Many of Vonage's APIs are accessed using an API key and secret. It is recommended that you change or "rotate"
                your secrets from time to time for security purposes. This section provides the API interface for achieving this.
                Note: to work on secrets for your secondary accounts, you may authenticate with your primary
                credentials and supply the secondary API keys as URL parameters to these API endpoints.
            </summary>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.CreateApiSecretAsync(Vonage.Accounts.CreateSecretRequest,System.String,Vonage.Request.Credentials)">
            <summary>
                Createse an API Secret
            </summary>
            <param name="request"></param>
            <param name="apiKey">The Api Key to create a secret for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RetrieveApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
                retrieves info about an api secret at the given id
            </summary>
            <param name="secretId">the id of the secret</param>
            <param name="apiKey">Api Key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Accounts.IAccountClient.RevokeApiSecretAsync(System.String,System.String,Vonage.Request.Credentials)">
            <summary>
                Deletes an Api Secret
            </summary>
            <param name="secretId">the id of the secret to be deleted</param>
            <param name="apiKey">the api key the secret is for</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Accounts.Secret.Links">
            <summary>
            the reference link for the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Secret.Id">
            <summary>
            the id of the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.Secret.CreatedAt">
            <summary>
            the creation time of the secret
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SecretsRequestResult.Links">
            <summary>
            reference links for the secrets
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SecretsRequestResult.Embedded">
            <summary>
            the secrets
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.ApiKey">
            <summary>
            the API Key of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Balance">
            <summary>
            the current subaccount balance
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.CreatedAt">
            <summary>
            the creation time of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.CreditLimit">
            <summary>
            the credit limit of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Name">
            <summary>
            the name of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.PrimaryAccountApiKey">
            <summary>
            the primary API Key
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Secret">
            <summary>
            the secret of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.Suspended">
            <summary>
            the suspension state of the subaccount
            </summary>
        </member>
        <member name="P:Vonage.Accounts.SubAccount.UsePrimaryAccountBalance">
            <summary>
            whether the subaccount should use the account balance of the primary account
            </summary>
        </member>
        <member name="P:Vonage.Accounts.TopUpRequest.Trx">
            <summary>
            The transaction reference of the transaction when balance was added and auto-reload was enabled on your account.
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Capabilities">
            <summary>
            Configuration for the products available in this application
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Id">
            <summary>
            The application's ID
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Keys">
            <summary>
            The keys for your application
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Name">
            <summary>
            Friendly identifier for your application. This is not unique
            </summary>
        </member>
        <member name="P:Vonage.Applications.Application.Privacy">
            <summary>
                Application privacy config
            </summary>
        </member>
        <member name="T:Vonage.Applications.ApplicationCapabilities">
            <summary>
                Represents capabilities of an application.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Voice">
            <summary>
            Voice application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Rtc">
            <summary>
            RTC / Client SDK application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Vbc">
            <summary>
            Specify vbc capability to enable zero-rated calls for VBC number programmability service applications. This must be an empty object.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Meetings">
            <summary>
                Create meetings with Vonage API.
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Messages">
            <summary>
            Messages and Dispatch application webhook config
            </summary>
        </member>
        <member name="P:Vonage.Applications.ApplicationCapabilities.Video">
            <summary>
               Create in-app video calls with Vonage API.
            </summary>
        </member>
        <member name="M:Vonage.Applications.ApplicationClient.CreateApplicationAsync(Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Applications.ApplicationClient.DeleteApplicationAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Applications.ApplicationClient.GetApplicationAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Applications.ApplicationClient.ListApplicationsAsync(Vonage.Applications.ListApplicationsRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Applications.ApplicationClient.UpdateApplicationAsync(System.String,Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Meetings">
            <summary>
                Represents the Meetings capability.
            </summary>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Meetings.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Meetings.#ctor(System.Collections.Generic.IDictionary{Vonage.Common.Webhook.Type,Vonage.Common.Webhook})">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Video">
            <summary>
            Represents the Video capability.
            </summary>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Video.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Voice">
            <summary>
                Represents Voice capabilities.
            </summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.ConversationsTimeToLive">
            <summary>
                The length of time named conversations will remain active for after creation, in hours. 0 means infinite. Maximum
                value is 744 (i.e. 31 days).
            </summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.Region">
            <summary>
                Selecting a region means all inbound, programmable SIP and SIP connect calls will be sent to the selected region
                unless the call is sent to a regional endpoint, if the call is using a regional endpoint this will override the
                application setting.
            </summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.SignedCallbacks">
            <summary>
                Whether to use signed webhooks. This is a way of verifying that the request is coming from Vonage. Refer to the
                Webhooks documentation for more information.
            </summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.Webhooks">
            <summary>
                Represents the collection of Webhook URLs with their configuration.
            </summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.Voice.VoiceWebhook">
            <summary>
            Represents a webhook for Voice API.
            </summary>
            <param name="Address">The webhook address.</param>
            <param name="Method">Must be one of GET or POST.</param>
            <param name="ConnectionTimeout">If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.</param>
            <param name="SocketTimeout">If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.</param>
        </member>
        <member name="M:Vonage.Applications.Capabilities.Voice.VoiceWebhook.#ctor(System.Uri,System.Net.Http.HttpMethod,System.Int32,System.Int32)">
            <summary>
            Represents a webhook for Voice API.
            </summary>
            <param name="Address">The webhook address.</param>
            <param name="Method">Must be one of GET or POST.</param>
            <param name="ConnectionTimeout">If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.</param>
            <param name="SocketTimeout">If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.</param>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.VoiceWebhook.Address">
            <summary>The webhook address.</summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.VoiceWebhook.Method">
            <summary>Must be one of GET or POST.</summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.VoiceWebhook.ConnectionTimeout">
            <summary>If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.</summary>
        </member>
        <member name="P:Vonage.Applications.Capabilities.Voice.VoiceWebhook.SocketTimeout">
            <summary>If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.</summary>
        </member>
        <member name="T:Vonage.Applications.Capabilities.VoiceWebhookType">
            <summary>
            Represents various Webhook urls.
            </summary>
        </member>
        <member name="F:Vonage.Applications.Capabilities.VoiceWebhookType.AnswerUrl">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Applications.Capabilities.VoiceWebhookType.EventUrl">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Applications.Capabilities.VoiceWebhookType.FallbackAnswerUrl">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Applications.CreateApplicationRequest">
            <summary>
                Represents a request to create an application.
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Capabilities">
            <summary>
                Your application can use multiple products. This contains the configuration for each product.
                This replaces the application type from version 1 of the Application API.
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Keys">
            <summary>
                The keys for the application
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Name">
            <summary>
                Application Name
            </summary>
        </member>
        <member name="P:Vonage.Applications.CreateApplicationRequest.Privacy">
            <summary>
                Application privacy config
            </summary>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.CreateApplicationAsync(Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
                Creates a new application.
            </summary>
            <param name="request">The request.</param>
            <param name="creds">Optional credentials.</param>
            <returns>The application.</returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.DeleteApplicationAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Deletes an application: Cannot be undone
            </summary>
            <param name="id">Id of the application to be deleted</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.GetApplicationAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves information about an application
            </summary>
            <param name="id">Id of the application to be retrieved</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.ListApplicationsAsync(Vonage.Applications.ListApplicationsRequest,Vonage.Request.Credentials)">
            <summary>
            List applications
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Applications.IApplicationClient.UpdateApplicationAsync(System.String,Vonage.Applications.CreateApplicationRequest,Vonage.Request.Credentials)">
            <summary>
            Updates an Application
            </summary>
            <param name="id">Id of the application to be updated</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Applications.ListApplicationsRequest.PageSize">
            <summary>
            Number of records to retrieve per page
            </summary>
        </member>
        <member name="P:Vonage.Applications.ListApplicationsRequest.Page">
            <summary>
            the page to retrieve
            </summary>
        </member>
        <member name="T:Vonage.Applications.PrivacySettings">
            <summary>
                Application privacy config
            </summary>
            <param name="ImproveAi">
                If set to true, Vonage may store and use your content and data for the improvement of Vonage's
                AI based services and technologies.
            </param>
        </member>
        <member name="M:Vonage.Applications.PrivacySettings.#ctor(System.Boolean)">
            <summary>
                Application privacy config
            </summary>
            <param name="ImproveAi">
                If set to true, Vonage may store and use your content and data for the improvement of Vonage's
                AI based services and technologies.
            </param>
        </member>
        <member name="P:Vonage.Applications.PrivacySettings.ImproveAi">
            <summary>
                If set to true, Vonage may store and use your content and data for the improvement of Vonage's
                AI based services and technologies.
            </summary>
        </member>
        <member name="T:Vonage.Common.AccountKey">
            <summary>
                Represents a Vonage Account Key.
            </summary>
        </member>
        <member name="P:Vonage.Common.AccountKey.ApiKey">
            <summary>
                The account ApiKey.
            </summary>
        </member>
        <member name="M:Vonage.Common.AccountKey.Parse(System.String)">
            <summary>
                Creates an AccountKey.
            </summary>
            <param name="key">The ApiKey.</param>
            <returns>Success if the parsing succeeds. Failure otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.AccountKey.ToString">
            <summary>
                Returns the account ApiKey.
            </summary>
            <returns>The account ApiKey.</returns>
        </member>
        <member name="T:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1">
            <summary>
                Represents a builder for ArchiveRequests, aka requests having an ApplicationId and an ArchiveId.
            </summary>
            <typeparam name="T">Type of the underlying request.</typeparam>
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.Build(System.Func{System.Tuple{System.Guid,System.Guid},`0})">
            <summary>
                Initializes a builder.
            </summary>
            <param name="requestInitializer">The method to initialize a request.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.WithArchiveId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.IBuilderForArchiveId">
            <summary>
                Represents a builder for ArchiveId.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.IBuilderForArchiveId.WithArchiveId(System.Guid)">
            <summary>
                Sets the ArchiveId.
            </summary>
            <param name="value">The ArchiveId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.Builders.ArchiveRequestBuilder`1.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasApplicationId">
            <summary>
                Indicates a request has an ApplicationId.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasApplicationId.ApplicationId">
            <summary>
                The Vonage Application UUID.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasArchiveId">
            <summary>
                Indicates the request has an ArchiveId.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasArchiveId.ArchiveId">
            <summary>
                The archive Id.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasBroadcastId">
            <summary>
                Indicates a request has a broadcast Id.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasBroadcastId.BroadcastId">
            <summary>
                The broadcast Id.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasConnectionId">
            <summary>
                Indicates a request has a connection Id.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasConnectionId.ConnectionId">
            <summary>
                The connection Id.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasSessionId">
            <summary>
            Indicates a request has a SessionId.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasSessionId.SessionId">
            <summary>
                The session Id.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.IHasStreamId">
            <summary>
                Indicates the request has a StreamId.
            </summary>
        </member>
        <member name="P:Vonage.Common.Client.Builders.IHasStreamId.StreamId">
            <summary>
                The stream Id.
            </summary>
        </member>
        <member name="T:Vonage.Common.Client.Builders.StreamRequestBuilder`1">
            <summary>
                Represents a builder for StreamRequests, aka requests having an ApplicationId, an ArchiveId and a StreamId.
            </summary>
            <typeparam name="T">Type of the underlying request.</typeparam>
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.Build(System.Func{System.Tuple{System.Guid,System.Guid,System.Guid},`0})">
            <summary>
                Initializes a builder.
            </summary>
            <param name="requestInitializer">The method to initialize a request.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.WithArchiveId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.WithStreamId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForArchiveId">
            <summary>
                Represents a builder for ArchiveId.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForArchiveId.WithArchiveId(System.Guid)">
            <summary>
                Sets the ArchiveId.
            </summary>
            <param name="value">The ArchiveId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForStreamId">
            <summary>
                Represents a builder for StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.Builders.StreamRequestBuilder`1.IBuilderForStreamId.WithStreamId(System.Guid)">
            <summary>
                Sets the StreamId.
            </summary>
            <param name="value">The StreamId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Common.Client.IVonageRequest">
            <summary>
                Represents a request to be sent to Vonage's APIs.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.IVonageRequest.BuildRequestMessage">
            <summary>
                Converts the request to a HttpRequest.
            </summary>
            <returns>The Http request.</returns>
        </member>
        <member name="M:Vonage.Common.Client.IVonageRequest.GetEndpointPath">
            <summary>
                Retrieves the endpoint's path.
            </summary>
            <returns>The endpoint's path.</returns>
        </member>
        <member name="T:Vonage.Common.Client.IVonageRequestBuilder`1">
            <summary>
                Represents a builder for the underlying request type.
            </summary>
            <typeparam name="T">The request type.</typeparam>
        </member>
        <member name="M:Vonage.Common.Client.IVonageRequestBuilder`1.Create">
            <summary>
                Creates a request.
            </summary>
            <returns>The request if validation succeeded, a failure if it failed.</returns>
        </member>
        <member name="T:Vonage.Common.Client.VonageHttpClient">
            <summary>
                Represents a custom http client for Vonage APIs.
            </summary>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration,Vonage.Common.IJsonSerializer)">
            <summary>
                Creates a custom Http Client for Vonage purposes.
            </summary>
            <param name="configuration">The custom configuration.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClient.SendAsync``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sends a HttpRequest.
            </summary>
            <param name="request">The request to send.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClient.SendWithoutHeadersAsync``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sends a HttpRequest without Authorization and UserAgent headers.
            </summary>
            <param name="request">The request to send.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClient.SendWithRawResponseAsync``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sends a HttpRequest and returns the raw content.
            </summary>
            <param name="request">The request to send.</param>
            <typeparam name="TRequest">Type of the request.</typeparam>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClient.SendWithResponseAsync``2(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sends a HttpRequest and parses the response.
            </summary>
            <param name="request">The request to send.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="T:Vonage.Common.Client.VonageHttpClientConfiguration">
            <summary>
                Represents the configuration for all Vonage Clients.
            </summary>
            <param name="HttpClient">HttpClient to used for further connections.</param>
            <param name="AuthenticationHeader">AuthenticationHeader to be used for further connections.</param>
            <param name="UserAgent">Value to be used in the user-agent header of each request.</param>
        </member>
        <member name="M:Vonage.Common.Client.VonageHttpClientConfiguration.#ctor(System.Net.Http.HttpClient,Vonage.Common.Monads.Result{System.Net.Http.Headers.AuthenticationHeaderValue},System.String)">
            <summary>
                Represents the configuration for all Vonage Clients.
            </summary>
            <param name="HttpClient">HttpClient to used for further connections.</param>
            <param name="AuthenticationHeader">AuthenticationHeader to be used for further connections.</param>
            <param name="UserAgent">Value to be used in the user-agent header of each request.</param>
        </member>
        <member name="P:Vonage.Common.Client.VonageHttpClientConfiguration.HttpClient">
            <summary>HttpClient to used for further connections.</summary>
        </member>
        <member name="P:Vonage.Common.Client.VonageHttpClientConfiguration.AuthenticationHeader">
            <summary>AuthenticationHeader to be used for further connections.</summary>
        </member>
        <member name="P:Vonage.Common.Client.VonageHttpClientConfiguration.UserAgent">
            <summary>Value to be used in the user-agent header of each request.</summary>
        </member>
        <member name="T:Vonage.Common.Client.VonageRequestBuilder">
            <summary>
                Dedicated HttpRequest builder for VonageRequests.
            </summary>
        </member>
        <member name="T:Vonage.Common.EmbeddedResponse`1">
            <summary>
                Represents an Embedded JSON response with a custom content.
            </summary>
            <param name="Content">The embedded content.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="M:Vonage.Common.EmbeddedResponse`1.#ctor(`0)">
            <summary>
                Represents an Embedded JSON response with a custom content.
            </summary>
            <param name="Content">The embedded content.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="P:Vonage.Common.EmbeddedResponse`1.Content">
            <summary>The embedded content.</summary>
        </member>
        <member name="T:Vonage.Common.ErrorResponse">
            <summary>
                Represents an error api response.
            </summary>
        </member>
        <member name="P:Vonage.Common.ErrorResponse.Code">
            <summary>
                The response code.
            </summary>
        </member>
        <member name="P:Vonage.Common.ErrorResponse.Message">
            <summary>
                The response message.
            </summary>
        </member>
        <member name="M:Vonage.Common.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
                Creates a response.
            </summary>
            <param name="code">The response code.</param>
            <param name="message">The response message.</param>
        </member>
        <member name="T:Vonage.Common.Exceptions.VonageAuthenticationException">
            <summary>
                Represents when processing authentication.
            </summary>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageAuthenticationException.FromError(System.String)">
            <summary>
            Creates an exception indicating the ApplicationId or PrivateKeyPath are missing.
            </summary>
            <param name="failure">The failure.</param>
            <returns>The exception.</returns>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageAuthenticationException.FromMissingApiKeyOrSecret">
            <summary>
                Creates an exception indicating the ApiKey or ApiSecret are missing.
            </summary>
            <returns>The exception.</returns>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageAuthenticationException.FromMissingApplicationIdOrPrivateKey">
            <summary>
                Creates an exception indicating the ApplicationId or PrivateKeyPath are missing.
            </summary>
            <returns>The exception.</returns>
        </member>
        <member name="T:Vonage.Common.Exceptions.VonageException">
            <summary>
                Represents a Vonage-specific exception.
            </summary>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageException.#ctor(System.String)">
            <summary>
                Creates a VonageException.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Vonage.Common.Exceptions.VonageHttpRequestException">
            <summary>
                Represents an issue when processing an HttpRequest.
            </summary>
        </member>
        <member name="P:Vonage.Common.Exceptions.VonageHttpRequestException.HttpStatusCode">
            <summary>
                The response status code.
            </summary>
        </member>
        <member name="P:Vonage.Common.Exceptions.VonageHttpRequestException.Json">
            <summary>
                The response body content.
            </summary>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageHttpRequestException.#ctor(System.String)">
            <summary>
                Creates a VonageHttpRequestException.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Vonage.Common.Exceptions.VonageHttpRequestException.#ctor(System.Exception)">
            <summary>
                Creates a VonageHttpRequestException.
            </summary>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Vonage.Common.Failures.AuthenticationFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.AuthenticationFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.AuthenticationFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.AuthenticationFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.AuthenticationFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Failures.DeserializationFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.DeserializationFailure.ExpectedType">
            <summary>
                The expected type for deserialization.
            </summary>
        </member>
        <member name="P:Vonage.Common.Failures.DeserializationFailure.SerializedContent">
            <summary>
                The serialized content.
            </summary>
        </member>
        <member name="P:Vonage.Common.Failures.DeserializationFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.DeserializationFailure.#ctor(System.Type,System.String)">
            <summary>
                Creates a DeserializationFailure.
            </summary>
            <param name="expectedType">expectedType</param>
            <param name="serializedContent">serializedContent</param>
        </member>
        <member name="M:Vonage.Common.Failures.DeserializationFailure.From(System.Type,System.String)">
            <summary>
                Creates a DeserializationFailure.
            </summary>
            <param name="expectedType">expectedType</param>
            <param name="serializedContent">serializedContent</param>
            <returns>The failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.DeserializationFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.DeserializationFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.DeserializationFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Failures.HttpFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.HttpFailure.Code">
            <summary>
                The status code.
            </summary>
            <remarks>Mandatory for deserialization.</remarks>
        </member>
        <member name="P:Vonage.Common.Failures.HttpFailure.Json">
            <summary>
                The JSON content.
            </summary>
        </member>
        <member name="P:Vonage.Common.Failures.HttpFailure.Message">
            <summary>
                The failure message.
            </summary>
            <remarks>Mandatory for deserialization.</remarks>
        </member>
        <member name="P:Vonage.Common.Failures.HttpFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.#ctor(System.Net.HttpStatusCode,System.String,System.String)">
            <summary>
                Create a HttpFailure.
            </summary>
            <param name="code"> The status code.</param>
            <param name="message"> The failure message.</param>
            <param name="json">The JSON content.</param>
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.From(System.Net.HttpStatusCode,System.String,System.String)">
            <summary>
                Creates a HttpFailure.
            </summary>
            <param name="code">The status code.</param>
            <param name="message">The message.</param>
            <param name="json">The JSON content.</param>
            <returns>The failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.From(System.Net.HttpStatusCode)">
            <summary>
                Creates a HttpFailure.
            </summary>
            <param name="code">The status code.</param>
            <returns>The failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.HttpFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Failures.IResultFailure">
            <summary>
                Represents a Failure with an error message.
            </summary>
        </member>
        <member name="P:Vonage.Common.Failures.IResultFailure.Type">
            <summary>
                The type of failure.
            </summary>
        </member>
        <member name="M:Vonage.Common.Failures.IResultFailure.GetFailureMessage">
            <summary>
                Returns the error message defined in the failure.
            </summary>
            <returns>The error message.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.IResultFailure.ToException">
            <summary>
                Converts the failure to an exception.
            </summary>
            <returns>The exception.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.IResultFailure.ToResult``1">
            <summary>
                Converts the failure to a Result with a Failure state.
            </summary>
            <typeparam name="T">The underlying type of Result.</typeparam>
            <returns>A Result with a Failure state.</returns>
        </member>
        <member name="T:Vonage.Common.Failures.ParsingFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.ParsingFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.FromFailures(Vonage.Common.Failures.ResultFailure[])">
            <summary>
                Creates a ParsingFailure from a list of failures.
            </summary>
            <param name="failures">The failures.</param>
            <returns>The parsing failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ParsingFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Failures.ResultFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.ResultFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ResultFailure.FromErrorMessage(System.String)">
            <summary>
                Creates a failure from an error message.
            </summary>
            <param name="error">The error message.</param>
            <returns>The failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.ResultFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ResultFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.ResultFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Failures.SystemFailure">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.Failures.SystemFailure.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.SystemFailure.FromException(System.Exception)">
            <summary>
                Creates a failure from an exception.
            </summary>
            <param name="exception">The exception.</param>
            <returns>The failure.</returns>
        </member>
        <member name="M:Vonage.Common.Failures.SystemFailure.GetFailureMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.SystemFailure.ToException">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Failures.SystemFailure.ToResult``1">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.HalLinks">
            <summary>
                Represents a set of HAL Links.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks.First">
            <summary>
                Represents the navigation link to the first element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks.Last">
            <summary>
                Represents the navigation link to the last element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks.Next">
            <summary>
                Represents the navigation link to the next element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks.Previous">
            <summary>
                Represents the navigation link to the previous element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks.Self">
            <summary>
                Represents the navigation link to the current element.
            </summary>
        </member>
        <member name="T:Vonage.Common.HalLinks`1">
            <summary>
                Represents a set of HAL Links.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks`1.First">
            <summary>
                Represents the navigation link to the first element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks`1.Last">
            <summary>
                Represents the navigation link to the last element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks`1.Next">
            <summary>
                Represents the navigation link to the next element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks`1.Previous">
            <summary>
                Represents the navigation link to the previous element.
            </summary>
        </member>
        <member name="P:Vonage.Common.HalLinks`1.Self">
            <summary>
                Represents the navigation link to the current element.
            </summary>
        </member>
        <member name="T:Vonage.Common.HalLink">
            <summary>
                Represents a link to another page.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="M:Vonage.Common.HalLink.#ctor(System.Uri)">
            <summary>
                Represents a link to another page.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="P:Vonage.Common.HalLink.Href">
            <summary>Hyperlink reference.</summary>
        </member>
        <member name="T:Vonage.Common.IJsonSerializer">
            <summary>
                Provides serialization features to/from JSON.
            </summary>
        </member>
        <member name="M:Vonage.Common.IJsonSerializer.DeserializeObject``1(System.String)">
            <summary>
                Deserializes the JSON to the specified type.
            </summary>
            <param name="serializedValue">The JSON to deserialize.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>Success if deserialization succeeded, Failure otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.IJsonSerializer.SerializeObject``1(``0)">
            <summary>
                Serializes the specified object to a JSON string.
            </summary>
            <param name="value">The object to serialize.</param>
            <typeparam name="T">The object type.</typeparam>
            <returns>The serialized string.</returns>
        </member>
        <member name="T:Vonage.Common.ITimeProvider">
            <summary>
            Represents a time provider.
            </summary>
        </member>
        <member name="P:Vonage.Common.ITimeProvider.Epoch">
            <summary>
            Returns the current epoch value.
            </summary>
        </member>
        <member name="P:Vonage.Common.ITimeProvider.UtcNow">
            <summary>
            Returns the current date and time.
            </summary>
        </member>
        <member name="T:Vonage.Common.JsonSerializer">
            <summary>
                Provides serialization features to/from JSON.
            </summary>
        </member>
        <member name="M:Vonage.Common.JsonSerializer.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:Vonage.Common.JsonSerializer.#ctor(System.Text.Json.JsonNamingPolicy)">
            <summary>
                Constructor with specific naming policy.
            </summary>
            <param name="namingPolicy">The naming policy.</param>
        </member>
        <member name="M:Vonage.Common.JsonSerializer.DeserializeObject``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.JsonSerializer.SerializeObject``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.JsonSerializer.WithConverter(System.Text.Json.Serialization.JsonConverter)">
            <summary>
                Add the specified converter to the current instance.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="T:Vonage.Common.MailAddress">
            <summary>
                Represents an email address.
            </summary>
        </member>
        <member name="P:Vonage.Common.MailAddress.Address">
            <summary>
                The mail address.
            </summary>
        </member>
        <member name="M:Vonage.Common.MailAddress.Parse(System.String)">
            <summary>
                Parses an email.
            </summary>
            <param name="email">The email.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="T:Vonage.Common.Monads.Exceptions.NoneStateException">
            <summary>
                Represents errors that occurs when a Maybe is in a None state.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.Exceptions.NoneStateException.#ctor">
            <summary>
                Creates a NoneStateException.
            </summary>
        </member>
        <member name="T:Vonage.Common.Monads.Maybe`1">
            <summary>
                Discriminated union type. Can be in one of two states: Some, or None.
            </summary>
            <typeparam name="TSource">Bound value type.</typeparam>
        </member>
        <member name="F:Vonage.Common.Monads.Maybe`1.NullValueMessage">
            <summary>
                Message indicating Value cannot be null.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.#ctor(`0)">
            <summary>
                Constructor for a Some.
            </summary>
            <param name="value">Value to bind.</param>
        </member>
        <member name="P:Vonage.Common.Monads.Maybe`1.IsNone">
            <summary>
                Indicates if in None state.
            </summary>
        </member>
        <member name="P:Vonage.Common.Monads.Maybe`1.IsSome">
            <summary>
                Indicates if in Some state.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.#ctor">
            <summary>
                Constructor for a None.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Bind``1(System.Func{`0,Vonage.Common.Monads.Maybe{``0}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Bind operation.</param>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.BindAsync``1(System.Func{`0,System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Bind operation.</param>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.GetUnsafe">
            <summary>
                Retrieves the Maybe's value. This method is unsafe and will throw an exception if in None state.
            </summary>
            <returns>The value if in Some state.</returns>
            <exception cref="T:Vonage.Common.Monads.Exceptions.NoneStateException">When in None state.</exception>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.IfNone(System.Func{`0})">
            <summary>
                Returns the result of the operation if Maybe is in the None state, the Some value otherwise.
            </summary>
            <param name="operation">Operation to return a value.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.IfNone(`0)">
            <summary>
                Returns the specified value if Maybe is in the None state, the Some value otherwise.
            </summary>
            <param name="noneValue">The value to return if in None state.</param>
            <returns>A value.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.IfSome(System.Action{`0})">
            <summary>
                Invokes the action if Maybe is in the Some state, otherwise nothing happens.
            </summary>
            <param name="some">Action to invoke</param>
            <returns>Unit.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.IfSomeAsync(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
                Invokes the action if Maybe is in the Some state, otherwise nothing happens.
            </summary>
            <param name="some">Action to invoke</param>
            <returns>Unit.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Map``1(System.Func{`0,``0})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Projection function.</param>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.MapAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Projection function.</param>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <summary>
                Match the two states of the Maybe and return a non-null TDestination.
            </summary>
            <param name="some">Some match operation.</param>
            <param name="none">None match operation.</param>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>A non-null TDestination.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Merge``1(Vonage.Common.Monads.Maybe{`0},System.Func{`0,`0,``0})">
            <summary>
                Merge two maybes together. The merge operation will be used if they're both in a Some state.
            </summary>
            <param name="other">The other maybe.</param>
            <param name="merge">The operation used if they're both in a Some state.</param>
            <typeparam name="TDestination">The return type.</typeparam>
            <returns>A Maybe.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.op_Implicit(`0)~Vonage.Common.Monads.Maybe{`0}">
            <summary>
                Implicit operator from TSource to Maybe of TSource.
            </summary>
            <param name="value">Value to be converted.</param>
            <returns>None if the value is null, Some otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Some``1(``0)">
            <summary>
                Construct a Maybe in a Some state.
            </summary>
            <param name="value">Value to bind, must be non-null.</param>
            <typeparam name="TDestination">Bound value type.</typeparam>
            <returns>Maybe containing Some value.</returns>
            <exception cref="T:System.InvalidOperationException">Given value is null.</exception>
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Monads.Maybe`1.Equals(Vonage.Common.Monads.Maybe{`0})">
            <summary>
                Verifies of both Maybes are either None or Some with the same values.
            </summary>
            <param name="other">Other maybe to be compared with.</param>
            <returns>Whether both Maybes are equal.</returns>
        </member>
        <member name="F:Vonage.Common.Monads.Maybe`1.None">
            <summary>
                Construct a Maybe in a None state.
            </summary>
        </member>
        <member name="T:Vonage.Common.Monads.MaybeExtensions">
            <summary>
                Exposes a set of extensions for Maybe.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.From(System.String)">
            <summary>
                Creates a Maybe from a string value.
            </summary>
            <param name="value">The string value.</param>
            <returns>A None state if the value is null or whitespace. A Some state otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.Bind``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}},System.Func{``0,Vonage.Common.Monads.Maybe{``1}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Bind operation.</param>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.BindAsync``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``1}}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Bind operation.</param>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.Map``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}},System.Func{``0,``1})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Projection function.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.MapAsync``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Projection function.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.MaybeExtensions.Match``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Maybe{``0}},System.Func{``0,``1},System.Func{``1})">
            <summary>
                Match the two states of the Maybe and return a non-null TDestination.
            </summary>
            <param name="task">Initial Maybe.</param>
            <param name="some">Some match operation.</param>
            <param name="none">None match operation.</param>
            <typeparam name="TDestination">Return type.</typeparam>
            <typeparam name="TSource"></typeparam>
            <returns>A non-null TDestination.</returns>
        </member>
        <member name="T:Vonage.Common.Monads.Result`1">
            <summary>
                Represents the result of an operation. Can be in one of two states: Success, or Failure.
            </summary>
            <typeparam name="T">Bound value type.</typeparam>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.#ctor(`0)">
            <summary>
                Constructor for a Success.
            </summary>
            <param name="success">Success value.</param>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.#ctor(Vonage.Common.Failures.IResultFailure)">
            <summary>
                Constructor for a Failure.
            </summary>
            <param name="failure">Failure value.</param>
        </member>
        <member name="P:Vonage.Common.Monads.Result`1.IsFailure">
            <summary>
                Indicates if in Failure state.
            </summary>
        </member>
        <member name="P:Vonage.Common.Monads.Result`1.IsSuccess">
            <summary>
                Indicates if in Success state.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.BiMap``1(System.Func{`0,``0},System.Func{Vonage.Common.Failures.IResultFailure,Vonage.Common.Failures.IResultFailure})">
            <summary>
                Projects from one value to another for each state of the Monad.
            </summary>
            <param name="successMap">Projection function for success state.</param>
            <param name="failureMap">Projection function for failure state.</param>
            <typeparam name="TB">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Bind``1(System.Func{`0,Vonage.Common.Monads.Result{``0}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Bind operation.</param>
            <typeparam name="TB">Return type.</typeparam>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.BindAsync``1(System.Func{`0,System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="bind">Asynchronous bind operation.</param>
            <typeparam name="TB">Return type.</typeparam>
            <returns>Asynchronous bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.FromFailure(Vonage.Common.Failures.IResultFailure)">
            <summary>
                Construct Result from Failure.
            </summary>
            <param name="failure">Failure value.</param>
            <returns>Failure Result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.FromSuccess(`0)">
            <summary>
                Construct Result from Success.
            </summary>
            <param name="value">Success value.</param>
            <returns>Success Result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.GetFailureUnsafe">
            <summary>
                Retrieves the Failure value. This method is unsafe and will throw an exception if in Success state.
            </summary>
            <returns>The Failure value if in Failure state.</returns>
            <exception cref="T:System.InvalidOperationException">When Result is not in Failure state.</exception>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.GetSuccessUnsafe">
            <summary>
                Retrieves the Success value. This method is unsafe and will throw an exception if in Failure state.
            </summary>
            <returns>The Success value if in Success state.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.IfFailure(System.Action{Vonage.Common.Failures.IResultFailure})">
            <summary>
                Invokes the action if Result is in the Failure state, otherwise nothing happens.
            </summary>
            <param name="action">Action to invoke.</param>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.IfFailure(System.Func{Vonage.Common.Failures.IResultFailure,`0})">
            <summary>
                Returns the invocation result if the Result is in the Failure state, the success value otherwise.
            </summary>
            <param name="operation">Operation to invoke if the Result is in the Failure state.</param>
            <returns>The invocation result if the Result is in the Failure state, the success value otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.IfFailure(`0)">
            <summary>
                Returns the default value if the Result is in the Failure state, the success value otherwise.
            </summary>
            <param name="defaultValue">Value to return if in the Failure state.</param>
            <returns>The default value if the Result is in the Failure state, the success value otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.IfSuccess(System.Action{`0})">
            <summary>
                Invokes the action if Result is in the Success state, otherwise nothing happens.
            </summary>
            <param name="action">Action to invoke.</param>
            <returns>The initial result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.IfSuccessAsync(System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
                Invokes the action if Result is in the Success state, otherwise nothing happens.
            </summary>
            <param name="action">Action to invoke.</param>
            <returns>The initial result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Map``1(System.Func{`0,``0})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Projection function.</param>
            <typeparam name="TB">Resulting functor value type.</typeparam>
            <returns>Mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.MapAsync``1(System.Func{`0,System.Threading.Tasks.Task{``0}})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="map">Asynchronous projection function.</param>
            <typeparam name="TB">Resulting functor value type.</typeparam>
            <returns>Asynchronous mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Match``1(System.Func{`0,``0},System.Func{Vonage.Common.Failures.IResultFailure,``0})">
            <summary>
                Match the two states of the Result and return a non-null TB.
            </summary>
            <param name="successOperation">Success match operation.</param>
            <param name="failureOperation">Failure match operation.</param>
            <typeparam name="TB">Return type.</typeparam>
            <returns>A non-null TB.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Match(System.Action{`0},System.Action{Vonage.Common.Failures.IResultFailure})">
            <summary>
                Match the two states of the Result.
            </summary>
            <param name="successOperation">Success match operation.</param>
            <param name="failureOperation">Failure match operation.</param>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Merge``2(Vonage.Common.Monads.Result{``0},System.Func{`0,``0,``1})">
            <summary>
                Merge two results together. The merge operation will be used if they're both in a Success state.
            </summary>
            <param name="other">The other result.</param>
            <param name="merge">The operation used if they're both in a Success state.</param>
            <typeparam name="TSource">The secondary result type.</typeparam>
            <typeparam name="TDestination">The return type.</typeparam>
            <returns>A result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.op_Implicit(`0)~Vonage.Common.Monads.Result{`0}">
            <summary>
                Implicit operator from TA to Result of TA.
            </summary>
            <param name="value">Value to be converted.</param>
            <returns>Success.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.Equals(Vonage.Common.Monads.Result{`0})">
            <summary>
                Verifies if both Results are either Failure or Success with the same values.
            </summary>
            <param name="other">Other Result to be compared with.</param>
            <returns>Whether both Results are equal.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.EqualsFailure(Vonage.Common.Monads.Result{`0})">
            <summary>
                Verifies if both failures are equal.
            </summary>
            <param name="other">Other Result to be compared with.</param>
            <returns>Whether both failures are equal.</returns>
            <remarks>Using IResultFailure for the Failure value makes it nullable. Comparing both cases is now mandatory.</remarks>
        </member>
        <member name="M:Vonage.Common.Monads.Result`1.EqualsSuccess(Vonage.Common.Monads.Result{`0})">
            <summary>
                Verifies if both successes are equal.
            </summary>
            <param name="other">Other Result to be compared with.</param>
            <returns>Whether both successes are equal.</returns>
        </member>
        <member name="T:Vonage.Common.Monads.Result`1.ResultState">
            <summary>
                Enum representing the state of Result.
            </summary>
        </member>
        <member name="T:Vonage.Common.Monads.ResultExtensions">
            <summary>
                Extensions for Result.
            </summary>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.Bind``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,Vonage.Common.Monads.Result{``1}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="bind">Bind operation.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>Bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.BindAsync``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``1}}})">
            <summary>
                Monadic bind operation.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="bind">Asynchronous bind operation.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>Asynchronous bound functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.IfFailure``1(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},``0)">
            <summary>
                Returns the default value if the Result is in the Failure state, the success value otherwise.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="defaultValue">Value to return if in the Failure state.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <returns>The default value if the Result is in the Failure state, the success value otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.IfSuccessAsync``1(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
                Invokes the action if Result is in the Success state, otherwise nothing happens.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="action">Action to invoke.</param>
            <typeparam name="T">The source type.</typeparam>
            <returns>The initial result.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.Map``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,``1})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="map">Projection function.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Asynchronous mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.MapAsync``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
                Projects from one value to another.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="map">Asynchronous projection function.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Resulting functor value type.</typeparam>
            <returns>Asynchronous mapped functor.</returns>
        </member>
        <member name="M:Vonage.Common.Monads.ResultExtensions.Match``2(System.Threading.Tasks.Task{Vonage.Common.Monads.Result{``0}},System.Func{``0,``1},System.Func{Vonage.Common.Failures.IResultFailure,``1})">
            <summary>
                Match the two states of the Result and return a non-null TB.
            </summary>
            <param name="task">Asynchronous result.</param>
            <param name="successOperation">Success match operation.</param>
            <param name="failureOperation">Failure match operation.</param>
            <typeparam name="TSource">Source type.</typeparam>
            <typeparam name="TDestination">Return type.</typeparam>
            <returns>A non-null TB.</returns>
        </member>
        <member name="T:Vonage.Common.Monads.Unit">
            <summary>
                A unit type is a type that allows only one value (and thus can hold no information)
            </summary>
        </member>
        <member name="F:Vonage.Common.Monads.Unit.Default">
            <summary>
                The default Unit.
            </summary>
        </member>
        <member name="T:Vonage.Common.PhoneNumber">
            <summary>
                Represents a E.164 phone number.
            </summary>
            <remarks>
                See https://en.wikipedia.org/wiki/E.164.
            </remarks>
        </member>
        <member name="P:Vonage.Common.PhoneNumber.Number">
            <summary>
                Gets the phone number without international indicator.
            </summary>
        </member>
        <member name="P:Vonage.Common.PhoneNumber.NumberWithInternationalIndicator">
            <summary>
                Gets the phone number with international indicator.
            </summary>
        </member>
        <member name="M:Vonage.Common.PhoneNumber.Parse(System.String)">
            <summary>
                Parses the input into a PhoneNumber following E.164 specifications.
            </summary>
            <param name="number">The number.</param>
            <returns>Success if the input matches all requirements. Failure otherwise.</returns>
        </member>
        <member name="M:Vonage.Common.PhoneNumber.ToString">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.ColorJsonConverter">
            <summary>
                Represents a custom converter from Color to Json.
            </summary>
        </member>
        <member name="M:Vonage.Common.Serialization.ColorJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.ColorJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Drawing.Color,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.EmailJsonConverter">
            <summary>
                Represents a custom converter from Email to Json.
            </summary>
        </member>
        <member name="M:Vonage.Common.Serialization.EmailJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.EmailJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Vonage.Common.MailAddress,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.EnumDescriptionJsonConverter`1">
            <summary>
                Represents a custom converter from Enum description to Json.
            </summary>
            <typeparam name="T">Type of the enum.</typeparam>
        </member>
        <member name="P:Vonage.Common.Serialization.EnumDescriptionJsonConverter`1.HandleNull">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.EnumDescriptionJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.EnumDescriptionJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.HttpMethodJsonConverter">
            <summary>
                Represents a custom converter from HttpMethod to Json.
            </summary>
        </member>
        <member name="M:Vonage.Common.Serialization.HttpMethodJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.HttpMethodJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Net.Http.HttpMethod,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.MaybeJsonConverter`1">
            <summary>
                Represents a custom converter from Maybe to Json.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="M:Vonage.Common.Serialization.MaybeJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.MaybeJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,Vonage.Common.Monads.Maybe{`0},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.Serialization.PhoneNumberJsonConverter">
            <summary>
                Represents a custom converter from PhoneNumber to Json.
            </summary>
        </member>
        <member name="M:Vonage.Common.Serialization.PhoneNumberJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Common.Serialization.PhoneNumberJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Vonage.Common.PhoneNumber,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.TimeProvider">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.TimeProvider.Epoch">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Common.TimeProvider.UtcNow">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Common.UriHelpers">
            <summary>
                Exposes helpers methods when working with queries.
            </summary>
        </member>
        <member name="M:Vonage.Common.UriHelpers.BuildUri(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Builds a URI from a base URI and query parameters.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="parameters">The query parameters.</param>
            <returns>The URI.</returns>
        </member>
        <member name="T:Vonage.Common.Validation.InputValidation">
            <summary>
                Static methods to facilitate input validation.
            </summary>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyCountLowerOrEqualThan``2(``0,System.Collections.Generic.IEnumerable{``1},System.Int32,System.String)">
            <summary>
                Verifies if count lower or equal than specified threshold.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="maximumCount">The threshold.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <typeparam name="TItem">The collection item type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyHigherOrEqualThan``1(``0,System.Int32,System.Int32,System.String)">
            <summary>
                Verifies if higher or equal than specified threshold.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="minValue">The threshold.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyLength``1(``0,System.String,System.Int32,System.String)">
            <summary>
                Verifies string length.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The string.</param>
            <param name="expectedLength">The expected length.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyLengthHigherOrEqualThan``1(``0,System.String,System.Int32,System.String)">
            <summary>
                Verifies if length higher or equal than specified threshold.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="minimumLength">The threshold.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyLengthLowerOrEqualThan``1(``0,System.String,System.Int32,System.String)">
            <summary>
                Verifies if length lower or equal than specified threshold.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="maximumLength">The threshold.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyLowerOrEqualThan``1(``0,System.Int32,System.Int32,System.String)">
            <summary>
                Verifies if lower or equal than specified threshold.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The threshold.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyNotEmpty``1(``0,System.String,System.String)">
            <summary>
                Verifies if not null or empty.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The string.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyNotEmpty``2(``0,System.Collections.Generic.IEnumerable{``1},System.String)">
            <summary>
                Verifies if not null or empty.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The string.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <typeparam name="TElement">The nested element type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyNotEmpty``1(``0,System.Guid,System.String)">
            <summary>
                Verifies if not null or empty.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The guid.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyNotNegative``1(``0,System.Decimal,System.String)">
            <summary>
                Verifies if not negative.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The value.</param>
            <param name="name">The display name.</param>
            <typeparam name="T">The request type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Common.Validation.InputValidation.VerifyNotNull``2(``0,System.Collections.Generic.IEnumerable{``1},System.String)">
            <summary>
                Verifies if not null.
            </summary>
            <param name="request">The request.</param>
            <param name="value">The collection.</param>
            <param name="name">The display name.</param>
            <typeparam name="TA">The request type.</typeparam>
            <typeparam name="TB">The list content type.</typeparam>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.Common.VonageMaybeJsonConverter`1">
            <summary>
                Represents a custom converter from Maybe to Json, using specific conversion for Vonage entities.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="M:Vonage.Common.VonageMaybeJsonConverter`1.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="T:Vonage.Configuration">
            <summary>
                Represents the SDK Configuration.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApiKey">
            <summary>
                Retrieves the Api secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApiSecret">
            <summary>
                Retrieves the Api secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApplicationId">
            <summary>
                Retrieves the Application Id.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ApplicationKey">
            <summary>
                Retrieves the Application Key.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Client">
            <summary>
                Retrieves a configured HttpClient.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.ClientHandler">
            <summary>
                Exposes an HttpMessageHandler.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Instance">
            <summary>
                Retrieves the unique instance (Singleton).
            </summary>
        </member>
        <member name="P:Vonage.Configuration.RequestTimeout">
            <summary>
                The timeout (in seconds) applied to every request. If not provided, the default timeout will be applied.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.SecuritySecret">
            <summary>
                Retrieves the Security Secret.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.Settings">
            <summary>
                Exposes the configuration's content.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.SigningMethod">
            <summary>
                Retrieves the SigningMethod.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.UserAgent">
            <summary>
                Retrieves the User Agent.
            </summary>
        </member>
        <member name="P:Vonage.Configuration.VonageUrls">
            <summary>
                Provide urls to all Vonage APIs.
            </summary>
        </member>
        <member name="M:Vonage.Configuration.BuildCredentials">
            <summary>
                Builds a Credentials from the current Configuration.
            </summary>
            <returns>The Credentials.</returns>
        </member>
        <member name="M:Vonage.Configuration.BuildHttpClientForNexmo">
            <summary>
                Build an HttpClient for the Nexmo API.
            </summary>
            <returns>The HttpClient.</returns>
        </member>
        <member name="M:Vonage.Configuration.BuildHttpClientForVideo">
            <summary>
                Build an HttpClient for the Video API.
            </summary>
            <returns>The HttpClient.</returns>
        </member>
        <member name="M:Vonage.Configuration.BuildHttpClientForRegion(Vonage.VonageUrls.Region)">
            <summary>
                Build an HttpClient for a specific region.
            </summary>
            <param name="region">The selected region.</param>
            <returns>The HttpClient.</returns>
        </member>
        <member name="M:Vonage.Configuration.FromConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Builds a Configuration from an IConfiguration.
            </summary>
            <param name="configuration">The configuration properties.</param>
            <returns>The Configuration.</returns>
        </member>
        <member name="T:Vonage.VonageUrls">
            <summary>
                Represents Vonage API Urls.
            </summary>
        </member>
        <member name="P:Vonage.VonageUrls.Nexmo">
            <summary>
                The Nexmo Api Url.
            </summary>
        </member>
        <member name="P:Vonage.VonageUrls.Rest">
            <summary>
                The Nexmo REST Url.
            </summary>
        </member>
        <member name="P:Vonage.VonageUrls.Video">
            <summary>
                The Video Api Url.
            </summary>
        </member>
        <member name="M:Vonage.VonageUrls.FromConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Creates a set of urls from configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>A set of Urls.</returns>
        </member>
        <member name="M:Vonage.VonageUrls.Get(Vonage.VonageUrls.Region)">
            <summary>
                Retrieves a region-specific Url.
            </summary>
            <param name="region">The selected region.</param>
            <returns>The Url.</returns>
        </member>
        <member name="T:Vonage.VonageUrls.Region">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.VonageUrls.Region.US">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.VonageUrls.Region.EU">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.VonageUrls.Region.APAC">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Conversations.Callback">
            <summary>
                Represents the Callback information.
            </summary>
            <param name="Url">The url.</param>
            <param name="EventMask">The event mask.</param>
            <param name="Parameters">The url parameters.</param>
            <param name="Method">The Http Method.</param>
        </member>
        <member name="M:Vonage.Conversations.Callback.#ctor(System.Uri,System.String,Vonage.Conversations.CallbackParameters,System.Net.Http.HttpMethod)">
            <summary>
                Represents the Callback information.
            </summary>
            <param name="Url">The url.</param>
            <param name="EventMask">The event mask.</param>
            <param name="Parameters">The url parameters.</param>
            <param name="Method">The Http Method.</param>
        </member>
        <member name="P:Vonage.Conversations.Callback.Url">
            <summary>The url.</summary>
        </member>
        <member name="P:Vonage.Conversations.Callback.EventMask">
            <summary>The event mask.</summary>
        </member>
        <member name="P:Vonage.Conversations.Callback.Parameters">
            <summary>The url parameters.</summary>
        </member>
        <member name="P:Vonage.Conversations.Callback.Method">
            <summary>The Http Method.</summary>
        </member>
        <member name="T:Vonage.Conversations.CallbackParameters">
            <summary>
                Represents the Callback parameters.
            </summary>
            <param name="ApplicationId">The Vonage Application Id.</param>
            <param name="NccoUrl">The NCCO Url.</param>
        </member>
        <member name="M:Vonage.Conversations.CallbackParameters.#ctor(System.String,System.Uri)">
            <summary>
                Represents the Callback parameters.
            </summary>
            <param name="ApplicationId">The Vonage Application Id.</param>
            <param name="NccoUrl">The NCCO Url.</param>
        </member>
        <member name="P:Vonage.Conversations.CallbackParameters.ApplicationId">
            <summary>The Vonage Application Id.</summary>
        </member>
        <member name="P:Vonage.Conversations.CallbackParameters.NccoUrl">
            <summary>The NCCO Url.</summary>
        </member>
        <member name="T:Vonage.Conversations.Conversation">
            <summary>
                Represents a conversation.
            </summary>
            <param name="Id">The unique identifier for this conversation</param>
            <param name="Name">Your internal conversation name. Must be unique</param>
            <param name="DisplayName">The public facing name of the conversation</param>
            <param name="ImageUrl">An image URL that you associate with the conversation</param>
            <param name="State">The state the conversation is in.</param>
            <param name="SequenceNumber">The last Event ID in this conversation. This ID can be used to retrieve a specific event.</param>
            <param name="Timestamp">Represents the conversation history</param>
            <param name="Properties">Conversation properties</param>
            <param name="Links">Additional links</param>
        </member>
        <member name="M:Vonage.Conversations.Conversation.#ctor(System.String,System.String,Vonage.Common.Monads.Maybe{System.String},Vonage.Common.Monads.Maybe{System.Uri},System.String,System.Int32,Vonage.Conversations.Timestamp,Vonage.Common.Monads.Maybe{Vonage.Conversations.Properties},Vonage.Conversations.Links,Vonage.Common.Monads.Maybe{Vonage.Conversations.EmbeddedData})">
            <summary>
                Represents a conversation.
            </summary>
            <param name="Id">The unique identifier for this conversation</param>
            <param name="Name">Your internal conversation name. Must be unique</param>
            <param name="DisplayName">The public facing name of the conversation</param>
            <param name="ImageUrl">An image URL that you associate with the conversation</param>
            <param name="State">The state the conversation is in.</param>
            <param name="SequenceNumber">The last Event ID in this conversation. This ID can be used to retrieve a specific event.</param>
            <param name="Timestamp">Represents the conversation history</param>
            <param name="Properties">Conversation properties</param>
            <param name="Links">Additional links</param>
        </member>
        <member name="P:Vonage.Conversations.Conversation.Id">
            <summary>The unique identifier for this conversation</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.Name">
            <summary>Your internal conversation name. Must be unique</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.DisplayName">
            <summary>The public facing name of the conversation</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.ImageUrl">
            <summary>An image URL that you associate with the conversation</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.State">
            <summary>The state the conversation is in.</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.SequenceNumber">
            <summary>The last Event ID in this conversation. This ID can be used to retrieve a specific event.</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.Timestamp">
            <summary>Represents the conversation history</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.Properties">
            <summary>Conversation properties</summary>
        </member>
        <member name="P:Vonage.Conversations.Conversation.Links">
            <summary>Additional links</summary>
        </member>
        <member name="T:Vonage.Conversations.Timestamp">
            <summary>
                Represents the conversation history
            </summary>
            <param name="Created">The creation date</param>
            <param name="Updated">The last update date</param>
            <param name="Destroyed">The destroyed date</param>
        </member>
        <member name="M:Vonage.Conversations.Timestamp.#ctor(System.DateTimeOffset,Vonage.Common.Monads.Maybe{System.DateTimeOffset},Vonage.Common.Monads.Maybe{System.DateTimeOffset})">
            <summary>
                Represents the conversation history
            </summary>
            <param name="Created">The creation date</param>
            <param name="Updated">The last update date</param>
            <param name="Destroyed">The destroyed date</param>
        </member>
        <member name="P:Vonage.Conversations.Timestamp.Created">
            <summary>The creation date</summary>
        </member>
        <member name="P:Vonage.Conversations.Timestamp.Updated">
            <summary>The last update date</summary>
        </member>
        <member name="P:Vonage.Conversations.Timestamp.Destroyed">
            <summary>The destroyed date</summary>
        </member>
        <member name="T:Vonage.Conversations.Links">
            <summary>
                Represents additional links.
            </summary>
            <param name="Self">The link to the conversation</param>
        </member>
        <member name="M:Vonage.Conversations.Links.#ctor(Vonage.Common.HalLink)">
            <summary>
                Represents additional links.
            </summary>
            <param name="Self">The link to the conversation</param>
        </member>
        <member name="P:Vonage.Conversations.Links.Self">
            <summary>The link to the conversation</summary>
        </member>
        <member name="T:Vonage.Conversations.Properties">
            <summary>
                Represents the Conversation Properties.
            </summary>
            <param name="TimeToLive">Conversation time to live. After how many seconds an empty conversation is deleted.</param>
            <param name="Type">The conversation type.</param>
            <param name="CustomSortKey">The custom sort key.</param>
            <param name="CustomData">The custom data.</param>
        </member>
        <member name="M:Vonage.Conversations.Properties.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Represents the Conversation Properties.
            </summary>
            <param name="TimeToLive">Conversation time to live. After how many seconds an empty conversation is deleted.</param>
            <param name="Type">The conversation type.</param>
            <param name="CustomSortKey">The custom sort key.</param>
            <param name="CustomData">The custom data.</param>
        </member>
        <member name="P:Vonage.Conversations.Properties.TimeToLive">
            <summary>Conversation time to live. After how many seconds an empty conversation is deleted.</summary>
        </member>
        <member name="P:Vonage.Conversations.Properties.Type">
            <summary>The conversation type.</summary>
        </member>
        <member name="P:Vonage.Conversations.Properties.CustomSortKey">
            <summary>The custom sort key.</summary>
        </member>
        <member name="P:Vonage.Conversations.Properties.CustomData">
            <summary>The custom data.</summary>
        </member>
        <member name="T:Vonage.Conversations.EmbeddedData">
            <summary>
                Represents the conversation's embedded data.
            </summary>
            <param name="MemberId">The Member Id.</param>
            <param name="MemberState">The state that the member is in.</param>
        </member>
        <member name="M:Vonage.Conversations.EmbeddedData.#ctor(System.String,Vonage.Conversations.MemberState)">
            <summary>
                Represents the conversation's embedded data.
            </summary>
            <param name="MemberId">The Member Id.</param>
            <param name="MemberState">The state that the member is in.</param>
        </member>
        <member name="P:Vonage.Conversations.EmbeddedData.MemberId">
            <summary>The Member Id.</summary>
        </member>
        <member name="P:Vonage.Conversations.EmbeddedData.MemberState">
            <summary>The state that the member is in.</summary>
        </member>
        <member name="T:Vonage.Conversations.MemberState">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.MemberState.Unknown">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.MemberState.Invited">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.MemberState.Joined">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.MemberState.Left">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Conversations.IConversationsClient">
            <summary>
                Exposes Conversations features.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.CreateConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.CreateConversation.CreateConversationRequest})">
            <summary>
                Creates a conversation.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.DeleteConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.DeleteConversation.DeleteConversationRequest})">
            <summary>
                Deletes a conversation.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.GetConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetConversation.GetConversationRequest})">
            <summary>
                Retrieves a conversation.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.GetConversationsAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetConversations.GetConversationsRequest})">
            <summary>
                Retrieves conversations.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.GetUserConversationsAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetUserConversations.GetUserConversationsRequest})">
            <summary>
                Retrieves conversations for a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.IConversationsClient.UpdateConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.UpdateConversation.UpdateConversationRequest})">
            <summary>
                Updates a conversation.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.CreateConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.CreateConversation.CreateConversationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.DeleteConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.DeleteConversation.DeleteConversationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.GetConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetConversation.GetConversationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.GetConversationsAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetConversations.GetConversationsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.GetUserConversationsAsync(Vonage.Common.Monads.Result{Vonage.Conversations.GetUserConversations.GetUserConversationsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.ConversationsClient.UpdateConversationAsync(Vonage.Common.Monads.Result{Vonage.Conversations.UpdateConversation.UpdateConversationRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.CreateConversation.CreateConversationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.Callback">
            <summary>
            Conversation callback
            </summary>
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.DisplayName">
            <summary>
            The public facing name of the conversation
            </summary>
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.ImageUrl">
            <summary>
            An image URL that you associate with the conversation
            </summary>
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.Name">
            <summary>
            Your internal conversation name. Must be unique
            </summary>
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.Numbers">
            <summary>
            Conversation numbers
            </summary>
        </member>
        <member name="P:Vonage.Conversations.CreateConversation.CreateConversationRequest.Properties">
            <summary>
            Conversation properties
            </summary>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequest.Build">
            <summary>
                Initializes a builder for CreateConversationRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithCallback(Vonage.Conversations.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithDisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithImageUrl(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithNumber(Vonage.Conversations.INumber)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.CreateConversationRequestBuilder.WithProperties(Vonage.Conversations.Properties)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.CreateConversation.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithCallback(Vonage.Conversations.Callback)">
            <summary>
                Sets the Callback.
            </summary>
            <param name="value">The callback.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
                Sets the Display Name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
                Sets the Image Url.
            </summary>
            <param name="value">The Image Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the Name
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithNumber(Vonage.Conversations.INumber)">
            <summary>
                Set a Number to the conversation.
            </summary>
            <param name="value">The number.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.CreateConversation.IBuilderForOptional.WithProperties(Vonage.Conversations.Properties)">
            <summary>
                Sets the Properties.
            </summary>
            <param name="value">The properties.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.DeleteConversation.DeleteConversationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.DeleteConversation.DeleteConversationRequest.ConversationId">
            <summary>
                The conversation Id.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.DeleteConversation.DeleteConversationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.DeleteConversation.DeleteConversationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.DeleteConversation.DeleteConversationRequest.Parse(System.String)">
            <summary>
                Parses the input into a DeleteConversationRequest.
            </summary>
            <param name="conversationId">The conversation Id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Conversations.FetchOrder">
            <summary>
                Defines the ordering when fetching data.
            </summary>
        </member>
        <member name="F:Vonage.Conversations.FetchOrder.Ascending">
            <summary>
                The ascending order.
            </summary>
        </member>
        <member name="F:Vonage.Conversations.FetchOrder.Descending">
            <summary>
                The descending order.
            </summary>
        </member>
        <member name="T:Vonage.Conversations.GetConversation.GetConversationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.GetConversation.GetConversationRequest.ConversationId">
            <summary>
                The conversation Id.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetConversation.GetConversationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversation.GetConversationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversation.GetConversationRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetConversationRequest.
            </summary>
            <param name="conversationId">The conversation Id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Conversations.GetConversations.GetConversationsRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsRequest.Cursor">
            <summary>
                The cursor to start returning results from. You are not expected to provide this manually, but to follow the url
                provided in _links.next.href or _links.prev.href in the response which contains a cursor value.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsRequest.EndDate">
            <summary>
                Filter records that occurred before this point in time.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsRequest.StartDate">
            <summary>
                Filter records that occurred after this point in time.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequestBuilder.WithEndDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequestBuilder.WithOrder(Vonage.Conversations.FetchOrder)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsRequestBuilder.WithStartDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.GetConversations.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.IBuilderForOptional.WithEndDate(System.DateTimeOffset)">
            <summary>
                Sets the end date on the builder.
            </summary>
            <param name="value">The end date.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.IBuilderForOptional.WithOrder(Vonage.Conversations.FetchOrder)">
            <summary>
                Sets the order on the builder.
            </summary>
            <param name="value">The order.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.IBuilderForOptional.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.IBuilderForOptional.WithStartDate(System.DateTimeOffset)">
            <summary>
                Sets the start date on the builder.
            </summary>
            <param name="value">The start date.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.GetConversations.GetConversationsResponse">
            <summary>
            </summary>
            <param name="PageSize"></param>
            <param name="Embedded"></param>
            <param name="Links"></param>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsResponse.#ctor(System.Int32,Vonage.Conversations.GetConversations.EmbeddedConversations,Vonage.Common.HalLinks{Vonage.Conversations.GetConversations.GetConversationsHalLink})">
            <summary>
            </summary>
            <param name="PageSize"></param>
            <param name="Embedded"></param>
            <param name="Links"></param>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsResponse.PageSize">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsResponse.Embedded">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsResponse.Links">
            <summary></summary>
        </member>
        <member name="T:Vonage.Conversations.GetConversations.EmbeddedConversations">
            <summary>
                Represents a list of conversations.
            </summary>
            <param name="Conversations">List of conversations matching the provided filter.</param>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.EmbeddedConversations.#ctor(Vonage.Conversations.Conversation[])">
            <summary>
                Represents a list of conversations.
            </summary>
            <param name="Conversations">List of conversations matching the provided filter.</param>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.EmbeddedConversations.Conversations">
            <summary>List of conversations matching the provided filter.</summary>
        </member>
        <member name="T:Vonage.Conversations.GetConversations.GetConversationsHalLink">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsHalLink.#ctor(System.Uri)">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="P:Vonage.Conversations.GetConversations.GetConversationsHalLink.Href">
            <summary>Hyperlink reference.</summary>
        </member>
        <member name="M:Vonage.Conversations.GetConversations.GetConversationsHalLink.BuildRequest">
            <summary>
                Transforms the link into a GetUsersRequest using the cursor pagination.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.UserId">
            <summary>
                The User ID.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.Cursor">
            <summary>
                The cursor to start returning results from. You are not expected to provide this manually, but to follow the url
                provided in _links.next.href or _links.prev.href in the response which contains a cursor value.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.OrderBy">
            <summary>
                Defines the column used for ordering.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.StartDate">
            <summary>
                Filter records that occurred after this point in time.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.State">
            <summary>
                Defines the state of a conversation.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.IncludeCustomData">
            <summary>
                Defines whether custom data should be included or not.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.State">
            <summary>
                Defines the state of a conversation.
            </summary>
        </member>
        <member name="F:Vonage.Conversations.GetUserConversations.State.Invited">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.GetUserConversations.State.Joined">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Conversations.GetUserConversations.State.Left">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithOrder(Vonage.Conversations.FetchOrder)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithOrderBy(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithState(Vonage.Conversations.GetUserConversations.State)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.IncludeCustomData">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithStartDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsRequestBuilder.WithUserId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.IBuilderForUserId">
            <summary>
                Represents a builder for User Id.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForUserId.WithUserId(System.String)">
            <summary>
                Sets the User Id on the builder.
            </summary>
            <param name="value">The user id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.WithOrder(Vonage.Conversations.FetchOrder)">
            <summary>
                Sets the order on the builder.
            </summary>
            <param name="value">The order.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.WithOrderBy(System.String)">
            <summary>
                Sets the OrderBy on the builder.
            </summary>
            <param name="value">The order by.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.WithState(Vonage.Conversations.GetUserConversations.State)">
            <summary>
                Sets the state on the builder.
            </summary>
            <param name="value">The state.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.IncludeCustomData">
            <summary>
                Sets the request to include custom data.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.IBuilderForOptional.WithStartDate(System.DateTimeOffset)">
            <summary>
                Sets the start date on the builder.
            </summary>
            <param name="value">The start date.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.EmbeddedConversations">
            <summary>
                Represents a list of conversations.
            </summary>
            <param name="Conversations">List of conversations matching the provided filter.</param>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.EmbeddedConversations.#ctor(Vonage.Conversations.Conversation[])">
            <summary>
                Represents a list of conversations.
            </summary>
            <param name="Conversations">List of conversations matching the provided filter.</param>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.EmbeddedConversations.Conversations">
            <summary>List of conversations matching the provided filter.</summary>
        </member>
        <member name="T:Vonage.Conversations.GetUserConversations.GetUserConversationsHalLink">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsHalLink.#ctor(System.Uri)">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="P:Vonage.Conversations.GetUserConversations.GetUserConversationsHalLink.Href">
            <summary>Hyperlink reference.</summary>
        </member>
        <member name="M:Vonage.Conversations.GetUserConversations.GetUserConversationsHalLink.BuildRequest">
            <summary>
                Transforms the link into a GetUserConversationsRequest using the cursor pagination.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vonage.Conversations.INumber">
            <summary>
                Represents a contract for a channel number.
            </summary>
        </member>
        <member name="P:Vonage.Conversations.INumber.Type">
            <summary>
                The number type.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.INumber.Serialize(Vonage.Common.IJsonSerializer)">
            <summary>
                Serializes the number.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>The serialized number.</returns>
        </member>
        <member name="T:Vonage.Conversations.PhoneNumber">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Conversations.PhoneNumber.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Conversations.PhoneNumber.Number">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.PhoneNumber.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.PhoneNumber.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.SipNumber">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="M:Vonage.Conversations.SipNumber.#ctor(System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="P:Vonage.Conversations.SipNumber.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.SipNumber.Username">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.SipNumber.Password">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.SipNumber.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.SipNumber.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.AppNumber">
            <summary>
            </summary>
            <param name="User"></param>
        </member>
        <member name="M:Vonage.Conversations.AppNumber.#ctor(System.String)">
            <summary>
            </summary>
            <param name="User"></param>
        </member>
        <member name="P:Vonage.Conversations.AppNumber.User">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.AppNumber.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.AppNumber.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.WebSocketNumber">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
        </member>
        <member name="M:Vonage.Conversations.WebSocketNumber.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
        </member>
        <member name="P:Vonage.Conversations.WebSocketNumber.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.WebSocketNumber.ContentType">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.WebSocketNumber.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.WebSocketNumber.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.VbcNumber">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="M:Vonage.Conversations.VbcNumber.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="P:Vonage.Conversations.VbcNumber.Extension">
            <summary></summary>
        </member>
        <member name="P:Vonage.Conversations.VbcNumber.Type">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.VbcNumber.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.UpdateConversation.UpdateConversationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.Callback">
            <summary>
            Conversation callback
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.ConversationId">
            <summary>
            Conversation ID
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.DisplayName">
            <summary>
            The public facing name of the conversation
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.ImageUrl">
            <summary>
            An image URL that you associate with the conversation
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.Name">
            <summary>
            Your internal conversation name. Must be unique
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.Numbers">
            <summary>
            Conversation numbers
            </summary>
        </member>
        <member name="P:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.Properties">
            <summary>
            Conversation properties
            </summary>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.Build">
            <summary>
                Initializes a builder for UpdateConversationRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithCallback(Vonage.Conversations.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithConversationId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithDisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithImageUrl(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithNumber(Vonage.Conversations.INumber)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.UpdateConversationRequestBuilder.WithProperties(Vonage.Conversations.Properties)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Conversations.UpdateConversation.IBuilderForConversationId">
            <summary>
                Represents a builder for the ConversationId.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForConversationId.WithConversationId(System.String)">
            <summary>
                Sets the Conversation Id.
            </summary>
            <param name="value">The conversation id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Conversations.UpdateConversation.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithCallback(Vonage.Conversations.Callback)">
            <summary>
                Sets the Callback.
            </summary>
            <param name="value">The callback.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
                Sets the Display Name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
                Sets the Image Url.
            </summary>
            <param name="value">The Image Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the Name
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithNumber(Vonage.Conversations.INumber)">
            <summary>
                Set a Number to the conversation.
            </summary>
            <param name="value">The number.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversations.UpdateConversation.IBuilderForOptional.WithProperties(Vonage.Conversations.Properties)">
            <summary>
                Sets the Properties.
            </summary>
            <param name="value">The properties.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Conversions.ConversionClient.SmsConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Conversions.ConversionClient.VoiceConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.Delivered">
            <summary>
            Set to true if your user replied to the message you sent. Otherwise, set to false. Note: for curl, use 0 and 1.
            </summary>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.MessageId">
            <summary>
            The ID you receive in the response to a request. * From the Verify API - use the event_id in the response to Verify Check. 
            * From the SMS API - use the message-id * From the Text-To-Speech API - use the call-id * From the Text-To-Speech-Prompt API - use the call-id
            </summary>
        </member>
        <member name="P:Vonage.Conversions.ConversionRequest.TimeStamp">
            <summary>
            When the user completed your call-to-action (e.g. visited your website, installed your app) 
            in UTC±00:00 format: yyyy-MM-dd HH:mm:ss. If you do not set this parameter, Vonage uses the time it receives this request.
            </summary>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.SmsConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the SMS message identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Conversions.IConversionClient.VoiceConversionAsync(Vonage.Conversions.ConversionRequest,Vonage.Request.Credentials)">
            <summary>
            Send a Conversion API request with information about the Call or Text-To-Speech identified by message-id. 
            Vonage uses your conversion data and internal information about message-id to help improve our routing of messages in the future.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="F:Vonage.Cryptography.SmsSignatureGenerator._lookup32">
            http://stackoverflow.com/questions/311165/how-do-you-convert-byte-array-to-hexadecimal-string-and-vice-versa/24343727#24343727
            We're not going to going with the unchecked version. Seems overkill for now.
        </member>
        <member name="T:Vonage.Extensions.ServiceCollectionExtensions">
            <summary>
                Extensions for IServiceCollection to register VonageClient.
            </summary>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,Vonage.Request.Credentials)">
            <summary>
                Adds a scoped service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="credentials">Represents credentials for Vonage APIs.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Adds a scoped service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="configuration">The configuration properties to use.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Vonage.Request.Credentials)">
            <summary>
                Adds a transient service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="credentials">Represents credentials for Vonage APIs.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="M:Vonage.Extensions.ServiceCollectionExtensions.AddVonageClientTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Adds a transient service of <see cref="T:Vonage.VonageClient" />, and all api-specific clients, to the specified
                IServiceCollection.
            </summary>
            <param name="services">Specifies the contract for a collection of service descriptors.</param>
            <param name="configuration">The configuration properties to use.</param>
            <returns>The updated services.</returns>
        </member>
        <member name="T:Vonage.ITokenGenerator">
            <summary>
                Represents a token generator.
            </summary>
        </member>
        <member name="M:Vonage.ITokenGenerator.GenerateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Generates a token.
            </summary>
            <param name="applicationId">The application Id.</param>
            <param name="privateKey">The application private key.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Vonage.ITokenGenerator.GenerateToken(Vonage.Request.Credentials,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Generates a token.
            </summary>
            <param name="credentials">The application credentials.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="T:Vonage.Jwt">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.GenerateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.GenerateToken(Vonage.Request.Credentials,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Jwt.CreateToken(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Creates a token from application id and private key.
            </summary>
            <param name="appId">The application id.</param>
            <param name="privateKey">The private key.</param>
            <param name="claims">The additional claims.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Vonage.Jwt.CreateTokenWithClaims(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Creates a token with custom claims.
            </summary>
            <param name="appId">The application Id.</param>
            <param name="privateKey">The private key.</param>
            <param name="claims">The custom claims.</param>
            <returns>The token.</returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageAuthenticationException">When the private key is null or whitespace.</exception>
        </member>
        <member name="M:Vonage.Jwt.VerifySignature(System.String,System.String)">
            <summary>
            Verifies if a token has been generated using the provided private key.
            </summary>
            <param name="token">The token to verify.</param>
            <param name="privateKey">The private key.</param>
            <returns>Whether the token signature is valid.</returns>
        </member>
        <member name="T:Vonage.Meetings.Common.Recording">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.EndedAt">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Id">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.SessionId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.StartedAt">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.Status">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Recording.RecordingLinks">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Recording.RecordingLinks.Url">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RecordingStatus">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Started">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Stopped">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Paused">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RecordingStatus.Uploaded">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room">
            <summary>
                Represents a Room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.AvailableFeatures">
            <summary>
                Provides options to customize the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.CallbackUrls">
            <summary>
                Provides callback URLs to listen to events
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.CreatedAt">
            <summary>
                The time for when the room was created, expressed in ISO 8601 format
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.DisplayName">
            <summary>
                The name of the meeting room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ExpiresAfterUse">
            <summary>
                Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ExpiresAt">
            <summary>
                The time for when the room will be expired, expressed in ISO 8601 format
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Id">
            <summary>
                The room UUID
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.InitialJoinOptions">
            <summary>
                Sets the default options for participants
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.IsAvailable">
            <summary>
                Once a room becomes unavailable, no new sessions can be created under it
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.JoinApprovalLevel">
            <summary>
                The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will
                join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting
                room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Links">
            <summary>
                Represents HAL links for navigation purposes
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.MeetingCode">
            <summary>
                The meeting PIN number
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Metadata">
            <summary>
                Free text that can be attached to a room. This will be passed in the form of a header in events related to this
                room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Recording">
            <summary>
                An object containing various meeting recording options
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.ThemeId">
            <summary>
                The theme id for the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Type">
            <summary>
                The type of meeting which can be instant or long term. An instant is active for 10 minutes until the first
                participant joins the roo, and remains active for 10 minutes after the last participant leaves. A long term room
                expires after a specific date
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.RecordingOptions">
            <summary>
                An object containing various meeting recording options
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RecordingOptions.AutoRecord">
            <summary>
                Automatically record all sessions in this room. Recording cannot be stopped when this is set to true.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RecordingOptions.RecordOnlyOwner">
            <summary>
                Record only the owner screen or any share screen of the video.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.JoinOptions">
            <summary>
                Sets the default options for participants
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.JoinOptions.MicrophoneState">
            <summary>
                Set the default microphone option for users in the pre-join screen of this room.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.Callback">
            <summary>
                Provides callback URLs to listen to events
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.RecordingsCallbackUrl">
            <summary>
                Callback url for recordings events, overrides application level recordings callback url.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.RoomsCallbackUrl">
            <summary>
                Callback url for rooms events, overrides application level rooms callback url.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Callback.SessionsCallbackUrl">
            <summary>
                Callback url for sessions events, overrides application level sessions callback url.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.Features">
            <summary>
                Provides options to customize the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsCaptionsAvailable">
            <summary>
                Determine if captions are available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsChatAvailable">
            <summary>
                Determine if chat feature is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsLocaleSwitcherAvailable">
            <summary>
                Determine if the locale switcher is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsRecordingAvailable">
            <summary>
                Determine if recording feature is available in the UI.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.Features.IsWhiteboardAvailable">
            <summary>
                Determine if whiteboard feature is available in the UI.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Room.RoomLinks">
            <summary>
                Provides links to join the meeting room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RoomLinks.GuestUrl">
            <summary>
                The link to join the meeting as participant, using the meeting code
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Room.RoomLinks.HostUrl">
            <summary>
                The link to join the meeting as host, using the meeting code
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomApprovalLevel">
            <summary>
                Represents the level of approval needed to join the meeting in the room.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.None">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.AfterOwnerOnly">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomApprovalLevel.ExplicitApproval">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomMicrophoneState">
            <summary>
                Defines the default microphone option for users in the pre-join screen of this room.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.Default">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.On">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomMicrophoneState.Off">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.RoomType">
            <summary>
                Defines the room type.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomType.Instant">
            <summary>
            An instant is active for 10 minutes until the first participant joins the roo, and remains active for 10 minutes after the last participant leaves
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.RoomType.LongTerm">
            <summary>
            A long term room expires after a specific date
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.Theme">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.AccountId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ApplicationId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandedFavicon">
            <summary>
            The favicon key in storage system
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandedFaviconUrl">
            <summary>
            The favicon link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageColored">
            <summary>
            Colored logo's key in storage system.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageColoredUrl">
            <summary>
            Colored logo's link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageWhite">
            <summary>
            White logo's key in storage system.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandImageWhiteUrl">
            <summary>
            White logo's link.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.Domain">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.Common.Theme.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.ThemeDomain">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeDomain.VCP">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeDomain.VBC">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.ThemeLogoType">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.White">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.Colored">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.ThemeLogoType.Favicon">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.Common.UiSettings">
            <summary>
                Provides options to customize the user interface
            </summary>
            <param name="Language">The desired language of the UI.</param>
        </member>
        <member name="M:Vonage.Meetings.Common.UiSettings.#ctor(Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage)">
            <summary>
                Provides options to customize the user interface
            </summary>
            <param name="Language">The desired language of the UI.</param>
        </member>
        <member name="P:Vonage.Meetings.Common.UiSettings.Language">
            <summary>The desired language of the UI.</summary>
        </member>
        <member name="T:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage">
            <summary>
                The desired language of the UI.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.En">
            <summary>
                English language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.He">
            <summary>
                Hebrew language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Es">
            <summary>
                Spanish language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.PtBr">
            <summary>
                Portuguese-Brazilian language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.It">
            <summary>
                Italian language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Ca">
            <summary>
                Catalan language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.Fr">
            <summary>
                French language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.De">
            <summary>
                German language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.ZhTw">
            <summary>
                Chinese-Taiwan language.
            </summary>
        </member>
        <member name="F:Vonage.Meetings.Common.UiSettings.UserInterfaceLanguage.ZhCn">
            <summary>
                Chinese-Mainland language.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.CreateRoomRequest">
            <summary>
                Represents a request to create a room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.AvailableFeatures">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.CallbackUrls">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ExpireAfterUse">
            <summary>
            Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ExpiresAt">
            <summary>
            The time for when the room will be expired. Required only for long-term room creation.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.InitialJoinOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.JoinApprovalLevel">
            <summary>
            The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.Metadata">
            <summary>
            Free text that can be attached to a room. This will be passed in the form of a header in events related to this room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.RecordingOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.ThemeId">
            <summary>
            The theme id for the room
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.Type">
            <summary>
            Represents the type of the room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateRoom.CreateRoomRequest.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.Build">
            <summary>
                Initializes a builder for CreateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.AsLongTermRoom(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.ExpireAfterUse">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithDisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithRecordingOptions(Vonage.Meetings.Common.Room.RecordingOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithThemeId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.CreateRoomRequestBuilder.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.IBuilderForDisplayName">
            <summary>
                Represents a builder for DisplayName.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForDisplayName.WithDisplayName(System.String)">
            <summary>
                Sets the DisplayName.
            </summary>
            <param name="value">The display name.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Meetings.CreateRoom.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.AsLongTermRoom(System.DateTime)">
            <summary>
                Sets the room as long-term.
            </summary>
            <param name="expiration">The expiration date.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.ExpireAfterUse">
            <summary>
                Sets the room to expire after use.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <summary>
                Sets the approval level on the builder.
            </summary>
            <param name="level">The approval level.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <summary>
                Sets the callback urls on the builder.
            </summary>
            <param name="callbackUrls">The callback urls.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <summary>
                Sets the available features on the builder.
            </summary>
            <param name="availableFeatures">The available features.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <summary>
                Sets the join options on the builder.
            </summary>
            <param name="options">The join options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithMetadata(System.String)">
            <summary>
                Sets the medata on the builder.
            </summary>
            <param name="data">The data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithRecordingOptions(Vonage.Meetings.Common.Room.RecordingOptions)">
            <summary>
                Sets the recording options on the builder.
            </summary>
            <param name="options">The recording options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithThemeId(System.String)">
            <summary>
                Sets the theme  identifier on the builder.
            </summary>
            <param name="theme">The theme identifier.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateRoom.IBuilderForOptional.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <summary>
                Sets the options to customize the user interface.
            </summary>
            <param name="value">The options to customize the user interface.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.CreateThemeRequest">
            <summary>
                Represents a request to create a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.CreateTheme.CreateThemeRequest.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithBrand(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithColor(System.Drawing.Color)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.CreateThemeRequestBuilder.WithShortCompanyUrl(System.Uri)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForBrand">
            <summary>
            Represents a builder for Brand.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForBrand.WithBrand(System.String)">
            <summary>
                Sets the brand.
            </summary>
            <param name="value">The brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForColor">
            <summary>
                Represents a builder for Color.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForColor.WithColor(System.Drawing.Color)">
            <summary>
                Sets the brand.
            </summary>
            <param name="value">The brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.CreateTheme.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.CreateTheme.IBuilderForOptional.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest">
            <summary>
                Represents a request to delete a recording.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.RecordingId">
            <summary>
                The recording id.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteRecording.DeleteRecordingRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a DeleteRecordingRequest.
            </summary>
            <param name="recordingId">The recording id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.DeleteThemeRequest">
            <summary>
                Represents a request to delete a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.ForceDelete">
            <summary>
                Delete the theme even if theme is used by rooms or as application default theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.ThemeId">
            <summary>
                The theme id.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.WithForceDelete">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.DeleteThemeRequestBuilder.WithThemeId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the ThemeId.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.DeleteTheme.IOptionalBuilder">
            <summary>
                Represents an optional builder.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.DeleteTheme.IOptionalBuilder.WithForceDelete">
            <summary>
                Delete the theme even if theme is used by rooms or as application default theme.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest">
            <summary>
                Represents a request to retrieve dial-in numbers.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.Default">
            <summary>
                The default request.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetDialNumbers.GetDialNumbersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.Locale">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetDialNumbers.GetDialNumbersResponse.Number">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRecording.GetRecordingRequest">
            <summary>
             Represents a request to retrieve a recording details.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecording.GetRecordingRequest.RecordingId">
            <summary>
                The recording identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecording.GetRecordingRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetRecordingRequest.
            </summary>
            <param name="recordingId">The recording identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsRequest">
            <summary>
                Represents a request to retrieve recordings from a session.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRecordings.GetRecordingsRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetRecordingsRequest.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsResponse.Embedded">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRecordings.GetRecordingsResponse.EmbeddedResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRecordings.GetRecordingsResponse.EmbeddedResponse.Recordings">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRoom.GetRoomRequest">
            <summary>
                Represents a request to retrieve a room details.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoom.GetRoomRequest.RoomId">
            <summary>
                The room identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoom.GetRoomRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetRoomRequest.
            </summary>
            <param name="roomId">The room identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRooms.GetRoomsRequest">
            <summary>
                Represents a request to retrieve all rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.EndId">
            <summary>
                The ID to end returning events at (excluding end_id itself).
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.PageSize">
            <summary>
                The maximum number of rooms in the current page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsRequest.StartId">
            <summary>
                The ID to start returning events at.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.Build">
            <summary>
                Build the request with default values.
            </summary>
            <returns>The request.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithEndId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRooms.GetRoomsRequestBuilder.WithStartId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetRooms.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithEndId(System.Int32)">
            <summary>
                Sets the end id on the builder.
            </summary>
            <param name="value">The ID to end returning events at (excluding end_id itself).</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The maximum number of rooms in the current page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRooms.IOptionalBuilder.WithStartId(System.Int32)">
            <summary>
                Sets the start id on the builder.
            </summary>
            <param name="value"> The ID to start returning events at.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRooms.GetRoomsResponse">
            <summary>
            Represents the response for a GetRoomsRequest.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.PageSize">
            <summary>
                The number of results returned on this page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.Rooms">
            <summary>
            List of all accessible rooms
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRooms.GetRoomsResponse.TotalItems">
            <summary>
                The overall number of rooms.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest">
            <summary>
                Represents a request to get all rooms associated with a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.EndId">
            <summary>
                The ID to end returning events at (excluding end_id itself).
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.PageSize">
            <summary>
                The maximum number of rooms in the current page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.StartId">
            <summary>
                The ID to start returning events at.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithEndId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithStartId(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequestBuilder.WithThemeId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the ThemeId.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithEndId(System.Int32)">
            <summary>
                Sets the end id on the builder.
            </summary>
            <param name="value">The ID to end returning events at (excluding end_id itself).</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The maximum number of rooms in the current page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.GetRoomsByTheme.IOptionalBuilder.WithStartId(System.Int32)">
            <summary>
                Sets the start id on the builder.
            </summary>
            <param name="value"> The ID to start returning events at.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.Links">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.PageSize">
            <summary>
                The number of results returned on this page.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeResponse.Rooms">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Meetings.GetTheme.GetThemeRequest">
            <summary>
                Represents a request for retrieving a theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetTheme.GetThemeRequest.ThemeId">
            <summary>
                The theme identifier.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetTheme.GetThemeRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetThemeRequest.
            </summary>
            <param name="themeId">The theme identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.GetThemes.GetThemesRequest">
            <summary>
                Represents a request to retrieve all themes.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.GetThemes.GetThemesRequest.Default">
            <summary>
                The default request.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.GetThemes.GetThemesRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.GetThemes.GetThemesRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.IMeetingsClient">
            <summary>
                Exposes Meetings features.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.CreateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateRoom.CreateRoomRequest})">
            <summary>
                Creates a room.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.CreateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateTheme.CreateThemeRequest})">
            <summary>
                Creates a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.DeleteRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteRecording.DeleteRecordingRequest})">
            <summary>
                Deletes a recording.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.DeleteThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteTheme.DeleteThemeRequest})">
            <summary>
                Deletes a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetDialNumbersAsync">
            <summary>
                Retrieves numbers that can be used to dial into a meeting.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecording.GetRecordingRequest})">
            <summary>
                Retrieves a recording details.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRecordingsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecordings.GetRecordingsRequest})">
            <summary>
                Retrieves recordings from a session.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoom.GetRoomRequest})">
            <summary>
                Retrieves a room details.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRooms.GetRoomsRequest})">
            <summary>
                Retrieves all rooms.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetRoomsByThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest})">
            <summary>
                Retrieves rooms by theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetTheme.GetThemeRequest})">
            <summary>
                Retrieves a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.GetThemesAsync">
            <summary>
                Retrieves all themes.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateApplicationAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateApplication.UpdateApplicationRequest})">
            <summary>
                Updates an application.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateRoom.UpdateRoomRequest})">
            <summary>
                Updates a room.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateTheme.UpdateThemeRequest})">
            <summary>
                Updates a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.IMeetingsClient.UpdateThemeLogoAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest})">
            <summary>
                Updates a logo image and associates it with a theme.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.MeetingsClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration,System.IO.Abstractions.IFileSystem)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
            <param name="fileSystem">The file system.</param>
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.CreateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateRoom.CreateRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.CreateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.CreateTheme.CreateThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.DeleteRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteRecording.DeleteRecordingRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.DeleteThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.DeleteTheme.DeleteThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetDialNumbersAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRecordingAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecording.GetRecordingRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRecordingsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRecordings.GetRecordingsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoom.GetRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomsAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRooms.GetRoomsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetRoomsByThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetRoomsByTheme.GetRoomsByThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.GetTheme.GetThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.GetThemesAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateApplicationAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateApplication.UpdateApplicationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateRoomAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateRoom.UpdateRoomRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateThemeAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateTheme.UpdateThemeRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.MeetingsClient.UpdateThemeLogoAsync(Vonage.Common.Monads.Result{Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest">
            <summary>
                Represents a request to update an existing application.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.DefaultThemeId">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateApplication.UpdateApplicationRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a UpdateApplicationRequest.
            </summary>
            <param name="themeId">The theme id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse">
            <summary>
                Represents a response when updating an application.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.AccountId">
            <summary>
                The applications account id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.ApplicationId">
            <summary>
                The application id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateApplication.UpdateApplicationResponse.DefaultThemeId">
            <summary>
                The application default theme id.
            </summary>
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.UpdateRoomRequest">
            <summary>
                Represents a request to update a room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.AvailableFeatures">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.CallbackUrls">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ExpireAfterUse">
            <summary>
            Close the room after a session ends. Only relevant for long_term rooms.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ExpiresAt">
            <summary>
            The time for when the room will be expired, expressed in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.InitialJoinOptions">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.JoinApprovalLevel">
            <summary>
            The level of approval needed to join the meeting in the room. When set to "after_owner_only" the participants will join the meeting only after the host joined. When set to "explicit_approval" the participants will join the waiting room and the host will deny/approve them.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.RoomId">
            <summary>
            The room id.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.ThemeId">
            <summary>
            The theme id for the room.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.UserInterfaceSettings">
            <summary>
                Provides options to customize the user interface.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.Build">
            <summary>
                Initializes a builder for UpdateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.Create">
            <summary>
                Creates the request.
            </summary>
            <returns>The request if validation succeeded, a failure if it failed.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.ExpireAfterUse">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithExpiresAt(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithRoomId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithThemeId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.UpdateRoomRequestBuilder.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.IBuilderForRoomId">
            <summary>
                Represents a builder for RoomId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForRoomId.WithRoomId(System.Guid)">
            <summary>
                Sets the RoomId.
            </summary>
            <param name="value">The room Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateRoom.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.ExpireAfterUse">
            <summary>
                Sets the room to expire after use.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithApprovalLevel(Vonage.Meetings.Common.RoomApprovalLevel)">
            <summary>
                Sets the approval level on the builder.
            </summary>
            <param name="level">The approval level.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithCallback(Vonage.Meetings.Common.Room.Callback)">
            <summary>
                Sets the callback urls on the builder.
            </summary>
            <param name="callbackUrls">The callback urls.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithExpiresAt(System.DateTime)">
            <summary>
            </summary>
            <param name="expiration"></param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithFeatures(Vonage.Meetings.Common.Room.Features)">
            <summary>
                Sets the available features on the builder.
            </summary>
            <param name="availableFeatures">The available features.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithInitialJoinOptions(Vonage.Meetings.Common.Room.JoinOptions)">
            <summary>
                Sets the join options on the builder.
            </summary>
            <param name="options">The join options.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithThemeId(System.String)">
            <summary>
                Sets the theme  identifier on the builder.
            </summary>
            <param name="theme">The theme identifier.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateRoom.IBuilderForOptional.WithUserInterfaceSettings(Vonage.Meetings.Common.UiSettings)">
            <summary>
                Sets the options to customize the user interface.
            </summary>
            <param name="value">The options to customize the user interface.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.UpdateThemeRequest">
            <summary>
                Represents a request to update an existing theme.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.BrandText">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.MainColor">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ShortCompanyUrl">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ThemeId">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.ThemeName">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <param name="themeId">The theme id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithBrandText(System.String)">
            <summary>
                Sets the brand text on the builder.
            </summary>
            <param name="value">The brand text.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithColor(System.Drawing.Color)">
            <summary>
                Sets the main color on the builder.
            </summary>
            <param name="value">The color.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.UpdateThemeRequestBuilder.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.IBuilderForThemeId">
            <summary>
                Represents a builder for ThemeId.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForThemeId.WithThemeId(System.Guid)">
            <summary>
                Sets the theme Id.
            </summary>
            <param name="value">The theme Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Meetings.UpdateTheme.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithBrandText(System.String)">
            <summary>
                Sets the brand text on the builder.
            </summary>
            <param name="value">The brand text.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithColor(System.Drawing.Color)">
            <summary>
                Sets the main color on the builder.
            </summary>
            <param name="value">The color.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the theme name on the builder.
            </summary>
            <param name="value">The theme name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateTheme.IBuilderForOptional.WithShortCompanyUrl(System.Uri)">
            <summary>
                Sets the company Url on the builder.
            </summary>
            <param name="value">The company Url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.FinalizeLogoRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.FinalizeLogoRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.GetUploadLogosUrlRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.GetUploadLogosUrlRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest">
            <summary>
                Represents a request to update a theme logo.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.FilePath">
            <summary>
                Absolute path to the logo image.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.ThemeId">
            <summary>
                Id of the theme which the logo will be associated with.
            </summary>
        </member>
        <member name="P:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.Type">
            <summary>
                The logo type to upload.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoRequest.Parse(System.Guid,Vonage.Meetings.Common.ThemeLogoType,System.String)">
            <summary>
                Parses the input into a UpdateThemeLogoRequest.
            </summary>
            <param name="themeId">Id of the theme which the logo will be associated with.</param>
            <param name="logoType">The logo type to upload.</param>
            <param name="filePath">Absolute path to the logo image.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="F:Vonage.Meetings.UpdateThemeLogo.UpdateThemeLogoUseCase.NoMatchingLogo">
            <summary>
                Indicates no matching logo was found.
            </summary>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadDetails.ToDictionary">
            <summary>
                Converts data to a dictionary.
            </summary>
            <returns>The data dictionary.</returns>
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadLogoRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Meetings.UpdateThemeLogo.UploadLogoRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Attachment">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Messages.Attachment.Url">
            <summary>
                The URL of the attachment.
            </summary>
        </member>
        <member name="T:Vonage.Messages.CaptionedAttachment">
            <summary>
            Represents an attachment to a message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.CaptionedAttachment.Caption">
            <summary>
                Additional text to accompany the attachment.
            </summary>
        </member>
        <member name="P:Vonage.Messages.CaptionedAttachment.Url">
            <summary>
               The publicly accessible URL of the image attachment. The image file is available for 48 hours after it is created. Supported types are .jpg, .jpeg, and .png
            </summary>
        </member>
        <member name="T:Vonage.Messages.IMessage">
            <summary>
                Represents a message to be sent by an IMessageClient.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.Channel">
            <summary>
                The channel to send to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.ClientRef">
            <summary>
                Client reference of up to 40 characters. The reference will be present in every message status.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.From">
            <summary>
                The phone number of the message sender in the E.164 format. Don't use a leading + or 00 when entering a phone
                number,
                start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's
                will
                work as well.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.MessageType">
            <summary>
                The type of message to send.
            </summary>
        </member>
        <member name="P:Vonage.Messages.IMessage.To">
            <summary>
                The phone number of the message recipient in the E.164 format. Don't use a leading + or 00 when entering a phone
                number,
                start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.MessageRequestBase.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.MessagesChannel">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.SMS">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.MMS">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.WhatsApp">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.Messenger">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesChannel.ViberService">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.Messages.MessagesClient">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Messages.MessagesClient.#ctor(Vonage.Request.Credentials)">
            <summary>
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Vonage.Messages.MessagesClient.SendAsync(Vonage.Messages.IMessage)">
            <summary>
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Messages.MessagesMessageType">
            <summary>
            Defines the message type on a request.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Vcard">
            <summary>
            Vcard.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Audio">
            <summary>
            Audio.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Template">
            <summary>
            Template.
            </summary>
        </member>
        <member name="F:Vonage.Messages.MessagesMessageType.Sticker">
            <summary>
            Sticker.
            </summary>
        </member>
        <member name="T:Vonage.Messages.MessagesResponse">
            <summary>
            </summary>
            <param name="MessageUuid"></param>
        </member>
        <member name="M:Vonage.Messages.MessagesResponse.#ctor(System.Guid)">
            <summary>
            </summary>
            <param name="MessageUuid"></param>
        </member>
        <member name="P:Vonage.Messages.MessagesResponse.MessageUuid">
            <summary></summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerRequestData.Category">
            <summary>
                The use of different category tags enables the business to send messages for
                different use cases. For Facebook Messenger they need to comply with their
                Messaging Types policy. Vonage maps our category to their messaging_type.
                If message_tag is used, then an additional tag for that type is mandatory.
                By default Vonage sends the response category to Facebook Messenger.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerRequestData.Tag">
            <summary>
                A tag describing the type and relevance of the 1:1 communication between your app and the
                end user. A full list of available tags is available
                <a href="https://developers.facebook.com/docs/messenger-platform/send-messages/message-tags">here</a>
            </summary>
        </member>
        <member name="P:Vonage.Messages.Messenger.MessengerTextRequest.Text">
            <summary>
                The text of message to send; limited to 640 characters, including unicode.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.IViberMessage">
            <summary>
                Represents a Viber message to be sent by an IMessageClient.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.IViberMessage.Data">
            <summary>
                Gets or sets Viber-specific information.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberAction">
            <summary>
                Represents information for Viber action buttons.
            </summary>
            <param name="Url">A URL which is requested when the action button is clicked.</param>
            <param name="Text">Text which is rendered on the action button.</param>
        </member>
        <member name="M:Vonage.Messages.Viber.ViberAction.#ctor(System.String,System.String)">
            <summary>
                Represents information for Viber action buttons.
            </summary>
            <param name="Url">A URL which is requested when the action button is clicked.</param>
            <param name="Text">Text which is rendered on the action button.</param>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberAction.Url">
            <summary>A URL which is requested when the action button is clicked.</summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberAction.Text">
            <summary>Text which is rendered on the action button.</summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberFileRequest">
            <summary>
                Represents a request to send a file message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.File">
            <summary>
                The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberFileRequest.FileInformation">
            <summary>
                Represents the file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.FileInformation.Name">
            <summary>
                The name and extension of the file.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberFileRequest.FileInformation.Url">
            <summary>
                The URL for the file attachment or the path for the location of the file attachment. If name is included, can just
                be the path. If name is not included, must include the filename and extension.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberImageRequest">
            <summary>
                Represents a request to send an image message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.Image">
            <summary>
               The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberImageRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberMessageCategory">
            <summary>
                Represents a category tag for Viber messages.
            </summary>
        </member>
        <member name="F:Vonage.Messages.Viber.ViberMessageCategory.Transaction">
            <summary>
             Transaction.
            </summary>
        </member>
        <member name="F:Vonage.Messages.Viber.ViberMessageCategory.Promotion">
            <summary>
            Promotion.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberRequestData">
            <summary>
                Represents Viber-specific information.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Action">
            <summary>
                The node for Viber action buttons.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Category">
            <summary>
                The use of different category tags enables the business to send messages for
                different use cases. For Viber Service Messages the first message sent from a
                business to a user must be personal, informative and a targeted message - not promotional.
                By default Vonage sends the transaction category to Viber Service Messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Duration">
            <summary>
                The duration of the video in seconds.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.FileSize">
            <summary>
                The file size of the video in MB.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.TTL">
            <summary>
                Set the time-to-live of message to be delivered in seconds. i.e. if the
                message is not delivered in 600 seconds then delete the message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberRequestData.Type">
            <summary>
                Viber-specific type definition. To use "template", please contact your
                Vonage Account Manager to setup your templates.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberTextRequest">
            <summary>
                Represents a request to send a text message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.Text">
            <summary>
                The text of message to send; limited to 640 characters, including unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberTextRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.Viber.ViberVideoRequest">
            <summary>
                Represents a request to send a video message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Data">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.Video">
            <summary>
                The video information of the request.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation">
            <summary>
                Represents the video information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.Caption">
            <summary>
                Text caption to accompany message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.ThumbUrl">
            <summary>
                URL to an image file for a thumbnail preview of the video.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Viber.ViberVideoRequest.VideoInformation.Url">
            <summary>
                Publicly accessible URL of the video attachment. Supports file types .mp4 and .3gpp.
                Only supports video codec H.264 and audio codec AAC.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.MessageWebhookResponse">
            <summary>
            Represents a webhook response for Messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Audio">
            <summary>
            Channel specific metadata for Audio.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Channel">
            <summary>
            The channel the message came in on.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.ClientReference">
            <summary>
            Client reference of up to 100 characters. The reference will be present in every message status.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Context">
            <summary>
            This is only present for the Inbound Message where the user is quoting another message. It provides information about the quoted message and/or the product message being responded to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.File">
            <summary>
            Channel specific metadata for File.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.From">
            <summary>
            The phone number of the message sender in the E.164 format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, see  <see href="https://developer.vonage.com/en/messaging/sms/guides/country-specific-features#country-specific-features">Global Messaging</see> for more details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Image">
            <summary>
            Channel specific metadata for Image.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Location">
            <summary>
            Channel specific metadata for Location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.MessageType">
            <summary>
            The type of message to send. You must provide text in this field.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.MessageUuid">
            <summary>
            The UUID of the message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Order">
            <summary>
            Channel specific metadata for Order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Profile">
            <summary>
            Represents the profile details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.ProviderMessage">
            <summary>
            A message from the channel provider, which may contain a description, error codes or other information.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Reply">
            <summary>
            Channel specific metadata for Reply.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Sms">
            <summary>
            Channel specific metadata for SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Sticker">
            <summary>
            Channel specific metadata for Sticker.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Text">
            <summary>
            The UTF-8 encoded text of the inbound message.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Timestamp">
            <summary>
            The datetime of when the event occurred, in ISO 8601 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.To">
            <summary>
            The phone number of the message recipient in the E.164 format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Usage">
            <summary>
            Represents details about message usage.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Vcard">
            <summary>
            Channel specific metadata for Vcard.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.MessageWebhookResponse.Video">
            <summary>
            Channel specific metadata for Video.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.OrderDetails">
            <summary>
            Represents details of an order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.OrderDetails.CatalogId">
            <summary>
            The ID of the catalog containing the products in this order.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.OrderDetails.ProductItems">
            <summary>
            The list of items.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ProductItem">
            <summary>
            Represents an item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.Currency">
            <summary>
            The currency code representing the currency for this specific item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.ItemPrice">
            <summary>
            The unit price for this specific item.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.ProductRetailerId">
            <summary>
            The ID of the specific product being ordered.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProductItem.Quantity">
            <summary>
            The quantity ordered for this specific item.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.LocationDetails">
            <summary>
            Represents the location details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Address">
            <summary>
            Address of the location. Only displayed if name is present.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Latitude">
            <summary>
            Latitude of the location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Longitude">
            <summary>
            Longitude of the location.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.LocationDetails.Name">
            <summary>
            Name of the location.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ReplyDetails">
            <summary>
            Represents a Reply details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Description">
            <summary>
            A description that may be added to the interactive options presented (available only on interactive lists).
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Id">
            <summary>
            An identifier to help identify the exact interactive message response.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ReplyDetails.Title">
            <summary>
            The title displayed on the interactive option chosen.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.SmsDetails">
            <summary>
            Channel specific metadata for SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.Keyword">
            <summary>
            The first word of the message sent to uppercase.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.MessagesCount">
            <summary>
            The number of inbound SMS messages concatenated together to comprise this message. SMS messages are 160 characters, if an inbound message exceeds that size they are concatenated together to forma single message. This number indicates how many messages formed this webhook.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.SmsDetails.TotalCount">
            <summary>
            The number of inbound SMS messages concatenated together to comprise this message. SMS messages are 160 characters, if an inbound message exceeds that size they are concatenated together to forma single message. This number indicates how many messages formed this webhook.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.UsageDetails">
            <summary>
            Represents details about the message usage.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UsageDetails.Currency">
            <summary>
            The charge currency in ISO 4217 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UsageDetails.Price">
            <summary>
            The charge amount as a stringified number.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.UrlDetails">
            <summary>
            Represents a details with an accessible URL.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.UrlDetails.Url">
            <summary>
            The publicly accessible URL of the attachment.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ProfileDetails">
            <summary>
            Represents the profile details.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ProfileDetails.Name">
            <summary>
            The WhatsApp number's displayed profile name.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.ContextDetails">
            <summary>
            This is only present for the Inbound Message where the user is quoting another message. It provides information about the quoted message and/or the product message being responded to.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.MessageFrom">
            <summary>
            The phone number of the original sender of the message being quoted in the E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.MessageUuid">
            <summary>
            The UUID of the message being quoted.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.ContextDetails.ReferredProduct">
            <summary>
            An object containing details of a product from a product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="T:Vonage.Messages.Webhooks.WhatsAppReferredProduct">
            <summary>
            An object containing details of a product from a product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.WhatsAppReferredProduct.CatalogId">
            <summary>
            The ID of the catalog associated with the product from the product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="P:Vonage.Messages.Webhooks.WhatsAppReferredProduct.ProductRetailerId">
            <summary>
            The ID of the product from the product message being quoted or replied to using the 'Message Business' option.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IWhatsAppMessage">
            <summary>
                Represents a WhatsApp message to be sent by an IMessageClient.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.MessageTemplate">
            <summary>
                Represents a message template.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageTemplate.Name">
            <summary>
                The name of the template. For WhatsApp use your WhatsApp namespace (available via Facebook Business Manager),
                followed by a colon : and the name of the template to use.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageTemplate.Parameters">
            <summary>
                The parameters are an array of strings. The first value being {{1}} in the template.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.MessageWhatsApp">
            <summary>
                Represents a WhatsApp configuration.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageWhatsApp.Locale">
            <summary>
                The BCP 47 language of the template. Vonage will translate the BCP 47 format to the WhatsApp equivalent. For
                examples en-GB will be auto-translate to en_GB.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.MessageWhatsApp.Policy">
            <summary>
                Policy for resolving what language template to use. Please note that WhatsApp deprecated the fallback policy in
                January of 2020,
                all requests carrying a fallback policy will be rejected with a 400 error. As of right now the only valid choice is
                deterministic
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.IProductMessageContent">
            <summary>
                Represents a content of a product message.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder">
            <summary>
                Represents a builder for a Multiple Items product message content.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.Initialize">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithBody(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithCatalogId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithFooter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithHeader(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithProductRetailer(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsContentBuilder.WithSection(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForHeader">
            <summary>
                Represents a builder that allows to set the Header.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForHeader.WithHeader(System.String)">
            <summary>
                Sets the Header.
            </summary>
            <param name="value">The header.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForBody">
            <summary>
                Represents a builder that allows to set the Body.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForBody.WithBody(System.String)">
            <summary>
                Sets the Body.
            </summary>
            <param name="value">The body.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForFooter">
            <summary>
                Represents a builder that allows to set the Footer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForFooter.WithFooter(System.String)">
            <summary>
                Sets the Footer.
            </summary>
            <param name="value">The footer.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForCatalog">
            <summary>
                Represents a builder that allows to set the CatalogId.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForCatalog.WithCatalogId(System.String)">
            <summary>
                Sets the CatalogId.
            </summary>
            <param name="value">The catalog Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForMandatorySection">
            <summary>
                Represents a builder that allows to set a Section.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForMandatorySection.WithSection(System.String)">
            <summary>
                Sets a section.
            </summary>
            <param name="value">The section.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForOptionalSection">
            <summary>
                Represents a builder that allows to set a Section.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForProductRetailer">
            <summary>
                Represents a builder that allows to set a product retailer Id to the previous section.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuilderForProductRetailer.WithProductRetailer(System.String)">
            <summary>
                Sets the product retailer Id to the previous section.
            </summary>
            <param name="value">The product retailer Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuildable">
            <summary>
                Represents a builder that allows to build the product message.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.IBuildable.Build">
            <summary>
                Builds the product message using all specified values.
            </summary>
            <returns>The product message.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent">
            <summary>
                Represents the content for Multiple Item product messages.
            </summary>
            <param name="Header">The value of the header text.</param>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.#ctor(Vonage.Messages.WhatsApp.ProductMessages.TextSection,Vonage.Messages.WhatsApp.ProductMessages.TextSection,Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction)">
            <summary>
                Represents the content for Multiple Item product messages.
            </summary>
            <param name="Header">The value of the header text.</param>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Header">
            <summary>The value of the header text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Body">
            <summary>The value of the body text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Footer">
            <summary>The value of the footer text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Action">
            <summary>Contains data about the product displayed in the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsMessageContent.Type">
            <summary>
                The content type.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction">
            <summary>
                Represents the action for a Multiple Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="Sections">The section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.#ctor(System.String,Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section[])">
            <summary>
                Represents the action for a Multiple Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="Sections">The section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.CatalogId">
            <summary>The catalog Id.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.MultipleItemsAction.Sections">
            <summary>The section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section">
            <summary>
                Represents a section of items grouped by title.
            </summary>
            <param name="Title">The title of the sections.</param>
            <param name="ProductItems">The product items of the section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.#ctor(System.String,Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem[])">
            <summary>
                Represents a section of items grouped by title.
            </summary>
            <param name="Title">The title of the sections.</param>
            <param name="ProductItems">The product items of the section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.Title">
            <summary>The title of the sections.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.Section.ProductItems">
            <summary>The product items of the section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem">
            <summary>
                Represents a product item.
            </summary>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem.#ctor(System.String)">
            <summary>
                Represents a product item.
            </summary>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.MultipleItems.ProductItem.ProductRetailerId">
            <summary>The product retailer Id.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1">
            <summary>
                Represents a product message. Product messages provide a way for businesses to showcase and share products and
                services with customers via a WhatsApp chat, and for those customers to browse items, add them to a cart, and
                submit an order without leaving the chat.
            </summary>
            <param name="Details">Contains the details of the message.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.#ctor(`0)">
            <summary>
                Represents a product message. Product messages provide a way for businesses to showcase and share products and
                services with customers via a WhatsApp chat, and for those customers to browse items, add them to a cart, and
                submit an order without leaving the chat.
            </summary>
            <param name="Details">Contains the details of the message.</param>
            <typeparam name="T">Type of the content.</typeparam>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.Details">
            <summary>Contains the details of the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.ProductMessage`1.Type">
            <summary>
                The type of the product message.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder">
            <summary>
                Represents a builder for Single Items product message content.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.Build">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.Initialize">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithBody(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithCatalogId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithFooter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemContentBuilder.WithProductRetailerId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IOptionalBuilderForBody">
            <summary>
                Represents a builder that allows to set the Body.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IOptionalBuilderForBody.WithBody(System.String)">
            <summary>
                Sets the Body text.
            </summary>
            <param name="value">The Body.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForFooter">
            <summary>
                Represents a builder that allows to set the Footer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForFooter.WithFooter(System.String)">
            <summary>
                Sets the Footer text.
            </summary>
            <param name="value">The Footer.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForCatalog">
            <summary>
                Represents a builder that allows to set the Catalog.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForCatalog.WithCatalogId(System.String)">
            <summary>
                Sets the CatalogId.
            </summary>
            <param name="value">The catalog Id.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForProductRetailer">
            <summary>
                Represents a builder that allows to set a Product Retailer.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuilderForProductRetailer.WithProductRetailerId(System.String)">
            <summary>
                Sets the product retailer Id.
            </summary>
            <param name="value">The product retailer Id.</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuildable">
            <summary>
                Represents a builder that allows to build the product message.
            </summary>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.IBuildable.Build">
            <summary>
                Builds the product message using all specified values.
            </summary>
            <returns>The product message.</returns>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent">
            <summary>
                Represents the content for Single Item product messages.
            </summary>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.#ctor(Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Common.Monads.Maybe{Vonage.Messages.WhatsApp.ProductMessages.TextSection},Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction)">
            <summary>
                Represents the content for Single Item product messages.
            </summary>
            <param name="Body">The value of the body text.</param>
            <param name="Footer">The value of the footer text.</param>
            <param name="Action">Contains data about the product displayed in the message.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Body">
            <summary>The value of the body text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Footer">
            <summary>The value of the footer text.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Action">
            <summary>Contains data about the product displayed in the message.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemMessageContent.Type">
            <summary>
                The content type.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction">
            <summary>
                Represents the action for a Single Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.#ctor(System.String,System.String)">
            <summary>
                Represents the action for a Single Item product message.
            </summary>
            <param name="CatalogId">The catalog Id.</param>
            <param name="ProductRetailerId">The product retailer Id.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.CatalogId">
            <summary>The catalog Id.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.SingleItem.SingleItemAction.ProductRetailerId">
            <summary>The product retailer Id.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.ProductMessages.TextSection">
            <summary>
                Represents a text section.
            </summary>
            <param name="Text">The text of the section.</param>
            <param name="Type">The type of the section.</param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.ProductMessages.TextSection.#ctor(System.String,System.String)">
            <summary>
                Represents a text section.
            </summary>
            <param name="Text">The text of the section.</param>
            <param name="Type">The type of the section.</param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.TextSection.Text">
            <summary>The text of the section.</summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.ProductMessages.TextSection.Type">
            <summary>The type of the section.</summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppAudioRequest">
            <summary>
                Represents a request to send an audio message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.Audio">
            <summary>
                The audio attachment. Supports.aac, .m4a, .amr, .mp3 and.opus
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppAudioRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppCustomRequest">
            <summary>
                Represents a request to send a custom message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.Custom">
            <summary>
                A custom payload, which is passed directly to WhatsApp for certain features such as
                templates and interactive messages.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppCustomRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppFileRequest">
            <summary>
                Represents a request to send a file message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.File">
            <summary>
                The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppFileRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppImageRequest">
            <summary>
                Represents a request to send an image message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.Image">
            <summary>
               The file information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppImageRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest">
            <summary>
                Represents a request to send Multiple Items product message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.Custom">
            <summary>
                The custom content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppMultipleItemsRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest">
            <summary>
                Represents a request to send Single Item product message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.Custom">
            <summary>
                The custom content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppSingleProductRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1">
            <summary>
                Represents a request to send a sticker message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.Sticker">
            <summary>
                The sticker content.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppStickerRequest`1.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IStickerContent">
            <summary>
                Represents a sticker content.
            </summary>
            <remarks>
                This is a 'Marker' interface. It doesn't propose any behavior, and it's sole purpose is to group objects under a
                common denomination.
            </remarks>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.UrlSticker">
            <summary>
                Represents a WhatsApp sticker with a URL content.
            </summary>
            <param name="Url">
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.UrlSticker.#ctor(System.String)">
            <summary>
                Represents a WhatsApp sticker with a URL content.
            </summary>
            <param name="Url">
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.UrlSticker.Url">
            <summary>
                The publicly accessible URL of the sticker image. Supported types are: .webp. See the documentation
                for more information on sending stickers.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.IdSticker">
            <summary>
                Represents a WhatsApp sticker with a Guid content.
            </summary>
            <param name="Id">
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </param>
        </member>
        <member name="M:Vonage.Messages.WhatsApp.IdSticker.#ctor(System.Guid)">
            <summary>
                Represents a WhatsApp sticker with a Guid content.
            </summary>
            <param name="Id">
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </param>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.IdSticker.Id">
            <summary>
                The id of the sticker in relation to a specific WhatsApp deployment. See the documentation for more
                information on sending stickers.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest">
            <summary>
                Represents a request to send a template message on Viber.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.Template">
            <summary>
                The message template.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTemplateRequest.WhatsApp">
            <summary>
                The WhatsApp configuration.
            </summary>
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppTextRequest">
            <summary>
                Represents a request to send a text message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.Text">
            <summary>
                The text of message to send; limited to 4096 characters, including unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppTextRequest.To">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Messages.WhatsApp.WhatsAppVideoRequest">
            <summary>
                Represents a request to send a video message on WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.ClientRef">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.From">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.MessageType">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.To">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Messages.WhatsApp.WhatsAppVideoRequest.Video">
            <summary>
                The video information of the request.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Msisdn">
            <summary>
            The number the message was sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.To">
            <summary>
            The SenderID you set in from in your request.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.NetworkCode">
            <summary>
            The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.MessageId">
            <summary>
            The Vonage ID for this message.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Price">
            <summary>
            The cost of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.StringStatus">
            <summary>
            A code that explains where the message is in the delivery process.
            Will be one of: delivered, expired, failed, rejected, accepted, buffered or unknown
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Status">
            <summary>
            A code that explains where the message is in the delivery process.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Scts">
            <summary>
            When the DLR was received from the carrier in the following format YYMMDDHHMM. For example, 2001011400 is at 2020-01-01 14:00
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ErrorCode">
            <summary>
            The status of the request. Will be a non 0 value if there has been an error, or if the status is unknown. 
            See the Delivery Receipt documentation for more details: https://developer.nexmo.com/messaging/sms/guides/delivery-receipts#dlr-error-codes
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.MessageTimestamp">
            <summary>
            The time when Vonage started to push this Delivery Receipt to your webhook endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ApiKey">
            <summary>
            The API key that sent the SMS. This is useful when multiple accounts are sending webhooks to the same endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Timestamp">
            <summary>
            A timestamp in Unix (seconds since the epoch) format. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Nonce">
            <summary>
            A random string to be used when calculating the signature. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.Sig">
            <summary>
            The signature to enable verification of the source of this webhook. 
            Please see the developer documentation for validating signatures for more information, 
            or use one of our published SDKs. Only included if you have signatures enabled
            </summary>
        </member>
        <member name="P:Vonage.Messaging.DeliveryReceipt.ClientRef">
            <summary>
            If the client-ref is set when the SMS is sent, it will be included in the delivery receipt
            </summary>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSmsAsync(Vonage.Messaging.SendSmsRequest,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Messaging.ISmsClient.SendAnSmsAsync(System.String,System.String,System.String,Vonage.Messaging.SmsType,Vonage.Request.Credentials)">
            <summary>
            Send an outbound SMS from your Vonage account
            </summary>
            <param name="from">The name or number the message should be sent from.</param>
            <param name="to">The number that the message should be sent to. Numbers are specified in E.164 format.</param>
            <param name="text">The body of the message being sent.</param>
            <param name="type">The format of the message body.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.AccountRef">
            <summary>
            An optional string used to identify separate accounts using the SMS endpoint for billing purposes. 
            To use this feature, please email support@nexmo.com
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Body">
            <summary>
            Hex encoded binary data. Depends on type parameter having the value binary.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Callback">
            <summary>
            The webhook endpoint the delivery receipt for this sms is sent to. 
            This parameter overrides the webhook endpoint you set in Dashboard.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ClientRef">
            <summary>
            You can optionally include your own reference of up to 40 characters.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ContentId">
            <summary>
            A string parameter that satisfies regulatory requirements when sending an SMS to specific countries.
            For more information please refer to the <see href="https://help.nexmo.com/hc/en-us/articles/115011781468">Country-Specific Outbound SMS Features</see>
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.EntityId">
            <summary>
            A string parameter that satisfies regulatory requirements when sending an SMS to specific countries.
            For more information please refer to the <see href="https://help.nexmo.com/hc/en-us/articles/115011781468">Country-Specific Outbound SMS Features</see>
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.From">
            <summary>
            The name or number the message should be sent from. 
            Alphanumeric senderID's are not supported in all countries, 
            see Global Messaging for more details. If alphanumeric, 
            spaces will be ignored. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.MessageClass">
            <summary>
             The Data Coding Scheme value of the message
             Must be one of: 0, 1, 2 or 3
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.ProtocolId">
            <summary>
            The value of the protocol identifier to use. Ensure that the value is aligned with udh.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.StatusReportReq">
            <summary>
            Boolean indicating if you like to receive a Delivery Receipt.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Text">
            <summary>
            The body of the message being sent. If your message contains characters 
            that can be encoded according to the GSM Standard and Extended tables then you can set the type to text. 
            If your message contains characters outside this range, then you will need to set the type to unicode.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.To">
            <summary>
            The number that the message should be sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Ttl">
            <summary>
            The duration in milliseconds the delivery of an SMS will be attempted.
            By default Vonage attempt delivery for 72 hours, 
            however the maximum effective value depends on the operator and is typically 24 - 48 hours.
            We recommend this value should be kept at its default or at least 30 minutes.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Type">
            <summary>
            The format of the message body         
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsRequest.Udh">
            <summary>
            Your custom Hex encoded User Data Header. Depends on type parameter having the value binary.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SendSmsResponse.MessageCount">
            <summary>
            The amount of messages in the request
            </summary>
        </member>
        <member name="M:Vonage.Messaging.SmsClient.SendAnSmsAsync(Vonage.Messaging.SendSmsRequest,Vonage.Request.Credentials)">
            <summary>
                Send a SMS message.
            </summary>
            <param name="request">The SMS message request</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Messaging.VonageSmsResponseException">Thrown when the status of a message is non-zero or response is empty</exception>
            <returns></returns>
        </member>
        <member name="M:Vonage.Messaging.SmsClient.SendAnSmsAsync(System.String,System.String,System.String,Vonage.Messaging.SmsType,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.AccountRef">
            <summary>
                An optional string used to identify separate accounts using the SMS endpoint for billing purposes. To use this
                feature, please email support
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.ClientRef">
            <summary>
                If a client-ref was included when sending the SMS, this field will be included and hold the value that was sent.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.ErrorText">
            <summary>
                The status of the message. See Troubleshooting Failed SMS.
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.MessageId">
            <summary>
                The ID of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.MessagePrice">
            <summary>
                The cost of the message
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.Network">
            <summary>
                The ID of the network of the recipient
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.RemainingBalance">
            <summary>
                Your remaining balance
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.Status">
            <summary>
                The status of the message. See: https://developer.nexmo.com/messaging/sms/guides/troubleshooting-sms
            </summary>
        </member>
        <member name="P:Vonage.Messaging.SmsResponseMessage.To">
            <summary>
                The number the message was sent to. Numbers are specified in E.164 format.
            </summary>
        </member>
        <member name="T:Vonage.Messaging.SmsType">
            <summary>
            Represents the type of message.
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vonage.Messaging.SmsType.Unicode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.Number">
            <summary>
            The number in your request
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.RemainingBalance">
            <summary>
            Your account balance in EUR after this request. Not returned with Number Insight Advanced Async API.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsAsynchronousResponse.RequestPrice">
            <summary>
            If there is an internal lookup error, the refund_price will reflect the lookup price. 
            If cnam is requested for a non-US number the refund_price will reflect the cnam price.
            If both of these conditions occur, refund_price is the sum of the lookup price and cnam price.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.LookupOutcome">
            <summary>
            Shows if all information about a phone number has been returned.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.LookupOutcomeMessage">
            <summary>
            Shows if all information about a phone number has been returned.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.ValidNumber">
            <summary>
            Does number exist. unknown means the number could not be validated. 
            valid means the number is valid. not_valid means the number is not valid. 
            inferred_not_valid means that the number could not be determined as valid or invalid 
            via an external system and the best guess is that the number is invalid. 
            This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.Reachable">
            <summary>
            Can you call number now. This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedInsightsResponse.RealTimeData">
            <summary>
            Real time data about the number
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest.Callback">
            <summary>
            The callback URL
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.AdvancedNumberInsightRequest.Ip">
            <summary>
            This parameter is deprecated as we are no longer able to retrieve reliable IP data globally from carriers.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.StatusMessage">
            <summary>
            The status description of your request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.InternationalFormatNumber">
            <summary>
            The number in your request in international format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.NationalFormatNumber">
            <summary>
            The number in your request in the format used by the country the number belongs to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryCode">
            <summary>
            Two character country code for number. This is in ISO 3166-1 alpha-2 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryCodeIso3">
            <summary>
            Three character country code for number. This is in ISO 3166-1 alpha-3 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryName">
            <summary>
            The full name of the country that number is registered in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicInsightResponse.CountryPrefix">
            <summary>
            The numeric prefix for the country that number is registered in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicNumberInsightRequest.Number">
            <summary>
            A single phone number that you need insight about in national or international format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.BasicNumberInsightRequest.Country">
            <summary>
            If a number does not have a country code or is uncertain, set the two-character country code. 
            This code must be in ISO 3166-1 alpha-2 format and in upper case. For example, GB or US. 
            If you set country and number is already in E.164 format, country must match the country code in number.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.CallerType">
            <summary>
            The value will be business if the owner of a phone number is a business. 
            If the owner is an individual the value will be consumer. 
            The value will be unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.CallerName">
            <summary>
            Full name of the person or business who owns the phone number. 
            Unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.FirstName">
            <summary>
            First name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.CallerId.LastName">
            <summary>
            Last name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.NetworkCode">
            <summary>
            The https://en.wikipedia.org/wiki/Mobile_country_code for the carriernumber is associated with.
            Unreal numbers are marked asunknown and the request is rejected altogether if the number is impossible according to the E.164 guidelines.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.Name">
            <summary>
            The full name of the carrier that number is associated with.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.Country">
            <summary>
            The country that number is associated with. This is in ISO 3166-1 alpha-2 format.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Carrier.NetworkType">
            <summary>
            The type of network that number is associated with.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightBasicAsync(Vonage.NumberInsights.BasicNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides basic number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightStandardAsync(Vonage.NumberInsights.StandardNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides standard number insight information about a number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAdvancedAsync(Vonage.NumberInsights.AdvancedNumberInsightRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight information about a number synchronously, in the same way that the basic and standard endpoints do.
            Vonage recommends accessing the Advanced API asynchronously
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.INumberInsightClient.GetNumberInsightAsynchronousAsync(Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest,Vonage.Request.Credentials)">
            <summary>
            Provides advanced number insight number information asynchronously using the URL specified in the callback parameter. 
            Vonage recommends asynchronous use of the Number Insight Advanced API, to avoid timeouts.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.NumberInsights.NumberInsightClient.GetNumberInsightAdvancedAsync(Vonage.NumberInsights.AdvancedNumberInsightRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.NumberInsights.NumberInsightClient.GetNumberInsightAsynchronousAsync(Vonage.NumberInsights.AdvancedNumberInsightAsynchronousRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.NumberInsights.NumberInsightClient.GetNumberInsightBasicAsync(Vonage.NumberInsights.BasicNumberInsightRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.NumberInsights.NumberInsightClient.GetNumberInsightStandardAsync(Vonage.NumberInsights.StandardNumberInsightRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.NumberInsights.NumberInsightResponseBase.Status">
            <summary>
            Status of the Number Insight Request
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.NumberInsightResponseBase.RequestId">
            <summary>
            The unique identifier for your request. This is a alphanumeric string up to 40 characters.
            </summary>
        </member>
        <member name="T:Vonage.NumberInsights.RealTimeData">
            <summary>
                Real time data about the number.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.RealTimeData.ActiveStatus">
            <summary>
                Whether the end-user's phone number is active within an operator's network.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.RealTimeData.HandsetStatus">
            <summary>
                Whether the end-user's handset is turned on or off.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.Status">
            <summary>
            Is number outside its home carrier network.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingCountryCode">
            <summary>
            If number is roaming, this is the code of the country number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingNetworkCode">
            <summary>
            If number is roaming, this is the id of the carrier network number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.Roaming.RoamingNetworkName">
            <summary>
            If number is roaming, this is the name of the carrier network number is roaming in.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RequestPrice">
            <summary>
            The amount in EUR charged to your account.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RefundPrice">
            <summary>
            If there is an internal lookup error, the refund_price will reflect the lookup price. 
            If cnam is requested for a non-US number the refund_price will reflect the cnam price. 
            If both of these conditions occur, refund_price is the sum of the lookup price and cnam price.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.RemainingBalance">
            <summary>
            Your account balance in EUR after this request. Not returned with Number Insight Advanced Async API.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CurrentCarrier">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.OriginalCarrier">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.Ported">
            <summary>
            If the user has changed carrier for number. 
            The assumed status means that the information supplier has 
            replied to the request but has not said explicitly that the number is ported.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.Roaming">
            <summary>
            Information about the roaming status for number. This is applicable to mobile numbers only.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerIdentity">
            <summary>
            Information about the network number is currently connected to.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerName">
            <summary>
            Full name of the person or business who owns the phone number. 
            Unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.LastName">
            <summary>
            Last name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.FirstName">
            <summary>
            First name of the person who owns the phone number if the owner is an individual. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardInsightResponse.CallerType">
            <summary>
            The value will be business if the owner of a phone number is a business. 
            If the owner is an individual the value will be consumer. 
            The value will be unknown if this information is not available. 
            This parameter is only present if cnam had a value of true within the request.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsights.StandardNumberInsightRequest.Cnam">
            <summary>
            Indicates if the name of the person who owns the phone number should be looked up and returned in the response. 
            Set to true to receive phone number owner name in the response. 
            This features is available for US numbers only and incurs an additional charge.
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.Insights">
            <summary>
                The insight(s) you need, at least one of: fraud_score and sim_swap.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.Phone">
            <summary>
                A single phone number that you need insight about in the E.164 format. Don't use a leading + or 00 when entering a
                phone number, start with the country code, e.g. 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.Type">
            <summary>
                Accepted value is “phone” when a phone number is provided.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.Build">
            <summary>
                Initializes a builder for FraudCheckRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequestBuilder.WithFraudScore">
            <inheritdoc />
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequestBuilder.WithPhone(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckRequestBuilder.WithSimSwap">
            <inheritdoc />
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.IBuilderForPhone">
            <summary>
                Represents a builder for Phone.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.IBuilderForPhone.WithPhone(System.String)">
            <summary>
                Sets the Phone.
            </summary>
            <param name="value">The phone.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.IBuilderForOptional.WithFraudScore">
            <summary>
                Enables Fraud Score in the response.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.IBuilderForOptional.WithSimSwap">
            <summary>
                Enables Sim Swap in the response.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse">
            <summary>
                Represents the response of a Fraud Check request.
            </summary>
            <param name="RequestId">Unique UUID for this request for reference.</param>
            <param name="Type">The type of lookup used in the request. Currently always phone.</param>
            <param name="Phone">
                An object containing at least the phone number that was used in the fraud check. If fraud_score was
                also requested and successful, other phone information (carrier and type) will be returned.
            </param>
            <param name="FraudScore">
                The result of the fraud_score insight operation. The fraud_score object will only be returned
                if you specified fraud_score as a value in the insights array when the request was made.
            </param>
            <param name="SimSwap">
                The result of the sim_swap insight operation. If successful, it will return swapped: true if the
                sim was swapped in the last 7 days. The sim_swap object will only be returned if you specified sim_swap as a value
                in the insights array when the request was made.
            </param>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.#ctor(System.Guid,System.String,Vonage.NumberInsightV2.FraudCheck.PhoneData,Vonage.Common.Monads.Maybe{Vonage.NumberInsightV2.FraudCheck.FraudScore},Vonage.Common.Monads.Maybe{Vonage.NumberInsightV2.FraudCheck.SimSwap})">
            <summary>
                Represents the response of a Fraud Check request.
            </summary>
            <param name="RequestId">Unique UUID for this request for reference.</param>
            <param name="Type">The type of lookup used in the request. Currently always phone.</param>
            <param name="Phone">
                An object containing at least the phone number that was used in the fraud check. If fraud_score was
                also requested and successful, other phone information (carrier and type) will be returned.
            </param>
            <param name="FraudScore">
                The result of the fraud_score insight operation. The fraud_score object will only be returned
                if you specified fraud_score as a value in the insights array when the request was made.
            </param>
            <param name="SimSwap">
                The result of the sim_swap insight operation. If successful, it will return swapped: true if the
                sim was swapped in the last 7 days. The sim_swap object will only be returned if you specified sim_swap as a value
                in the insights array when the request was made.
            </param>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.RequestId">
            <summary>Unique UUID for this request for reference.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.Type">
            <summary>The type of lookup used in the request. Currently always phone.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.Phone">
            <summary>
                An object containing at least the phone number that was used in the fraud check. If fraud_score was
                also requested and successful, other phone information (carrier and type) will be returned.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.FraudScore">
            <summary>
                The result of the fraud_score insight operation. The fraud_score object will only be returned
                if you specified fraud_score as a value in the insights array when the request was made.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudCheckResponse.SimSwap">
            <summary>
                The result of the sim_swap insight operation. If successful, it will return swapped: true if the
                sim was swapped in the last 7 days. The sim_swap object will only be returned if you specified sim_swap as a value
                in the insights array when the request was made.
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.PhoneData">
            <summary>
                Represents an object containing at least the phone number that was used in the fraud check.
            </summary>
            <param name="Phone">The phone number used in the fraud check operation(s).</param>
            <param name="Carrier">The name of the network carrier. Included if insights included fraud_score.</param>
            <param name="Type">
                Type of phone. Examples include Mobile, Landline, VOIP, PrePaid, Personal, Toll-Free. Included if
                insights included fraud_score.
            </param>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.PhoneData.#ctor(System.String,System.String,System.String)">
            <summary>
                Represents an object containing at least the phone number that was used in the fraud check.
            </summary>
            <param name="Phone">The phone number used in the fraud check operation(s).</param>
            <param name="Carrier">The name of the network carrier. Included if insights included fraud_score.</param>
            <param name="Type">
                Type of phone. Examples include Mobile, Landline, VOIP, PrePaid, Personal, Toll-Free. Included if
                insights included fraud_score.
            </param>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.PhoneData.Phone">
            <summary>The phone number used in the fraud check operation(s).</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.PhoneData.Carrier">
            <summary>The name of the network carrier. Included if insights included fraud_score.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.PhoneData.Type">
            <summary>
                Type of phone. Examples include Mobile, Landline, VOIP, PrePaid, Personal, Toll-Free. Included if
                insights included fraud_score.
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.FraudScore">
            <summary>
                Represents the result of the fraud_score insight operation..
            </summary>
            <param name="RiskScore">
                Score derived from evaluating fraud-related data associated with the phone number. risk_score
                ranges from 0-100, with 0 meaning least risk and 100 meaning highest risk.
            </param>
            <param name="RiskRecommendation">Recommended action based on the risk_score.</param>
            <param name="Label">Mapping of risk score to a verbose description.</param>
            <param name="Status">The status of the fraud_score call.</param>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.FraudScore.#ctor(System.String,Vonage.NumberInsightV2.FraudCheck.RiskRecommendation,Vonage.NumberInsightV2.FraudCheck.FraudScoreLabel,System.String)">
            <summary>
                Represents the result of the fraud_score insight operation..
            </summary>
            <param name="RiskScore">
                Score derived from evaluating fraud-related data associated with the phone number. risk_score
                ranges from 0-100, with 0 meaning least risk and 100 meaning highest risk.
            </param>
            <param name="RiskRecommendation">Recommended action based on the risk_score.</param>
            <param name="Label">Mapping of risk score to a verbose description.</param>
            <param name="Status">The status of the fraud_score call.</param>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudScore.RiskScore">
            <summary>
                Score derived from evaluating fraud-related data associated with the phone number. risk_score
                ranges from 0-100, with 0 meaning least risk and 100 meaning highest risk.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudScore.RiskRecommendation">
            <summary>Recommended action based on the risk_score.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudScore.Label">
            <summary>Mapping of risk score to a verbose description.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.FraudScore.Status">
            <summary>The status of the fraud_score call.</summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.FraudScoreLabel">
            <summary>
                Represents the mapping of risk score to a verbose description.
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.FraudScoreLabel.Low">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.FraudScoreLabel.Medium">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.FraudScoreLabel.High">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.RiskRecommendation">
            <summary>
                Represents the recommended action based on the risk_score.
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.RiskRecommendation.Allow">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.RiskRecommendation.Flag">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.RiskRecommendation.Block">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.SimSwapStatus">
            <summary>
                Represents the status of the sim_swap call.
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.SimSwapStatus.Completed">
            <summary>
            </summary>
        </member>
        <member name="F:Vonage.NumberInsightV2.FraudCheck.SimSwapStatus.Failed">
            <summary>
            </summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.FraudCheck.SimSwap">
            <summary>
                Represents the result of the sim_swap insight operation.
            </summary>
            <param name="Status">The status of the sim_swap call.</param>
            <param name="Swapped">
                true if the sim was swapped in the last 7 days, false otherwise. Returned only if the sim swap
                check succeeds.
            </param>
            <param name="Reason">The reason for a sim swap error response. Returned only if the sim swap check fails.</param>
        </member>
        <member name="M:Vonage.NumberInsightV2.FraudCheck.SimSwap.#ctor(Vonage.NumberInsightV2.FraudCheck.SimSwapStatus,System.Boolean,System.String)">
            <summary>
                Represents the result of the sim_swap insight operation.
            </summary>
            <param name="Status">The status of the sim_swap call.</param>
            <param name="Swapped">
                true if the sim was swapped in the last 7 days, false otherwise. Returned only if the sim swap
                check succeeds.
            </param>
            <param name="Reason">The reason for a sim swap error response. Returned only if the sim swap check fails.</param>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.SimSwap.Status">
            <summary>The status of the sim_swap call.</summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.SimSwap.Swapped">
            <summary>
                true if the sim was swapped in the last 7 days, false otherwise. Returned only if the sim swap
                check succeeds.
            </summary>
        </member>
        <member name="P:Vonage.NumberInsightV2.FraudCheck.SimSwap.Reason">
            <summary>The reason for a sim swap error response. Returned only if the sim swap check fails.</summary>
        </member>
        <member name="T:Vonage.NumberInsightV2.INumberInsightV2Client">
            <summary>
                Exposes Number Insight V2 features.
            </summary>
        </member>
        <member name="M:Vonage.NumberInsightV2.INumberInsightV2Client.PerformFraudCheckAsync(Vonage.Common.Monads.Result{Vonage.NumberInsightV2.FraudCheck.FraudCheckRequest})">
            <summary>
                Performs a fraud check request with a phone number.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="T:Vonage.Numbers.INumbersClient">
            <summary>
            Represents a client for NumbersApi.
            </summary>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetOwnedNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve all the inbound numbers associated with your Vonage account.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.GetAvailableNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieve inbound numbers that are available for the specified country.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.BuyANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Request to purchase a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.CancelANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <summary>
            Cancel your subscription for a specific inbound number.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.UpdateANumberAsync(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <summary>
            Change the behaviour of a number that you own.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Numbers.INumbersClient.TransferANumberAsync(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <summary>
            Transfer a number that you own to a subaccount.
            </summary>
            <param name="request"></param>
            <param name="apiKey"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Numbers.Number.Cost">
            <summary>
            The monthly rental cost for this number, in Euros
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Features">
            <summary>
            The capabilities of the number: SMS or VOICE or SMS,VOICE or SMS,MMS or VOICE,MMS or SMS,MMS,VOICE
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.Number.Type">
            <summary>
            The type of number: landline, landline-toll-free or mobile-lvn
            </summary>
        </member>
        <member name="T:Vonage.Numbers.NumbersClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Constructor for NumbersClients.
            </summary>
            <param name="credentials">Credentials to be used in further requests.</param>
        </member>
        <member name="P:Vonage.Numbers.NumbersClient.Credentials">
            <summary>
                Gets or sets credentials to be used in further requests.
            </summary>
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.BuyANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.CancelANumberAsync(Vonage.Numbers.NumberTransactionRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetAvailableNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.GetOwnedNumbersAsync(Vonage.Numbers.NumberSearchRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.TransferANumberAsync(Vonage.Numbers.NumberTransferRequest,System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Numbers.NumbersClient.UpdateANumberAsync(Vonage.Numbers.UpdateNumberRequest,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Type">
            <summary>
            Set this parameter to filter the type of number, such as mobile or landline
            Must be one of: landline, mobile-lvn or landline-toll-free
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Pattern">
            <summary>
            The number pattern you want to search for. Use in conjunction with search_pattern.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.SearchPattern">
            <summary>
            The strategy you want to use for matching
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Features">
            <summary>
            Available features are SMS, VOICE and MMS. To look for numbers that support multiple features, use a comma-separated value: SMS,MMS,VOICE.
            Must be one of: SMS, VOICE, SMS,VOICE, MMS, SMS,MMS, VOICE,MMS or SMS,MMS,VOICE
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Size">
            <summary>
            Page size
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.Index">
            <summary>
            Page index
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberSearchRequest.HasApplication">
            <summary>
            Set this optional field to true to restrict your results to numbers associated with an Application (any Application). 
            Set to false to find all numbers not associated with any Application. Omit the field to avoid filtering on whether or not the number is assigned to an Application.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumbersSearchResponse.Count">
            <summary>
            The total amount of numbers available in the pool.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumbersSearchResponse.Numbers">
            <summary>
            A paginated array of available numbers and their details
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionRequest.TargetApiKey">
            <summary>
            If you’d like to perform an action on a subaccount, provide the 
            api_key of that account here. If you’d like to perform an action on your own account, 
            you do not need to provide this field.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionResponse.ErrorCode">
            <summary>
            The status code of the response. 200 indicates a successful request.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransactionResponse.ErrorCodeLabel">
            <summary>
            The status code description
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.Number">
            <summary>
            An owned virtual number to be transferred.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.From">
            <summary>
            The account that currently holds the number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferRequest.To">
            <summary>
            The subaccount to transfer the number to.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.Number">
            <summary>
            An owned virtual number to transfer.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.From">
            <summary>
            The account that currently holds the number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.To">
            <summary>
            The subaccount to transfer the number to.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.NumberTransferResponse.MasterAccountId">
            <summary>
            The master account ID.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.Country">
            <summary>
            The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.Msisdn">
            <summary>
            An available inbound virtual number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.AppId">
            <summary>
            The Application that will handle inbound traffic to this number.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.MoHttpUrl">
            <summary>
            An URL-encoded URI to the webhook endpoint that handles inbound messages. 
            Your webhook endpoint must be active before you make this request. 
            Vonage makes a GET request to the endpoint and checks that it returns a 200 OK response. 
            Set this parameter's value to an empty string to remove the webhook.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.MoSmppSysType">
            <summary>
            The associated system type for your SMPP client
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceCallbackType">
            <summary>
            Specify whether inbound voice calls on your number are forwarded to a SIP or a telephone number. 
            This must be used with the voiceCallbackValue parameter. 
            If set, sip or tel are prioritized over the Voice capability in your Application. 
            Note: The app value is deprecated and will be removed in future.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceCallbackValue">
            <summary>
            A SIP URI or telephone number. Must be used with the voiceCallbackType parameter.
            </summary>
        </member>
        <member name="P:Vonage.Numbers.UpdateNumberRequest.VoiceStatusCallback">
            <summary>
            A webhook URI for Vonage to send a request to when a call ends
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryCode">
            <summary>
            Two letter country code.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryName">
            <summary>
            Readable country name.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.CountryDisplayName">
            <summary>
            Readable country name.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.Currency">
            <summary>
            The currency that your account is being billed in (by default Euros—EUR). 
            Can change in the Dashboard to US Dollars—USD.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.DefaultPrice">
            <summary>
            The default price.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.DialingPrefix">
            <summary>
            The dialling prefix.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Country.Networks">
            <summary>
            An array of network objects
            </summary>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingCountryAsync(System.String,Vonage.Pricing.PricingCountryRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the specified country.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePricingAllCountriesAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information for all countries.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Pricing.IPricingClient.RetrievePrefixPricingAsync(System.String,Vonage.Pricing.PricingPrefixRequest,Vonage.Request.Credentials)">
            <summary>
            Retrieves the pricing information based on the dialing prefix.
            </summary>
            <param name="type">The type of service you wish to retrieve data about: 
            either sms, sms-transit or voice.</param>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Pricing.Network.Type">
            <summary>
            The type of network: mobile or landline.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Price">
            <summary>
            The cost to send a message or make a call to this network
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Currency">
            <summary>
            The currency used for prices for this network.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Mcc">
            <summary>
            The Mobile Country Code of the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.Mnc">
            <summary>
            The Mobile Network Code of the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.NetworkCode">
            <summary>
            The Mobile Country Code and Mobile Network Code combined to give a unique reference for the operator.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.Network.NetworkName">
            <summary>
            The company/organisational name of the operator.
            </summary>
        </member>
        <member name="M:Vonage.Pricing.PricingClient.RetrievePrefixPricingAsync(System.String,Vonage.Pricing.PricingPrefixRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Pricing.PricingClient.RetrievePricingAllCountriesAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Pricing.PricingClient.RetrievePricingCountryAsync(System.String,Vonage.Pricing.PricingCountryRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.Pricing.PricingCountryRequest.Country">
            <summary>
            A two letter country code. For example, CA.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingPrefixRequest.Prefix">
            <summary>
            The numerical dialing prefix to look up pricing for. Examples include 44, 1 and so on.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingResult.Count">
            <summary>
            The number of countries retrieved.
            </summary>
        </member>
        <member name="P:Vonage.Pricing.PricingResult.Countries">
            <summary>
            The code for the country you looked up: e.g. GB, US, BR, RU.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.BulkEvent">
            <summary>
                Represents a Proactive Connect Event.
            </summary>
            <param name="OccurredAt">When the event occurred.</param>
            <param name="Type">The type of event.</param>
            <param name="Id">The event Id.</param>
            <param name="JobId">The job Id.</param>
            <param name="SourceContext">The source context.</param>
            <param name="ActionId">The action Id.</param>
            <param name="RunId">The run Id.</param>
            <param name="RecipientId">The recipient Id.</param>
            <param name="Data">The underlying data.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.BulkEvent.#ctor(System.DateTimeOffset,Vonage.ProactiveConnect.Events.BulkEventType,System.Guid,System.Guid,System.String,System.Guid,System.Guid,System.String,System.Object)">
            <summary>
                Represents a Proactive Connect Event.
            </summary>
            <param name="OccurredAt">When the event occurred.</param>
            <param name="Type">The type of event.</param>
            <param name="Id">The event Id.</param>
            <param name="JobId">The job Id.</param>
            <param name="SourceContext">The source context.</param>
            <param name="ActionId">The action Id.</param>
            <param name="RunId">The run Id.</param>
            <param name="RecipientId">The recipient Id.</param>
            <param name="Data">The underlying data.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.OccurredAt">
            <summary>When the event occurred.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Type">
            <summary>The type of event.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Id">
            <summary>The event Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.JobId">
            <summary>The job Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.SourceContext">
            <summary>The source context.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.ActionId">
            <summary>The action Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.RunId">
            <summary>The run Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.RecipientId">
            <summary>The recipient Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.BulkEvent.Data">
            <summary>The underlying data.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents">
            <summary>
                Represents a wrapper for events.
            </summary>
            <param name="Events">The retrieved events.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Events.BulkEvent})">
            <summary>
                Represents a wrapper for events.
            </summary>
            <param name="Events">The retrieved events.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.EmbeddedEvents.Events">
            <summary>The retrieved events.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest">
            <summary>
                Represents a request to retrieve all events.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Events.GetEvents.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.FetchOrder">
            <summary>
                Defines the ordering when fetching data.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.FetchOrder.Ascending">
            <summary>
                The ascending order.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.FetchOrder.Descending">
            <summary>
                The descending order.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.IProactiveConnectClient">
            <summary>
                Exposes Proactive Connect features.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ClearListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest})">
            <summary>
                Clears a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.CreateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest})">
            <summary>
                Creates an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.CreateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest})">
            <summary>
                Creates a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.DeleteItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest})">
            <summary>
                Deletes an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.DeleteListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest})">
            <summary>
                Deletes a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ExtractItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest})">
            <summary>
                Extracts list items as a CSV format.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetEventsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest})">
            <summary>
                Retrieves all events.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItem.GetItemRequest})">
            <summary>
                Retrieves an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest})">
            <summary>
                Retrieves all items of a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetList.GetListRequest})">
            <summary>
                Retrieves a single list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.GetListsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest})">
            <summary>
                Retrieves all lists.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ImportItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest})">
            <summary>
                Imports list items from a CSV file.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.ReplaceItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest})">
            <summary>
                Fetches and replaces all items from datasource.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.UpdateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest})">
            <summary>
                Updates an item.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.IProactiveConnectClient.UpdateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest})">
            <summary>
                Updates a list.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest">
            <summary>
                Represents a request to create an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.Data">
            <summary>
                Custom data for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForCustomData">
            <summary>
                Represents a builder for custom Data.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.CreateItem.IBuilderForCustomData.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
                Sets the custom Data on the builder.
            </summary>
            <param name="value">The custom Data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest">
            <summary>
                Represents a request to delete an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.DeleteItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest">
            <summary>
                Represents a request to extract items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ExtractItemsRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest">
            <summary>
                Represents a request to retrieve an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.GetItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.DeleteItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems">
            <summary>
                Represents a wrapper for items.
            </summary>
            <param name="Items">The retrieved items.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Items.ListItem})">
            <summary>
                Represents a wrapper for items.
            </summary>
            <param name="Items">The retrieved items.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.EmbeddedItems.Items">
            <summary>The retrieved items.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest">
            <summary>
                Represents a request to retrieve items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.GetItemsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.GetItems.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.GetItems.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest">
            <summary>
                Represents a request to import items from CSV file.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.File">
            <summary>
                CSV content of list items to import.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.ListId">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithFileData(System.Byte[])">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithFilePath(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile">
            <summary>
                Represents a builder for File.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile.WithFileData(System.Byte[])">
            <summary>
                Sets the File data on the builder.
            </summary>
            <param name="value">The file data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.IBuilderForFile.WithFilePath(System.String)">
            <summary>
                Sets the File path on the builder.
            </summary>
            <param name="value">The file path.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse">
            <summary>
                Represents the response when importing items.
            </summary>
            <param name="Inserted">The number of inserted items.</param>
            <param name="Updated">The number of updated items.</param>
            <param name="Deleted">The number of deleted items.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
                Represents the response when importing items.
            </summary>
            <param name="Inserted">The number of inserted items.</param>
            <param name="Updated">The number of updated items.</param>
            <param name="Deleted">The number of deleted items.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Inserted">
            <summary>The number of inserted items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Updated">
            <summary>The number of updated items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ImportItems.ImportItemsResponse.Deleted">
            <summary>The number of deleted items.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.ListItem">
            <summary>
                Represents a ListItem.
            </summary>
            <param name="Id">The unique Id.</param>
            <param name="CreatedAt">When the list item was created.</param>
            <param name="UpdatedAt">When the list item was updated.</param>
            <param name="Data">The custom data.</param>
            <param name="ListId">The unique list Id.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.ListItem.#ctor(System.Guid,System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
            <summary>
                Represents a ListItem.
            </summary>
            <param name="Id">The unique Id.</param>
            <param name="CreatedAt">When the list item was created.</param>
            <param name="UpdatedAt">When the list item was updated.</param>
            <param name="Data">The custom data.</param>
            <param name="ListId">The unique list Id.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.Id">
            <summary>The unique Id.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.CreatedAt">
            <summary>When the list item was created.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.UpdatedAt">
            <summary>When the list item was updated.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.Data">
            <summary>The custom data.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.ListItem.ListId">
            <summary>The unique list Id.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest">
            <summary>
                Represents a request to retrieve an item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.Data">
            <summary>
                Custom data for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.ItemId">
            <summary>
                Unique identifier for the item.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.ListId">
            <summary>
                Unique identifier for the list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithItemId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId.
            </summary>
            <param name="value">The list Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForItemId">
            <summary>
                Represents a builder for ItemId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForItemId.WithItemId(System.Guid)">
            <summary>
                Sets the ItemId on the builder.
            </summary>
            <param name="value">The ItemId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForCustomData">
            <summary>
                Represents a builder for custom Data.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Items.UpdateItem.IBuilderForCustomData.WithCustomData(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
                Sets the custom Data on the builder.
            </summary>
            <param name="value">The custom Data.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest">
            <summary>
                Represents a request to delete all items from a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ClearListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest">
            <summary>
                Represents a request to create a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithDescription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.CreateListRequestBuilder.WithTag(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name on the builder, up to 255 characters.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <summary>
                Adds an attribute on the builder.
            </summary>
            <param name="value">The attribute.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <summary>
                Adds an data source on the builder.
            </summary>
            <param name="value">The data source.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithDescription(System.String)">
            <summary>
                Sets the Description on the builder, up to 1024 characters.
            </summary>
            <param name="value">The description.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.CreateList.IBuilderForOptional.WithTag(System.String)">
            <summary>
                Adds a tag on the builder. The request allows up to 10 tags, each must be between 1 and 15 characters.
            </summary>
            <param name="value">The tag.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest">
            <summary>
                Represents a request to delete a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a DeleteListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetList.GetListRequest">
            <summary>
                Represents a request to retrieve a single list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetList.GetListRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a GetListRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists">
            <summary>
                Represents a wrapper for lists.
            </summary>
            <param name="Lists">The retrieved lists.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists.#ctor(System.Collections.Generic.IEnumerable{Vonage.ProactiveConnect.Lists.List})">
            <summary>
                Represents a wrapper for lists.
            </summary>
            <param name="Lists">The retrieved lists.</param>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.EmbeddedLists.Lists">
            <summary>The retrieved lists.</summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest">
            <summary>
                Represents a request to retrieve all lists.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Page">
            <summary>
                Page of results to jump to.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.OrderByDescending">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.WithPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.GetListsRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPage">
            <summary>
                Represents a builder for Page.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPage.WithPage(System.Int32)">
            <summary>
                Sets the Page.
            </summary>
            <param name="value">The page.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPageSize">
            <summary>
                Represents a builder for PageSize.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForPageSize.WithPageSize(System.Int32)">
            <summary>
                Sets the PageSize on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForOrder">
            <summary>
                Represents a builder for Order.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.GetLists.IBuilderForOrder.OrderByDescending">
            <summary>
                Sets the order to Descending on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.List">
            <summary>
                Represents a response when creating a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.CreatedAt">
            <summary>
                Date when the list was created.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Id">
            <summary>
                The list id.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.ItemsCount">
            <summary>
                The number of items.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.SyncStatus">
            <summary>
                Synchronization status between the list content (items) and it's datasource
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.List.UpdatedAt">
            <summary>
                Date when the list was updated.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListAttribute">
            <summary>
                Represents an attribute of a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Alias">
            <summary>
                Alternative name to use for this attribute. Use when you wish to correlate between 2 or more list that are using
                different attribute names for the same semantic data
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Key">
            <summary>
                Set to true if this attribute should be used to correlate between 2 or more lists.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListAttribute.Name">
            <summary>
                The list attribute name.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListDataSource">
            <summary>
                Represents a list data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.IntegrationId">
            <summary>
                Integration id defining salesforce credential to use for this datasource
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.Soql">
            <summary>
                Salesforce query defining which data to fetch from salesforce
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ListDataSource.Type">
            <summary>
                The datasource type.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ListDataSourceType">
            <summary>
                Represents a type of datasource.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.ListDataSourceType.Manual">
            <summary>
                Indicates a manual datasource.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.ListDataSourceType.Salesforce">
            <summary>
                Indicates a salesforce datasource.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest">
            <summary>
                Represents a request to replace all items in a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a ReplaceItemsRequest.
            </summary>
            <param name="id">The list Id.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.SyncStatus">
            <summary>
                Synchronization status between the list content (items) and it's datasource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.DataModified">
            <summary>
                One or more list items were added, removed and/or modified since latest sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Details">
            <summary>
                Provide details on sync status.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Dirty">
            <summary>
                Indicates if the list content or metadata were modified since last sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.MetadataModified">
            <summary>
                List metadata (definition) is modified since latest sync.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.SyncStatus.Value">
            <summary>
                Sync status.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.SyncStatus.Status">
            <summary>
                Represents the different statuses of a synchronization.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Configured">
            <summary>
                The "configured" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Clearing">
            <summary>
                The "clearing" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Fetching">
            <summary>
                The "fetching" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Paused">
            <summary>
                The "paused" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Cancelled">
            <summary>
                The "cancelled" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Completed">
            <summary>
                The "completed" status.
            </summary>
        </member>
        <member name="F:Vonage.ProactiveConnect.Lists.SyncStatus.Status.Failed">
            <summary>
                The "failed" status.
            </summary>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest">
            <summary>
                Represents a request to update a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Attributes">
            <summary>
                Attributes of the list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.DataSource">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Description">
            <summary>
                The description of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Id">
            <summary>
                Unique identifier for a list.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Name">
            <summary>
                The name of the resource.
            </summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Tags">
            <summary>
                Custom strings assigned with a resource - the request allows up to 10 tags, each must be between 1 and 15
                characters.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithDescription(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithListId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequestBuilder.WithTag(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForListId">
            <summary>
                Represents a builder for ListId.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForListId.WithListId(System.Guid)">
            <summary>
                Sets the ListId on the builder.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name on the builder, up to 255 characters.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithAttribute(Vonage.ProactiveConnect.Lists.ListAttribute)">
            <summary>
                Adds an attribute on the builder.
            </summary>
            <param name="value">The attribute.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithDataSource(Vonage.ProactiveConnect.Lists.ListDataSource)">
            <summary>
                Adds an data source on the builder.
            </summary>
            <param name="value">The data source.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithDescription(System.String)">
            <summary>
                Sets the Description on the builder, up to 1024 characters.
            </summary>
            <param name="value">The description.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.ProactiveConnect.Lists.UpdateList.IBuilderForOptional.WithTag(System.String)">
            <summary>
                Adds a tag on the builder. The request allows up to 10 tags, each must be between 1 and 15 characters.
            </summary>
            <param name="value">The tag.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.ProactiveConnect.PaginationResult`1">
            <summary>
                Represents a pagination result.
            </summary>
            <param name="Page">  The page number.</param>
            <param name="PageSize">  The page size.</param>
            <param name="TotalItems">   The number of total items.</param>
            <param name="TotalPages">The number of total pages.</param>
            <param name="Links">The HAL links.</param>
            <param name="Embedded"> The embedded elements.</param>
            <typeparam name="T">Type of embedded elements.</typeparam>
        </member>
        <member name="M:Vonage.ProactiveConnect.PaginationResult`1.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Vonage.Common.HalLinks,`0)">
            <summary>
                Represents a pagination result.
            </summary>
            <param name="Page">  The page number.</param>
            <param name="PageSize">  The page size.</param>
            <param name="TotalItems">   The number of total items.</param>
            <param name="TotalPages">The number of total pages.</param>
            <param name="Links">The HAL links.</param>
            <param name="Embedded"> The embedded elements.</param>
            <typeparam name="T">Type of embedded elements.</typeparam>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Page">
            <summary>  The page number.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.PageSize">
            <summary>  The page size.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.TotalItems">
            <summary>   The number of total items.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.TotalPages">
            <summary>The number of total pages.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Links">
            <summary>The HAL links.</summary>
        </member>
        <member name="P:Vonage.ProactiveConnect.PaginationResult`1.Embedded">
            <summary> The embedded elements.</summary>
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ClearListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ClearList.ClearListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.CreateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.CreateItem.CreateItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.CreateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.CreateList.CreateListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.DeleteItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.DeleteItem.DeleteItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.DeleteListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.DeleteList.DeleteListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ExtractItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ExtractItems.ExtractItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetEventsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Events.GetEvents.GetEventsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItem.GetItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.GetItems.GetItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetList.GetListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.GetListsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.GetLists.GetListsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ImportItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.ImportItems.ImportItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.ReplaceItemsAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.ReplaceItems.ReplaceItemsRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.UpdateItemAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Items.UpdateItem.UpdateItemRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.ProactiveConnect.ProactiveConnectClient.UpdateListAsync(Vonage.Common.Monads.Result{Vonage.ProactiveConnect.Lists.UpdateList.UpdateListRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Redaction.IRedactClient.RedactAsync(Vonage.Redaction.RedactRequest,Vonage.Request.Credentials)">
            <summary>
            Redact a specific message
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Redaction.RedactClient.RedactAsync(Vonage.Redaction.RedactRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Id">
            <summary>
            The transaction ID to redact
            </summary>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Product">
            <summary>
            Product name that the ID provided relates to
            </summary>
        </member>
        <member name="P:Vonage.Redaction.RedactRequest.Type">
            <summary>
            Required if redacting SMS data
            </summary>
        </member>
        <member name="T:Vonage.Request.ApiRequest.UriType">
            <summary>
                Type of the Uri.
            </summary>
        </member>
        <member name="F:Vonage.Request.ApiRequest.UriType.Api">
            <summary>
                Api uri type.
            </summary>
        </member>
        <member name="F:Vonage.Request.ApiRequest.UriType.Rest">
            <summary>
                Rest uri type.
            </summary>
        </member>
        <member name="T:Vonage.Request.AuthType">
            <summary>
                Defines the authentication type.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Basic">
            <summary>
                Basic authentication.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Bearer">
            <summary>
                Bearer authentication.
            </summary>
        </member>
        <member name="F:Vonage.Request.AuthType.Query">
            <summary>
                Query authentication.
            </summary>
        </member>
        <member name="T:Vonage.Request.Credentials">
            <summary>
                Represents credentials for Vonage APIs.
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApiKey">
            <summary>
                Vonage API Key (from your account dashboard)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApiSecret">
            <summary>
                Vonage API Secret (from your account dashboard)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApplicationId">
            <summary>
                Application ID (GUID)
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.ApplicationKey">
            <summary>
                Application private key contents
                This is the actual key file contents and NOT a path to the key file!
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.AppUserAgent">
            <summary>
                (Optional) App useragent value to pass with every request
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.Method">
            <summary>
                Method to be used for signing SMS Messages
            </summary>
        </member>
        <member name="P:Vonage.Request.Credentials.SecuritySecret">
            <summary>
                Signature Secret (from API settings section of your account settings)
            </summary>
        </member>
        <member name="M:Vonage.Request.Credentials.FromApiKeyAndSecret(System.String,System.String)">
            <summary>
                Builds credentials from ApiKey and ApiSecret.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="apiSecret">The api secret.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromApiKeySignatureSecretAndMethod(System.String,System.String,Vonage.Cryptography.SmsSignatureGenerator.Method)">
            <summary>
                Builds Credentials from ApiKey, SignatureSecret and Method.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="signatureSecret">The signature secret.</param>
            <param name="signatureMethod">The signature method.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromAppIdAndPrivateKey(System.String,System.String)">
            <summary>
                Builds Credentials from ApplicationId and PrivateKey.
            </summary>
            <param name="appId">The application id.</param>
            <param name="privateKey">The private key.</param>
            <returns>The credentials.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.FromAppIdAndPrivateKeyPath(System.String,System.String)">
            <summary>
                Builds Credentials from ApplicationId and PrivateKey file.
            </summary>
            <param name="appId">Your Vonage Application ID</param>
            <param name="privateKeyPath">path to your private Key file</param>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if app doesn't have required permission to key file</exception>
            <exception cref="T:System.ArgumentException">
                privateKeyPath is a zero length string, contains only white space or
                contains one or more invalid characters
            </exception>
            <exception cref="T:System.ArgumentNullException">privateKeyPath is null</exception>
            <exception cref="T:System.IO.PathTooLongException">
                The specified path, filename, or both exceed the system-defined max
                length
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
                The specified path is invalid, (for example, it is on an
                unmapped drive).
            </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in path was not found.</exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format.</exception>
            <returns>CredentialsObject</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.GetAuthenticationHeader">
            <summary>
                Provides the preferred authentication based on authentication type.
            </summary>
            <returns>The authentication header if it matches any criteria. A AuthenticationFailure otherwise.</returns>
        </member>
        <member name="M:Vonage.Request.Credentials.GetPreferredAuthenticationType">
            <summary>
                Provides the preferred authentication type.
            </summary>
            <returns>The authentication type if it matches any criteria. A AuthenticationFailure otherwise.</returns>
            <remarks>
                Bearer will always be preferred over Basic if possible.
            </remarks>
        </member>
        <member name="M:Vonage.Request.Credentials.GetUserAgent">
            <summary>
                Returns the user agent from credentials if not null, from configuration otherwise.
            </summary>
            <returns>The user agent.</returns>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Dispose">
            <summary>
                Releases all resources used by the current instance
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Run(System.Action,System.Threading.CancellationToken)">
            <summary>
                Runs an action after entering the semaphore (if the CancellationToken is not canceled)
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.RunAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                Runs an action after entering the semaphore (if the CancellationToken is not canceled)
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.RunAsync``1(System.Func{``0,System.Threading.Tasks.Task},``0,System.Threading.CancellationToken)">
            <summary>
                Runs an action after entering the semaphore (if the CancellationToken is not canceled)
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.RunAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)">
            <summary>
                Runs an action after entering the semaphore (if the CancellationToken is not canceled)
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Release">
            <summary>
                Exits the semaphore
            </summary>
        </member>
        <member name="M:Vonage.Request.TimeSpanSemaphore.Wait(System.Threading.CancellationToken)">
            <summary>
                Blocks the current thread until it can enter the semaphore, while observing a CancellationToken
            </summary>
        </member>
        <member name="T:Vonage.Serialization.HttpMethodConverter">
            <summary>
                Converter from HttpMethod to Json.
            </summary>
        </member>
        <member name="M:Vonage.Serialization.HttpMethodConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Serialization.HttpMethodConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Serialization.HttpMethodConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Serialization.JsonSerializerBuilder">
            <summary>
                Builder for Video serializer.
            </summary>
        </member>
        <member name="M:Vonage.Serialization.JsonSerializerBuilder.BuildWithCamelCase">
            <summary>
                Build a serializer with a Camel case policy.
            </summary>
            <returns>A serializer.</returns>
        </member>
        <member name="M:Vonage.Serialization.JsonSerializerBuilder.BuildWithSnakeCase">
            <summary>
                Build a serializer with a Snake case policy.
            </summary>
            <returns>A serializer.</returns>
        </member>
        <member name="T:Vonage.Serialization.VonageSerialization">
            <summary>
            Exposes serialization settings
            </summary>
        </member>
        <member name="P:Vonage.Serialization.VonageSerialization.SerializerSettings">
            <summary>
            The custom serialization settings.
            </summary>
        </member>
        <member name="M:Vonage.ShortCodes.ShortCodesClient.ManageOptInAsync(Vonage.ShortCodes.OptInManageRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.ShortCodes.ShortCodesClient.QueryOptInsAsync(Vonage.ShortCodes.OptInQueryRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.ShortCodes.ShortCodesClient.SendAlertAsync(Vonage.ShortCodes.AlertRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.ShortCodes.ShortCodesClient.SendTwoFactorAuthAsync(Vonage.ShortCodes.TwoFactorAuthRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="T:Vonage.SubAccounts.Account">
            <summary>
                Represents an account.
            </summary>
            <param name="ApiKey">Unique SubAccount ID.</param>
            <param name="Name">Name of the SubAccount.</param>
            <param name="PrimaryAccountApiKey">Unique primary account ID.</param>
            <param name="UsePrimaryAccountBalance">Flag showing if balance is shared with primary account.</param>
            <param name="CreatedAt">SubAccount creation date and time.</param>
            <param name="IsSuspended">SubAccount suspension status.</param>
            <param name="Balance">Balance of the SubAccount. Value is null if balance is shared with primary account.</param>
            <param name="CreditLimit">Credit limit of the SubAccount. Value is null if balance is shared with primary account.</param>
        </member>
        <member name="M:Vonage.SubAccounts.Account.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTimeOffset,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
                Represents an account.
            </summary>
            <param name="ApiKey">Unique SubAccount ID.</param>
            <param name="Name">Name of the SubAccount.</param>
            <param name="PrimaryAccountApiKey">Unique primary account ID.</param>
            <param name="UsePrimaryAccountBalance">Flag showing if balance is shared with primary account.</param>
            <param name="CreatedAt">SubAccount creation date and time.</param>
            <param name="IsSuspended">SubAccount suspension status.</param>
            <param name="Balance">Balance of the SubAccount. Value is null if balance is shared with primary account.</param>
            <param name="CreditLimit">Credit limit of the SubAccount. Value is null if balance is shared with primary account.</param>
        </member>
        <member name="P:Vonage.SubAccounts.Account.ApiKey">
            <summary>Unique SubAccount ID.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.Name">
            <summary>Name of the SubAccount.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.PrimaryAccountApiKey">
            <summary>Unique primary account ID.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.UsePrimaryAccountBalance">
            <summary>Flag showing if balance is shared with primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.CreatedAt">
            <summary>SubAccount creation date and time.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.IsSuspended">
            <summary>SubAccount suspension status.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.Balance">
            <summary>Balance of the SubAccount. Value is null if balance is shared with primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Account.CreditLimit">
            <summary>Credit limit of the SubAccount. Value is null if balance is shared with primary account.</summary>
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Name">
            <summary>
                Name of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Secret">
            <summary>
                Secret of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.UsePrimaryAccountBalance">
            <summary>
                Flag showing if balance is shared with primary account.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.Build">
            <summary>
                Initializes a builder for CreateRoomRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.DisableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequestBuilder.WithSecret(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.IBuilderForName">
            <summary>
                Represents a builder for Name.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForName.WithName(System.String)">
            <summary>
                Sets the Name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional.DisableSharedAccountBalance">
            <summary>
                Disables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.CreateSubAccount.IBuilderForOptional.WithSecret(System.String)">
            <summary>
                Sets the secret.
            </summary>
            <param name="value">The secret.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.SubAccountKey">
            <summary>
                The SubAccount Id.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetSubAccountRequest.
            </summary>
            <param name="subAccountKey">The SubAccount Id.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse">
            <summary>
                Represents the primary account and its subaccounts.
            </summary>
            <param name="PrimaryAccount">The primary account.</param>
            <param name="SubAccounts">All subaccounts.</param>
        </member>
        <member name="M:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.#ctor(Vonage.SubAccounts.Account,Vonage.SubAccounts.Account[])">
            <summary>
                Represents the primary account and its subaccounts.
            </summary>
            <param name="PrimaryAccount">The primary account.</param>
            <param name="SubAccounts">All subaccounts.</param>
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.PrimaryAccount">
            <summary>The primary account.</summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetSubAccounts.GetSubAccountsResponse.SubAccounts">
            <summary>All subaccounts.</summary>
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.GetTransfersRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.EndDate">
            <summary>
                End of the retrieval period. If absent then all transfers until now is returned.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.StartDate">
            <summary>
                Start of the retrieval period.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.SubAccountKey">
            <summary>
                Subaccount to filter by.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.Build">
            <summary>
                Initializes a builder for GetTransfersRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithEndDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithStartDate(System.DateTimeOffset)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.GetTransfersRequestBuilder.WithSubAccountKey(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.IBuilderForStartDate">
            <summary>
                Represents a builder for StartDate.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForStartDate.WithStartDate(System.DateTimeOffset)">
            <summary>
                Sets the StartDate.
            </summary>
            <param name="value">The StartDate.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.GetTransfers.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForOptional.WithEndDate(System.DateTimeOffset)">
            <summary>
                Sets the EndDate.
            </summary>
            <param name="value">The EndDate.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.GetTransfers.IBuilderForOptional.WithSubAccountKey(System.String)">
            <summary>
                Sets the SubAccount key.
            </summary>
            <param name="value">The SubAccount key.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.ISubAccountsClient">
            <summary>
                Exposes Subaccounts features.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.CreateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest})">
            <summary>
                Creates a subaccount.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetBalanceTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <summary>
                Retrieve a list of balance transfers that have taken place for a primary account within a specified time period.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetCreditTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <summary>
                Retrieve a list of credit transfers that have taken place for a primary account within a specified time period.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest})">
            <summary>
                Retrieves a subaccount of the primary account
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.GetSubAccountsAsync">
            <summary>
                Retrieves all subaccounts of the primary account.
            </summary>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferBalanceAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <summary>
                Transfer balance limit between a primary account and one of its subaccounts.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferCreditAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <summary>
                Transfer credit limit between a primary account and one of its subaccounts.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.TransferNumberAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferNumber.TransferNumberRequest})">
            <summary>
                Transfer number from one account to another.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.ISubAccountsClient.UpdateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest})">
            <summary>
                Updates a subaccount.
            </summary>
            <param name="request">The request.</param>
            <returns>A result indicating if the request whether succeeded or failed.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.SubAccountsClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration,System.String)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
            <param name="apiKey">The account Id.</param>
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.CreateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.CreateSubAccount.CreateSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetBalanceTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetCreditTransfersAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetTransfers.GetTransfersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.GetSubAccount.GetSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.GetSubAccountsAsync">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferBalanceAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferCreditAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferAmount.TransferAmountRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.TransferNumberAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.TransferNumber.TransferNumberRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.SubAccountsClient.UpdateSubAccountAsync(Vonage.Common.Monads.Result{Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.Transfer">
            <summary>
                Represents a transfer.
            </summary>
            <param name="Id">Unique transfer ID</param>
            <param name="Amount">Transfer amount</param>
            <param name="From">Account the amount is transferred from</param>
            <param name="To">Account the amount is transferred to</param>
            <param name="Reference">Reference for the transfer</param>
            <param name="CreatedAt">The date and time when the transfer was executed</param>
        </member>
        <member name="M:Vonage.SubAccounts.Transfer.#ctor(System.Guid,System.Decimal,System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
                Represents a transfer.
            </summary>
            <param name="Id">Unique transfer ID</param>
            <param name="Amount">Transfer amount</param>
            <param name="From">Account the amount is transferred from</param>
            <param name="To">Account the amount is transferred to</param>
            <param name="Reference">Reference for the transfer</param>
            <param name="CreatedAt">The date and time when the transfer was executed</param>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Id">
            <summary>Unique transfer ID</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Amount">
            <summary>Transfer amount</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.From">
            <summary>Account the amount is transferred from</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.To">
            <summary>Account the amount is transferred to</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.Reference">
            <summary>Reference for the transfer</summary>
        </member>
        <member name="P:Vonage.SubAccounts.Transfer.CreatedAt">
            <summary>The date and time when the transfer was executed</summary>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.TransferAmountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Amount">
            <summary>
                The amount to be transferred.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.From">
            <summary>
                Account the credit is transferred from.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Reference">
            <summary>
                Reference for the credit transfer
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.To">
            <summary>
                Account the credit is transferred to.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.Build">
            <summary>
                Initializes a builder for a transfer request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithAmount(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.TransferAmountRequestBuilder.WithTo(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForFrom">
            <summary>
                Represents a builder for From.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForFrom.WithFrom(System.String)">
            <summary>
                Sets the From.
            </summary>
            <param name="value">The from.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForTo">
            <summary>
                Represents a builder for To.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForTo.WithTo(System.String)">
            <summary>
                Sets the To.
            </summary>
            <param name="value">The to.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForAmount">
            <summary>
                Represents a builder for Amount.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForAmount.WithAmount(System.Decimal)">
            <summary>
                Sets the Amount.
            </summary>
            <param name="value">The amount.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferAmount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferAmount.IBuilderForOptional.WithReference(System.String)">
            <summary>
                Sets the reference.
            </summary>
            <param name="value">The reference.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.TransferNumberRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Country">
            <summary>
                The two character country code in ISO 3166-1 alpha-2 format
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.From">
            <summary>
                Account the number is transferred from
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Number">
            <summary>
                Number transferred
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.To">
            <summary>
                Account the number is transferred to
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.Build">
            <summary>
                Initializes a builder for TransferNumberRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithCountry(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithNumber(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberRequestBuilder.WithTo(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForFrom">
            <summary>
                Represents a builder for From.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForFrom.WithFrom(System.String)">
            <summary>
                Sets the From.
            </summary>
            <param name="value">The From.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForTo">
            <summary>
                Represents a builder for To.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForTo.WithTo(System.String)">
            <summary>
                Sets the To.
            </summary>
            <param name="value">The To.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForNumber">
            <summary>
                Represents a builder for Number.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForNumber.WithNumber(System.String)">
            <summary>
                Sets the Number.
            </summary>
            <param name="value">The Number.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.IBuilderForCountry">
            <summary>
                Represents a builder for Country.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.IBuilderForCountry.WithCountry(System.String)">
            <summary>
                Sets the Country.
            </summary>
            <param name="value">The Country.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.SubAccounts.TransferNumber.TransferNumberResponse">
            <summary>
            </summary>
            <param name="Number"></param>
            <param name="Country"></param>
            <param name="From"></param>
            <param name="To"></param>
        </member>
        <member name="M:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
            <param name="Country"></param>
            <param name="From"></param>
            <param name="To"></param>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.Number">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.Country">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.From">
            <summary></summary>
        </member>
        <member name="P:Vonage.SubAccounts.TransferNumber.TransferNumberResponse.To">
            <summary></summary>
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.ApiKey">
            <summary>
                Unique primary account ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Name">
            <summary>
                Name of the subaccount.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.SubAccountKey">
            <summary>
                Unique SubAccount ID.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Suspended">
            <summary>
                Indicates if the account is suspended.
            </summary>
        </member>
        <member name="P:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.UsePrimaryAccountBalance">
            <summary>
                Flag showing if balance is shared with primary account.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.Build">
            <summary>
                Initializes a builder for UpdateSubAccountRequest.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.DisableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.EnableAccount">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.EnableSharedAccountBalance">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.SuspendAccount">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.UpdateSubAccountRequestBuilder.WithSubAccountKey(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.IBuilderForSubAccountKey">
            <summary>
                Represents a builder for SubAccountKey.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForSubAccountKey.WithSubAccountKey(System.String)">
            <summary>
                Sets the SubAccount key.
            </summary>
            <param name="value">The SubAccount key.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.DisableSharedAccountBalance">
            <summary>
                Disables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.EnableAccount">
            <summary>
                Enables the account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.EnableSharedAccountBalance">
            <summary>
                Enables shared balance with primary account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.SuspendAccount">
            <summary>
                Suspends the account.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.SubAccounts.UpdateSubAccount.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the Name.
            </summary>
            <param name="value">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Vonage.Users.CreateUser.CreateUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Channels">
            <summary>
                User channels.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.DisplayName">
            <summary>
                A string to be displayed as user name. It does not need to be unique.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.ImageUrl">
            <summary>
                An image URL that you associate with the user
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Name">
            <summary>
                Unique name for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.CreateUser.CreateUserRequest.Properties">
            <summary>
                User properties.
            </summary>
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.CreateUser.CreateUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.CreateUser.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMessenger)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelPstn)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSip)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSms)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMms)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelVbc)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelViber)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWebSocket)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWhatsApp)">
            <summary>
            Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
            Sets the display name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
            Sets the  image url.
            </summary>
            <param name="value">The image url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithName(System.String)">
            <summary>
            Sets the name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.CreateUser.IBuilderForOptional.WithUserProperty(System.String,System.Object)">
            <summary>
            Sets a user property.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.DeleteUser.DeleteUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.DeleteUser.DeleteUserRequest.UserId">
            <summary>
                ID of the user.
            </summary>
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.DeleteUser.DeleteUserRequest.Parse(System.String)">
            <summary>
                Parses the input into a DeleteUserRequest.
            </summary>
            <param name="userId"></param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Users.GetUser.GetUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.GetUser.GetUserRequest.UserId">
            <summary>
                ID of the user.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUser.GetUserRequest.Parse(System.String)">
            <summary>
                Parses the input into a GetUserRequest.
            </summary>
            <param name="userId"></param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Cursor">
            <summary>
                The cursor to start returning results from. You are not expected to provide this manually, but to follow the url
                provided in _links.next.href or _links.prev.href in the response which contains a cursor value.
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Name">
            <summary>
                Unique name for a user
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.Order">
            <summary>
                Defines the data ordering.
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersRequest.PageSize">
            <summary>
                Number of results per page.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithOrder(Vonage.ProactiveConnect.FetchOrder)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersRequestBuilder.WithPageSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.GetUsers.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the user name on the builder.
            </summary>
            <param name="value">The user name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithOrder(Vonage.ProactiveConnect.FetchOrder)">
            <summary>
                Sets the order on the builder.
            </summary>
            <param name="value">The order.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.GetUsers.IBuilderForOptional.WithPageSize(System.Int32)">
            <summary>
                Sets the page size on the builder.
            </summary>
            <param name="value">The page size.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersResponse">
            <summary>
            </summary>
            <param name="PageSize">The amount of records returned in this response.</param>
            <param name="Embedded">
                A list of user objects. See
                <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user
                response fields for a description of the nested objects
            </param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersResponse.#ctor(System.Int32,Vonage.Users.GetUsers.EmbeddedUsers,Vonage.Common.HalLinks{Vonage.Users.GetUsers.GetUsersHalLink})">
            <summary>
            </summary>
            <param name="PageSize">The amount of records returned in this response.</param>
            <param name="Embedded">
                A list of user objects. See
                <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user
                response fields for a description of the nested objects
            </param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.PageSize">
            <summary>The amount of records returned in this response.</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.Embedded">
            <summary>
                A list of user objects. See
                <see href="https://developer.vonage.com/en/api/application.v2#getUser">the get details</see> of a specific user
                response fields for a description of the nested objects
            </summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersResponse.Links">
            <summary>A series of links between resources in this API in the http://stateless.co/hal_specification.html.</summary>
        </member>
        <member name="T:Vonage.Users.GetUsers.GetUsersHalLink">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersHalLink.#ctor(System.Uri)">
            <summary>
                Represents a link to another resource.
            </summary>
            <param name="Href">Hyperlink reference.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.GetUsersHalLink.Href">
            <summary>Hyperlink reference.</summary>
        </member>
        <member name="M:Vonage.Users.GetUsers.GetUsersHalLink.BuildRequest">
            <summary>
                Transforms the link into a GetUsersRequest using the cursor pagination.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vonage.Users.GetUsers.EmbeddedUsers">
            <summary>
                Represents a list of user objects.
            </summary>
            <param name="Users">List of users matching the provided filter.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.EmbeddedUsers.#ctor(Vonage.Users.GetUsers.UserSummary[])">
            <summary>
                Represents a list of user objects.
            </summary>
            <param name="Users">List of users matching the provided filter.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.EmbeddedUsers.Users">
            <summary>List of users matching the provided filter.</summary>
        </member>
        <member name="T:Vonage.Users.GetUsers.UserSummary">
            <summary>
                Represents a user summary.
            </summary>
            <param name="Id">User ID</param>
            <param name="Name">Unique name for a user</param>
            <param name="DisplayName">A string to be displayed as user name. It does not need to be unique</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="M:Vonage.Users.GetUsers.UserSummary.#ctor(System.String,System.String,System.String,Vonage.Common.HalLinks)">
            <summary>
                Represents a user summary.
            </summary>
            <param name="Id">User ID</param>
            <param name="Name">Unique name for a user</param>
            <param name="DisplayName">A string to be displayed as user name. It does not need to be unique</param>
            <param name="Links">A series of links between resources in this API in the http://stateless.co/hal_specification.html.</param>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Id">
            <summary>User ID</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Name">
            <summary>Unique name for a user</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.DisplayName">
            <summary>A string to be displayed as user name. It does not need to be unique</summary>
        </member>
        <member name="P:Vonage.Users.GetUsers.UserSummary.Links">
            <summary>A series of links between resources in this API in the http://stateless.co/hal_specification.html.</summary>
        </member>
        <member name="T:Vonage.Users.IUsersClient">
            <summary>
                Exposes User management features.
            </summary>
        </member>
        <member name="M:Vonage.Users.IUsersClient.DeleteUserAsync(Vonage.Common.Monads.Result{Vonage.Users.DeleteUser.DeleteUserRequest})">
            <summary>
                Deletes a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.GetUserAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUser.GetUserRequest})">
            <summary>
                Retrieves a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.GetUsersAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUsers.GetUsersRequest})">
            <summary>
                Retrieves users.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.CreateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.CreateUser.CreateUserRequest})">
            <summary>
                Creates a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.Users.IUsersClient.UpdateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.UpdateUser.UpdateUserRequest})">
            <summary>
                Updates a user.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.Users.UpdateUser.UpdateUserRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Channels">
            <summary>
                User channels.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.DisplayName">
            <summary>
                A string to be displayed as user name. It does not need to be unique.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Id">
            <summary>
                Unique ID for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.ImageUrl">
            <summary>
                An image URL that you associate with the user
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Name">
            <summary>
                Unique name for a user.
            </summary>
        </member>
        <member name="P:Vonage.Users.UpdateUser.UpdateUserRequest.Properties">
            <summary>
                User properties.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UpdateUser.UpdateUserRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Users.UpdateUser.IBuilderForId">
            <summary>
                Represents a builder for User Id.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForId.WithId(System.String)">
            <summary>
                Sets the Id on the builder.
            </summary>
            <param name="value">The user Id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.UpdateUser.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMessenger)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelPstn)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSip)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelSms)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelMms)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelVbc)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelViber)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWebSocket)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithChannel(Vonage.Users.ChannelWhatsApp)">
            <summary>
                Sets a channel.
            </summary>
            <param name="value">The channel.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithDisplayName(System.String)">
            <summary>
                Sets the display name.
            </summary>
            <param name="value">The display name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithImageUrl(System.Uri)">
            <summary>
                Sets the  image url.
            </summary>
            <param name="value">The image url.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the name.
            </summary>
            <param name="value">The name.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Users.UpdateUser.IBuilderForOptional.WithUserProperty(System.String,System.Object)">
            <summary>
                Sets a user property.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Users.ChannelPstn">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelPstn.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelPstn.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelSip">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="M:Vonage.Users.ChannelSip.#ctor(System.String,System.String,System.String)">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="Username"></param>
            <param name="Password"></param>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Username">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelSip.Password">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelVbc">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="M:Vonage.Users.ChannelVbc.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Extension"></param>
        </member>
        <member name="P:Vonage.Users.ChannelVbc.Extension">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelWebSocket">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
            <param name="Headers"></param>
        </member>
        <member name="M:Vonage.Users.ChannelWebSocket.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            </summary>
            <param name="Uri"></param>
            <param name="ContentType"></param>
            <param name="Headers"></param>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.Uri">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.ContentType">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.ChannelWebSocket.Headers">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelSms">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelSms.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelSms.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelMms">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelMms.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelMms.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelWhatsApp">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelWhatsApp.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelWhatsApp.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelViber">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="M:Vonage.Users.ChannelViber.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Number"></param>
        </member>
        <member name="P:Vonage.Users.ChannelViber.Number">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.ChannelMessenger">
            <summary>
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:Vonage.Users.ChannelMessenger.#ctor(System.String)">
            <summary>
            </summary>
            <param name="Id"></param>
        </member>
        <member name="P:Vonage.Users.ChannelMessenger.Id">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.UserChannels">
            <summary>
            </summary>
            <param name="Pstn"></param>
            <param name="Sip"></param>
            <param name="Vbc"></param>
            <param name="WebSocket"></param>
            <param name="Sms"></param>
            <param name="Mms"></param>
            <param name="WhatsApp"></param>
            <param name="Viber"></param>
            <param name="Messenger"></param>
        </member>
        <member name="M:Vonage.Users.UserChannels.#ctor(System.Collections.Generic.IEnumerable{Vonage.Users.ChannelPstn},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelSip},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelVbc},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelWebSocket},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelSms},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelMms},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelWhatsApp},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelViber},System.Collections.Generic.IEnumerable{Vonage.Users.ChannelMessenger})">
            <summary>
            </summary>
            <param name="Pstn"></param>
            <param name="Sip"></param>
            <param name="Vbc"></param>
            <param name="WebSocket"></param>
            <param name="Sms"></param>
            <param name="Mms"></param>
            <param name="WhatsApp"></param>
            <param name="Viber"></param>
            <param name="Messenger"></param>
        </member>
        <member name="P:Vonage.Users.UserChannels.Pstn">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Sip">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Vbc">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.WebSocket">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Sms">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Mms">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.WhatsApp">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Viber">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.UserChannels.Messenger">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.User">
            <summary>
            </summary>
            <param name="Id"></param>
            <param name="Name"></param>
            <param name="DisplayName"></param>
            <param name="ImageUrl"></param>
            <param name="Properties"></param>
            <param name="Channels"></param>
            <param name="Links"></param>
        </member>
        <member name="M:Vonage.Users.User.#ctor(System.String,System.String,System.String,System.Uri,System.Collections.Generic.Dictionary{System.String,System.Object},Vonage.Users.UserChannels,Vonage.Common.HalLinks)">
            <summary>
            </summary>
            <param name="Id"></param>
            <param name="Name"></param>
            <param name="DisplayName"></param>
            <param name="ImageUrl"></param>
            <param name="Properties"></param>
            <param name="Channels"></param>
            <param name="Links"></param>
        </member>
        <member name="P:Vonage.Users.User.Id">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Name">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.DisplayName">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.ImageUrl">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Properties">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Channels">
            <summary></summary>
        </member>
        <member name="P:Vonage.Users.User.Links">
            <summary></summary>
        </member>
        <member name="T:Vonage.Users.UserProperty">
            <summary>
            </summary>
            <param name="CustomData"></param>
        </member>
        <member name="M:Vonage.Users.UserProperty.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            </summary>
            <param name="CustomData"></param>
        </member>
        <member name="P:Vonage.Users.UserProperty.CustomData">
            <summary></summary>
        </member>
        <member name="M:Vonage.Users.UsersClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Users.UsersClient.CreateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.CreateUser.CreateUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.DeleteUserAsync(Vonage.Common.Monads.Result{Vonage.Users.DeleteUser.DeleteUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.GetUserAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUser.GetUserRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.GetUsersAsync(Vonage.Common.Monads.Result{Vonage.Users.GetUsers.GetUsersRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Users.UsersClient.UpdateUserAsync(Vonage.Common.Monads.Result{Vonage.Users.UpdateUser.UpdateUserRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Utility.WebhookParser">
            <summary>
                Utility class to parse Webhook results.
            </summary>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseQuery``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}})">
            <summary>
            Used to Parse Query parameters into a given type
            This Method will convert the string pairs into a dictionary and then use
            Newtonsoft to convert the pairs to JSON - finally resolving the object from JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestData"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseQueryNameValuePairs``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Used to Parse Query parameters into a given type
            This Method will convert the string pairs into a dictionary and then use
            Newtonsoft to convert the pairs to JSON - finally resolving the object from JSON
            </summary>
            <typeparam name="T"></typeparam>
            <param name="requestData"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseUrlFormString``1(System.String)">
            <summary>
            Parses URL content into the given object type
            This uses Newtonsoft.Json - abnormally named fields should be decorated with the 'JsonPropertyAttribute'
            </summary>
            <typeparam name="T"></typeparam>
            <param name="contentString"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhook``1(System.IO.Stream,System.String)">
            <summary>
            Synchronous Implementation of ParseWebhook
            Meant to be called from ASP.NET Core MVC with only the Content of the body
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhook``1(System.Net.Http.HttpRequestMessage)">
            <summary>
            Synchronous implementation of the ParseWebhook method, meant to be called from 
            Legacy ASP.NET Web Api with an HttpRequestMessage
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhookAsync``1(System.IO.Stream,System.String)">
            <summary>
            Parses the stream into the given type
            This is anticipated to be used by ASP.NET Core MVC/API requests where the content is in the Body of the inbound request
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <param name="content"></param>
            <param name="contentType">The content type of the request, must be of the type application/json or application/x-www-form-urlencoded</param>
            <exception cref="T:System.ArgumentException">Thrown if Content type does not contain application/json or application/x-www-form-urlencoded</exception>
            <returns></returns>
        </member>
        <member name="M:Vonage.Utility.WebhookParser.ParseWebhookAsync``1(System.Net.Http.HttpRequestMessage)">
            <summary>
            Parses the HttpRequestMessage's content into the given type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <exception cref="T:System.ArgumentException">Thrown if Content type does not contain application/json or application/x-www-form-urlencoded</exception>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequestAsync(Vonage.Verify.VerifyRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyCheckAsync(Vonage.Verify.VerifyCheckRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify check to confirm that the PIN you received from your user matches the one sent by Vonage in your Verify request
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifySearchAsync(Vonage.Verify.VerifySearchRequest,Vonage.Request.Credentials)">
            <summary>
            Use Verify search to check the status of past or current verification requests
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyControlAsync(Vonage.Verify.VerifyControlRequest,Vonage.Request.Credentials)">
            <summary>
            Control the progress of your Verify requests. To cancel an existing Verify request, or to trigger the next verification event
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Verify.IVerifyClient.VerifyRequestWithPSD2Async(Vonage.Verify.Psd2Request,Vonage.Request.Credentials)">
            <summary>
            Use Verify request to generate and send a PIN to your user to authorize a payment: 
            1. Create a request to send a verification code to your user. 
            2. Check the status field in the response to ensure that your request was successful (zero is success). 
            3. Use the request_id field in the response for the Verify check.
            </summary>
            <param name="request"></param>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.Payee">
            <summary>
            An alphanumeric string to indicate to the user the 
            name of the recipient that they are confirming a payment to.
            </summary>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.Amount">
            <summary>
            The Decimal amount of the payment to be confirmed, in Euros
            </summary>
        </member>
        <member name="P:Vonage.Verify.Psd2Request.WorkflowId">
            <summary>
            Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. 
            For example, an id of 1 identifies the workflow SMS - TTS - TTS. 
            For a list of all workflows and their associated ids, please visit the developer portal.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.DateReceived">
            <summary>
            The date and time this check was received (in the format YYYY-MM-DD HH:MM:SS)
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.Code">
            <summary>
            The code supplied with this check request
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.Status">
            <summary>
            One of: VALID or INVALID
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheck.IpAddress">
            <summary>
            The IP address, if available (this field is no longer used).
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.RequestId">
            <summary>
            The Verify request to check. This is the request_id you received in the response to the Verify request
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.Code">
            <summary>
            The verification code entered by your user.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckRequest.IpAddress">
            <summary>
            (This field is no longer used)
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.RequestId">
            <summary>
            The request_id that you received in the response to the Verify request and used in the Verify check request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.EventId">
            <summary>
            The ID of the verification event, such as an SMS or TTS call.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.Price">
            <summary>
            The cost incurred for this request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.Currency">
            <summary>
            The currency code.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyCheckResponse.EstimatedPriceMessagesSent">
            <summary>
            This field may not be present, depending on your pricing model. 
            The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. 
            This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. 
            When this field is present, the total cost of the verification is the sum of this field and the price field.
            </summary>
        </member>
        <member name="M:Vonage.Verify.VerifyClient.VerifyCheckAsync(Vonage.Verify.VerifyCheckRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Verify.VerifyClient.VerifyControlAsync(Vonage.Verify.VerifyControlRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Verify.VerifyClient.VerifyRequestAsync(Vonage.Verify.VerifyRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Verify.VerifyClient.VerifyRequestWithPSD2Async(Vonage.Verify.Psd2Request,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="M:Vonage.Verify.VerifyClient.VerifySearchAsync(Vonage.Verify.VerifySearchRequest,Vonage.Request.Credentials)">
            <inheritdoc/>
        </member>
        <member name="P:Vonage.Verify.VerifyControlRequest.RequestId">
            <summary>
            The request_id you received in the response to the Verify request.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyControlRequest.Cmd">
            <summary>
            The possible commands are cancel to request cancellation of the verification process,
            or trigger_next_event to advance to the next verification event (if any). 
            Cancellation is only possible 30 seconds after the start of the verification request and 
            before the second event (either TTS or SMS) has taken place.
            must be one of 'cancel' or 'trigger_next_event'
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.Brand">
            <summary>
            An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: "Your Acme Inc PIN is ..."
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.SenderId">
            <summary>
            An 11-character alphanumeric string that represents the identity of the sender of the verification request: https://developer.nexmo.com/messaging/sms/guides/custom-sender-id. 
            Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequest.WorkflowId">
            <summary>
            Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. 
            For example, an id of 1 identifies the workflow SMS - TTS - TTS. 
            For a list of all workflows and their associated ids, please visit the developer portal.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Number">
            <summary>
            The mobile or landline phone number to verify. Unless you are setting country explicitly, this number must be in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Country">
            <summary>
            If you do not provide number in international format or you are not sure if number is correctly formatted, specify the two-character country code in country. Verify will then format the number for you.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.CodeLength">
            <summary>
            The length of the verification code. Must be 4 or 6
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.Lg">
            <summary>
            By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the number. 
            For example, the text message or TTS message for a 33* number is sent in French. 
            Use this parameter to explicitly control the language used for the Verify request. 
            A list of languages is available: https://developer.nexmo.com/verify/guides/verify-languages
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.PinExpiry">
            <summary>
            How long the generated verification code is valid for, in seconds. 
            When you specify both pin_expiry and next_event_wait then pin_expiry must be an integer 
            multiple of next_event_wait otherwise pin_expiry is defaulted to equal next_event_wait. 
            See changing the event timings: https://developer.nexmo.com/verify/guides/changing-default-timings.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyRequestBase.NextEventWait">
            <summary>
            Specifies the wait time in seconds between attempts to deliver the verification code.
            Must be between 60 and 900
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponse.RequestId">
            <summary>
                The unique ID of the Verify request. This may be blank in an error situation.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponse.Network">
            <summary>
                The Network ID of the blocking network, if relevant to the error.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponseBase.ErrorText">
            <summary>
            If the status is non-zero, this explains the error encountered.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifyResponseBase.Status">
            <summary>
            A value of 0 indicates that your user entered the correct code. If it is non-zero, check the error_text.
            </summary>
        </member>
        <member name="P:Vonage.Verify.VerifySearchRequest.RequestId">
            <summary>
            The request_id you received in the Verify Request Response.
            </summary>
        </member>
        <member name="T:Vonage.VerifyV2.Cancel.CancelRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.Cancel.CancelRequest.RequestId">
            <summary>
                ID of the verify request.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.Cancel.CancelRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a CancelRequest.
            </summary>
            <param name="requestId">The verify request identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.IVerifyV2Client">
            <summary>
                Exposes VerifyV2 features.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.CancelAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.Cancel.CancelRequest})">
            <summary>
                Aborts the workflow if a verification request is still active.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.NextWorkflowAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest})">
            <summary>
                Move the request onto the next workflow, if available.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.StartVerificationAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.StartVerification.StartVerificationRequest})">
            <summary>
                Requests a verification to be sent to a user.
            </summary>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.IVerifyV2Client.VerifyCodeAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.VerifyCode.VerifyCodeRequest})">
            <summary>
                Allows a code to be checked against an existing Verification request.
            </summary>
            <param name="request">The request.</param>
            <returns>Success or Failure.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest.RequestId">
            <summary>
                ID of the verify request.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest.Parse(System.Guid)">
            <summary>
                Parses the input into a NextWorkflowRequest.
            </summary>
            <param name="requestId">The verify request identifier.</param>
            <returns>A success state with the request if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow">
            <summary>
                Represents a verification workflow for Email.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.From">
            <summary>
                The email address to send the verification request from.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.To">
            <summary>
                The email address to send the verification request to.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a EmailWorkflow.
            </summary>
            <param name="to">The email address to send the verification request to.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Parse(System.String,System.String)">
            <summary>
                Parses the input into a EmailWorkflow.
            </summary>
            <param name="to">The email address to send the verification request to.</param>
            <param name="from">The email address to send the verification request from.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Email.EmailWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IVerificationWorkflow">
            <summary>
                Represents a verification workflow.
            </summary>
            <remarks>
                This is a marker interface.
            </remarks>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.IVerificationWorkflow.Channel">
            <summary>
                The verification channel.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IVerificationWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <summary>
                Serializes the workflow.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>The serialized workflow.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Locale">
            <summary>
                Represents a language for verification requests.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.DeDe">
            <summary>
                The de-de locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EnGb">
            <summary>
                The en-gb locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EnUs">
            <summary>
                The en-us locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsEs">
            <summary>
                The es-es locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsMx">
            <summary>
                The es-mx locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.EsUs">
            <summary>
                The es-us locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.FrFr">
            <summary>
                The fr-fr locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.HiIn">
            <summary>
                The hi-in locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.IdId">
            <summary>
                The id-id locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.ItIt">
            <summary>
                The it-it locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.JaJp">
            <summary>
                The ja-jp locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.Language">
            <summary>
                The language.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.PtBr">
            <summary>
                The pt-br locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.PtPt">
            <summary>
                The pt-pt locale.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Locale.RuRu">
            <summary>
                The ru-ru locale.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Locale.op_Implicit(System.String)~Vonage.VerifyV2.StartVerification.Locale">
            <summary>
                Implicit conversion from string to Locale.
            </summary>
            <param name="value">The locale value.</param>
            <returns>The locale.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Locale.op_Implicit(Vonage.VerifyV2.StartVerification.Locale)~System.String">
            <summary>
                Implicit conversion from Locale to string.
            </summary>
            <param name="value">The locale.</param>
            <returns>The locale value.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.LocaleJsonConverter">
            <summary>
                Represents a custom converter from Locale description to Json.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.LocaleJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.LocaleJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Vonage.VerifyV2.StartVerification.Locale,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow">
            <summary>
                Represents a verification workflow for SilentAuth.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.RedirectUrl">
            <summary>
            Final redirect added at the end of the check_url request/response lifecycle. See the documentation for integrations. Will contain the request_id and code as a url fragment after the URL.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.To">
            <summary>
                The phone number to use for authentication, in the E.164 format. Don't use a leading + or 00 when entering a phone
                number, start with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a SilentAuthWorkflow.
            </summary>
            <param name="to">The phone number to use for authentication.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Parse(System.String,System.Uri)">
            <summary>
             Parses the input into a SilentAuthWorkflow.
            </summary>
            <param name="to">The phone number to use for authentication.</param>
            <param name="redirectUrl">The final redirect added at the end of the check_url request/response lifecycle</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.SilentAuth.SilentAuthWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow">
            <summary>
                Represents a verification workflow for SMS.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Hash">
            <summary>
                Optional Android Application Hash Key for automatic code detection on a user's device.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.EntityId">
            <summary>
                Optional PEID required for SMS delivery using Indian Carriers
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.ContentId">
            <summary>
                Optional value corresponding to a TemplateID for SMS delivery using Indian Carriers
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.From">
            <summary>
                An optional sender number, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000. If no from number is given, the request will default to the
                brand.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Parse(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Parses the input into a SmsWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <param name="hash">The Android application hash key.</param>
            <param name="entityId">Optional PEID required for SMS delivery using Indian Carriers</param>
            <param name="contentId">Optional value corresponding to a TemplateID for SMS delivery using Indian Carriers</param>
            <param name="from">An optional sender number, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. If no from number is given, the request will default to the brand.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Sms.SmsWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.StartVerificationRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Brand">
            <summary>
                Gets the brand that is sending the verification request.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.ChannelTimeout">
            <summary>
                Gets the wait time in seconds between attempts to delivery the verification code.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.ClientReference">
            <summary>
                Gets the client reference.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Code">
            <summary>
                An optional alphanumeric custom code to use, if you don't want Vonage to generate the code.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.CodeLength">
            <summary>
                Gets the length of the code to send to the user
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.FraudCheck">
            <summary>
                Indicates the request will bypass network block, if necessary.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Locale">
            <summary>
                Gets the request language.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Workflows">
            <summary>
                Gets verification workflows.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.Build">
            <summary>
                Initializes a builder for StartVerificationRequest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithBrand(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.SkipFraudCheck">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithChannelTimeout(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithClientReference(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithCode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithCodeLength(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithFallbackWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationRequestBuilder.WithLocale(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForLocale">
            <summary>
                Represents a builder for Locale.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForLocale.WithLocale(System.String)">
            <summary>
                Sets the Locale.
            </summary>
            <param name="value">The Locale.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForChannelTimeout">
            <summary>
                Represents a builder for ChannelTimeout.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForChannelTimeout.WithChannelTimeout(System.Int32)">
            <summary>
                Sets the ChannelTimeout.
            </summary>
            <param name="value">The ChannelTimeout.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForClientReference">
            <summary>
                Represents a builder for ClientReference.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalOptionalBuilderForClientReference.WithClientReference(System.String)">
            <summary>
                Sets the ClientReference.
            </summary>
            <param name="value">The ClientReference.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCodeLength">
            <summary>
                Represents a builder for CodeLength.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCodeLength.WithCodeLength(System.Int32)">
            <summary>
                Sets the CodeLength.
            </summary>
            <param name="value">The CodeLength.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCode">
            <summary>
                Represents a builder for Code.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForCode.WithCode(System.String)">
            <summary>
                Sets a custom code, if you don't want Vonage to generate the code.
            </summary>
            <param name="value">The custom code.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForFallbackWorkflow">
            <summary>
                Represents a builder for fallback workflow.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForFallbackWorkflow.WithFallbackWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sets a fallback workflow.
            </summary>
            <param name="value">The fallback workflow.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilderForSkipFraudCheck">
            <summary>
                Represents a builder for SkipFraudCheck.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IOptionalBuilderForSkipFraudCheck.SkipFraudCheck">
            <summary>
                Sets a fallback workflow.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IBuilderForBrand">
            <summary>
                Represents a builder for Brand.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IBuilderForBrand.WithBrand(System.String)">
            <summary>
                Sets the Brand.
            </summary>
            <param name="value">The Brand.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IBuilderForWorkflow">
            <summary>
                Represents a builder for Workflow.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.IBuilderForWorkflow.WithWorkflow``1(Vonage.Common.Monads.Result{``0})">
            <summary>
                Sets the Workflow.
            </summary>
            <param name="value">The Workflow.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.IOptionalBuilder">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.StartVerificationResponse">
            <summary>
                Represents a response of a StartVerification request.
            </summary>
            <param name="RequestId">The Id of the request.</param>
            <param name="CheckUrl">URL for Silent Auth Verify workflow completion (only shows if using Silent Auth).</param>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationResponse.#ctor(System.Guid,Vonage.Common.Monads.Maybe{System.Uri})">
            <summary>
                Represents a response of a StartVerification request.
            </summary>
            <param name="RequestId">The Id of the request.</param>
            <param name="CheckUrl">URL for Silent Auth Verify workflow completion (only shows if using Silent Auth).</param>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationResponse.RequestId">
            <summary>The Id of the request.</summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.StartVerificationResponse.CheckUrl">
            <summary>URL for Silent Auth Verify workflow completion (only shows if using Silent Auth).</summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.StartVerificationResponse.BuildVerificationRequest(System.String)">
            <summary>
                Builds a VerifyCodeRequest based on the current request.
            </summary>
            <param name="verificationCode">The verification code.</param>
            <returns>A request to verify the code for the current process.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow">
            <summary>
                Represents a verification workflow for Voice.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a VoiceWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.Voice.VoiceWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow">
            <summary>
                Represents a verification workflow for WhatsApp.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.From">
            <summary>
                An optional sender number, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Parse(System.String,System.String)">
            <summary>
                Parses the input into a WhatsAppWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <param name="from">The sender number.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsApp.WhatsAppWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow">
            <summary>
                Represents a verification workflow for WhatsApp Interactive.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Channel">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.To">
            <summary>
                The phone number to contact, in the E.164 format. Don't use a leading + or 00 when entering a phone number, start
                with the country code, for example, 447700900000.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Parse(System.String)">
            <summary>
                Parses the input into a WhatsAppInteractiveWorkflow.
            </summary>
            <param name="to">The phone number to contact.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.StartVerification.WhatsAppInteractive.WhatsAppInteractiveWorkflow.Serialize(Vonage.Common.IJsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest">
            <inheritdoc />
        </member>
        <member name="P:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.Code">
            <summary>
                The code the user supplied.
            </summary>
        </member>
        <member name="P:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.RequestId">
            <summary>
                ID of the verify request.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.WithCode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.VerifyCodeRequestBuilder.WithRequestId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.IBuilderForRequestId">
            <summary>
                Represents a builder to set the RequestId.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.IBuilderForRequestId.WithRequestId(System.Guid)">
            <summary>
                Sets the RequestId.
            </summary>
            <param name="value">The RequestId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.VerifyV2.VerifyCode.IBuilderForCode">
            <summary>
                Represents a builder to set the Code.
            </summary>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyCode.IBuilderForCode.WithCode(System.String)">
            <summary>
                Sets the code.
            </summary>
            <param name="value">The code.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.CancelAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.Cancel.CancelRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.NextWorkflowAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.NextWorkflow.NextWorkflowRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.StartVerificationAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.StartVerification.StartVerificationRequest})">
            <inheritdoc />
        </member>
        <member name="M:Vonage.VerifyV2.VerifyV2Client.VerifyCodeAsync(Vonage.Common.Monads.Result{Vonage.VerifyV2.VerifyCode.VerifyCodeRequest})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.AddStream.AddStreamRequest">
            <summary>
                Represents a request to add a stream to an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.AddStream.AddStreamRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.AddStream.AddStreamRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.AddStream.AddStreamRequest.HasAudio">
            <summary>
                Whether the composed archive should include the stream's audio (true, the default) or not (false).
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.AddStream.AddStreamRequest.HasVideo">
            <summary>
                Whether the composed archive should include the stream's video (true, the default) or not (false).
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.AddStream.AddStreamRequest.StreamId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.DisableAudio">
            <summary>
                Disables the audio on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.DisableVideo">
            <summary>
                Disables the video on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.WithArchiveId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.AddStreamRequestBuilder.WithStreamId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.AddStream.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.AddStream.IBuilderForArchiveId">
            <summary>
                Represents a builder for ArchiveId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.IBuilderForArchiveId.WithArchiveId(System.Guid)">
            <summary>
                Sets the ArchiveId.
            </summary>
            <param name="value">The ArchiveId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.AddStream.IBuilderForStreamId">
            <summary>
                Represents a builder for StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.IBuilderForStreamId.WithStreamId(System.Guid)">
            <summary>
                Sets the StreamId.
            </summary>
            <param name="value">The StreamId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.AddStream.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.IBuilderForOptional.DisableAudio">
            <summary>
                Disables the audio on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.AddStream.IBuilderForOptional.DisableVideo">
            <summary>
                Disables the video on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.Archive">
            <summary>
                Represents an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.ApplicationId">
            <summary>
                Your Vonage application ID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.CreatedAt">
            <summary>
                The timestamp for when the archive started recording, expressed in milliseconds since the Unix epoch (January 1,
                1970, 00:00:00 UTC).
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Duration">
            <summary>
                The duration of the archive in seconds. For archives that have are being recorded (with the status property set to
                "started"), this value is set to 0.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.HasAudio">
            <summary>
                Whether the archive will record audio (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.HasVideo">
            <summary>
                Whether the archive will record video (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Id">
            <summary>
                The unique archive ID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Name">
            <summary>
                The name of the archive (for your own identification).
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Reason">
            <summary>
                For archives with the status "stopped", this can be set to "maximum duration exceeded", "maximum idle time
                exceeded", "session ended", "user initiated". For archives with the status "failed", this can be set to "failure".
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Resolution">
            <summary>
                The resolution of the archive, either "640x480" (SD landscape, the default), "1280x720" (HD landscape), "1920x1080"
                (FHD landscape), "480x640" (SD portrait), "720x1280" (HD portrait), or "1080x1920" (FHD portrait). You may want to
                use a portrait aspect ratio for archives that include video streams from mobile devices (which often use the
                portrait aspect ratio). This property only applies to composed archives. If you set this property and set the
                outputMode property to "individual", the call to the REST method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.SessionId">
            <summary>
                The session ID of the Vonage Video session you are working with.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Size">
            <summary>
                The size of the archive file. For archives that have not been generated, this value is set to 0.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Status">
            <summary>
                The status of the archive:
                "available" — The archive is available for download from the Vonage Video cloud.
                "expired" — The archive is no longer available for download from the Vonage Video cloud.
                "failed" — The archive recording failed.
                "paused" — When an archive is paused, nothing is recorded. The archive is paused if any of the following conditions
                occur:
                No clients are publishing streams to the session. In this case, there is a timeout of 60 minutes, after which the
                archive stops and the archive status changes to "stopped".
                All clients disconnect the session. After 60 seconds the archive stops and the archive status changes to "stopped".
                If a client resumes publishing while the archive is in the "paused" state, the archive recording resumes and the
                status changes back to "started".
                "started" — The archive started and is in the process of being recorded.
                "stopped" — The archive stopped recording.
                "uploaded" — The archive is available for download from the S3 bucket you specified in your Video API account.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.StreamMode">
            <summary>
                Whether streams included in the archive are selected automatically ("auto", the default) or manually ("manual").
                When streams are selected automatically ("auto"), all streams in the session can be included in the archive. When
                streams are selected manually ("manual"), you specify streams to be included based on calls to this REST method.
                You can specify whether a stream's audio, video, or both are included in the archive. In composed archives, in both
                automatic and manual modes, the archive composer includes streams based on stream prioritization rules.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Streams">
            <summary>
                The collection of streams.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Url">
            <summary>
                The download URL of the available archive file. This is only set for an archive with the status set to "available";
                for other archives, (including archives with the status "uploaded") this property is set to null. The download URL
                is obfuscated, and the file is only available from the URL for 10 minutes.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.MultiArchiveTag">
            <summary>
                Set this to support recording multiple archives for the same session simultaneously. Set this to a unique string
                for each simultaneous archive of an ongoing session. You must also set this option when manually starting an
                archive in a session that is automatically archived. If you do not specify a unique multiArchiveTag, you can only
                record one archive at a time for a given session.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.Archive.#ctor(System.Int64,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,Vonage.Server.RenderResolution,System.String,System.Int32,System.String,System.String,System.String,Vonage.Video.Archives.Archive.Stream[],System.String)">
            <summary>
                Creates an archive.
            </summary>
            <param name="createdAt">
                The timestamp for when the archive started recording, expressed in milliseconds since the Unix
                epoch (January 1, 1970, 00:00:00 UTC).
            </param>
            <param name="duration">
                The duration of the archive in seconds. For archives that have are being recorded (with the
                status property set to "started"), this value is set to 0.
            </param>
            <param name="hasAudio">
                Whether the archive will record audio (true, the default) or not (false). If you set both
                hasAudio and hasVideo to false, the call to this method results in an error.
            </param>
            <param name="hasVideo">
                Whether the archive will record video (true, the default) or not (false). If you set both
                hasAudio and hasVideo to false, the call to this method results in an error.
            </param>
            <param name="id">The unique archive ID.</param>
            <param name="name">The name of the archive (for your own identification)</param>
            <param name="applicationId">Your Vonage application ID</param>
            <param name="reason">
                For archives with the status "stopped", this can be set to "maximum duration exceeded", "maximum
                idle time exceeded", "session ended", "user initiated". For archives with the status "failed", this can be set to
                "failure".
            </param>
            <param name="resolution">
                The resolution of the archive, either "640x480" (SD landscape, the default), "1280x720" (HD
                landscape), "1920x1080" (FHD landscape), "480x640" (SD portrait), "720x1280" (HD portrait), or "1080x1920" (FHD
                portrait). You may want to use a portrait aspect ratio for archives that include video streams from mobile devices
                (which often use the portrait aspect ratio). This property only applies to composed archives. If you set this
                property and set the outputMode property to "individual", the call to the REST method results in an error.
            </param>
            <param name="sessionId">The session ID of the Vonage Video session you are working with</param>
            <param name="size">The size of the archive file. For archives that have not been generated, this value is set to 0.</param>
            <param name="status">The status of the archive.</param>
            <param name="streamMode">
                Whether streams included in the archive are selected automatically ("auto", the default) or
                manually ("manual"). When streams are selected automatically ("auto"), all streams in the session can be included
                in the archive. When streams are selected manually ("manual"), you specify streams to be included based on calls to
                this REST method. You can specify whether a stream's audio, video, or both are included in the archive. In composed
                archives, in both automatic and manual modes, the archive composer includes streams based on stream prioritization
                rules.
            </param>
            <param name="url">
                The download URL of the available archive file. This is only set for an archive with the status set
                to "available"; for other archives, (including archives with the status "uploaded") this property is set to null.
                The download URL is obfuscated, and the file is only available from the URL for 10 minutes.
            </param>
            <param name="streams">The collection of streams.</param>
            <param name="multiArchiveTag">Set this to support recording multiple archives for the same session simultaneously. Set this to a unique string for each simultaneous archive of an ongoing session. You must also set this option when manually starting an archive in a session that is automatically archived. If you do not specify a unique multiArchiveTag, you can only record one archive at a time for a given session.</param>
        </member>
        <member name="T:Vonage.Video.Archives.Archive.Stream">
            <summary>
                Represents a stream.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Stream.HasAudio">
            <summary>
                Whether the archive will record audio (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Stream.HasVideo">
            <summary>
                Whether the archive will record video (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.Archive.Stream.StreamId">
            <summary>
                The stream ID of the stream included in the archive.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.Archive.Stream.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
                Creates a stream.
            </summary>
            <param name="streamId">The stream ID of the stream included in the archive.</param>
            <param name="hasAudio">
                Whether the archive will record audio (true, the default) or not (false). If you set both
                hasAudio and hasVideo to false, the call to this method results in an error.
            </param>
            <param name="hasVideo">
                Whether the archive will record video (true, the default) or not (false). If you set both
                hasAudio and hasVideo to false, the call to this method results in an error.
            </param>
        </member>
        <member name="T:Vonage.Video.Archives.ArchiveClient">
            <summary>
                Represents a client exposing archiving features.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.AddStreamAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.AddStream.AddStreamRequest})">
            <summary>
                Adds the stream included in a composed archive that was started with the streamMode set to "manual".
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.ChangeLayoutAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest})">
            <summary>
                Changes the layout type of a composed archive while it is being recorded.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.CreateArchiveAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.CreateArchive.CreateArchiveRequest})">
            <summary>
                Creates a new archive.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the archive if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.DeleteArchiveAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest})">
            <summary>
                Deletes the specified archive.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.GetArchiveAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.GetArchive.GetArchiveRequest})">
            <summary>
                Return the archive information of a specific archive.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the archive if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.GetArchivesAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.GetArchives.GetArchivesRequest})">
            <summary>
                Retrieves all archives from an application.
            </summary>
            <param name="request">The request.</param>
            <returns>A success state with archives if the operation succeeded. A failure state with the error message if it failed.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.RemoveStreamAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.RemoveStream.RemoveStreamRequest})">
            <summary>
                Removes the stream included in a composed archive that was started with the streamMode set to "manual".
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Archives.ArchiveClient.StopArchiveAsync(Vonage.Common.Monads.Result{Vonage.Video.Archives.StopArchive.StopArchiveRequest})">
            <summary>
                Stops an archive.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the archive if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="T:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest">
            <summary>
                Represents a request to change the layout of an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.Layout">
            <summary>
                The layout to apply of the archive.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequestBuilder.WithArchiveId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.ChangeLayoutRequestBuilder.WithLayout(Vonage.Server.Layout)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.ChangeLayout.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.ChangeLayout.IBuilderForArchiveId">
            <summary>
                Represents a builder for ArchiveId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.IBuilderForArchiveId.WithArchiveId(System.Guid)">
            <summary>
                Sets the ArchiveId.
            </summary>
            <param name="value">The ArchiveId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.ChangeLayout.IBuilderForLayout">
            <summary>
                Represents a builder for Layout.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.ChangeLayout.IBuilderForLayout.WithLayout(Vonage.Server.Layout)">
            <summary>
                Sets the Layout.
            </summary>
            <param name="value">The Layout.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest">
            <summary>
                Represents a request to creating an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.HasAudio">
            <summary>
                Whether the archive will record audio (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.HasVideo">
            <summary>
                Whether the archive will record video (true, the default) or not (false). If you set both hasAudio and hasVideo to
                false, the call to this method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.Layout">
            <summary>
                Represents the archive's layout.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.Name">
            <summary>
                The name of the archive (for your own identification).
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.OutputMode">
            <summary>
                Whether all streams in the archive are recorded to a single file ("composed", the default) or to individual files
                ("individual").
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.Resolution">
            <summary>
                The resolution of the archive, either "640x480" (SD landscape, the default), "1280x720" (HD landscape), "1920x1080"
                (FHD landscape), "480x640" (SD portrait), "720x1280" (HD portrait), or "1080x1920" (FHD portrait). You may want to
                use a portrait aspect ratio for archives that include video streams from mobile devices (which often use the
                portrait aspect ratio). This property only applies to composed archives. If you set this property and set the
                outputMode property to "individual", the call to the REST method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.StreamMode">
            <summary>
                Whether streams included in the archive are selected automatically ("auto", the default) or manually ("manual").
                When streams are selected automatically ("auto"), all streams in the session can be included in the archive. When
                streams are selected manually ("manual"), you specify streams to be included based on calls to this REST method.
                You can specify whether a stream's audio, video, or both are included in the archive. In composed archives, in both
                automatic and manual modes, the archive composer includes streams based on stream prioritization rules.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.MultiArchiveTag">
            <summary>
                Set this to support recording multiple archives for the same session simultaneously. Set this to a unique string
                for each simultaneous archive of an ongoing session. You must also set this option when manually starting an
                archive in a session that is automatically archived. If you do not specify a unique multiArchiveTag, you can only
                record one archive at a time for a given session.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.DisableAudio">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.DisableVideo">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithArchiveLayout(Vonage.Server.Layout)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithOutputMode(Vonage.Server.OutputMode)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithRenderResolution(Vonage.Server.RenderResolution)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithStreamMode(Vonage.Server.StreamMode)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithMultiArchiveTag(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.CreateArchiveRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.CreateArchive.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.CreateArchive.IBuilderForSessionId">
            <summary>
                Represents a builder for SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId.
            </summary>
            <param name="value">The SessionId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.CreateArchive.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.DisableAudio">
            <summary>
                Disables the audio on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.DisableVideo">
            <summary>
                Disables the video on the request.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithArchiveLayout(Vonage.Server.Layout)">
            <summary>
                Sets the archive's layout.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithName(System.String)">
            <summary>
                Sets the name of the archive.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithOutputMode(Vonage.Server.OutputMode)">
            <summary>
                Sets the output mode.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithRenderResolution(Vonage.Server.RenderResolution)">
            <summary>
                Sets the resolution.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithStreamMode(Vonage.Server.StreamMode)">
            <summary>
                Sets the stream mode.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.CreateArchive.IBuilderForOptional.WithMultiArchiveTag(System.String)">
            <summary>
                Sets the multi-archive tag.
            </summary>
            <param name="value">The tag/</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest">
            <summary>
                Represents a request to delete an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.DeleteArchive.DeleteArchiveRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.GetArchive.GetArchiveRequest">
            <summary>
                Represents a request to retrieve an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchive.GetArchiveRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.GetArchive.GetArchiveRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchive.GetArchiveRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchive.GetArchiveRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchive.GetArchiveRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.GetArchives.GetArchivesRequest">
            <summary>
                Represents a request to retrieve archives.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesRequest.Count">
            <summary>
                The count query parameter to limit the number of archives to be returned. The default number of archives returned
                is 50 (or fewer, if there are fewer than 50 archives). The maximum number of archives the call will return is 1000.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesRequest.Offset">
            <summary>
                The offset query parameters to specify the index offset of the first archive. 0 is offset of the most recently
                started archive (excluding deleted archive). 1 is the offset of the archive that started prior to the most recent
                archive. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesRequest.SessionId">
            <summary>
                The sessionId query parameter to list archives for a specific session ID. (This is useful when listing multiple
                archives for an automatically archived session.)
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequestBuilder.WithCount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequestBuilder.WithOffset(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.GetArchives.IBuilderForApplicationId">
            <summary>
                Represents a builder for ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId.
            </summary>
            <param name="value">The ApplicationId.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.GetArchives.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.IBuilderForOptional.WithCount(System.Int32)">
            <summary>
                Sets a count query parameter to limit the number of archives to be returned. The default number of archives
                returned
                is 50 (or fewer, if there are fewer than 50 archives). The maximum number of archives the call will return is 1000.
            </summary>
            <param name="value">The count.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.IBuilderForOptional.WithOffset(System.Int32)">
            <summary>
                Sets an offset query parameters to specify the index offset of the first archive. 0 is offset of the most recently
                started archive (excluding deleted archive). 1 is the offset of the archive that started prior to the most recent
                archive. The default value is 0.
            </summary>
            <param name="value">The offset.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.IBuilderForOptional.WithSessionId(System.String)">
            <summary>
                Sets a sessionId query parameter to list archives for a specific session ID. (This is useful when listing multiple
                archives for an automatically archived session.)
            </summary>
            <param name="value"></param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Archives.GetArchives.GetArchivesResponse">
            <summary>
                Represents the response for retrieving archives.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesResponse.Count">
            <summary>
                The total number of archives for the API key.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.GetArchives.GetArchivesResponse.Items">
            <summary>
                An array of objects defining each archive retrieved. Archives are listed from the newest to the oldest in the
                return set.
            </summary>
            r
        </member>
        <member name="M:Vonage.Video.Archives.GetArchives.GetArchivesResponse.#ctor(System.Int32,Vonage.Video.Archives.Archive[])">
            <summary>
                Creates a response.
            </summary>
            <param name="count">The number of elements.</param>
            <param name="items">The streams.</param>
        </member>
        <member name="T:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest">
            <summary>
                Represents a request to remove a stream from an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.StreamId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.RemoveStream.RemoveStreamRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Archives.StopArchive.StopArchiveRequest">
            <summary>
                Represents a request to stop an archive.
            </summary>
        </member>
        <member name="P:Vonage.Video.Archives.StopArchive.StopArchiveRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Archives.StopArchive.StopArchiveRequest.ArchiveId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.StopArchive.StopArchiveRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Archives.StopArchive.StopArchiveRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Archives.StopArchive.StopArchiveRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Authentication.IVideoTokenGenerator">
            <summary>
                Represents a specific token generator for the Video Client.
            </summary>
        </member>
        <member name="M:Vonage.Video.Authentication.IVideoTokenGenerator.GenerateToken(Vonage.Request.Credentials,Vonage.Common.Monads.Result{Vonage.Video.Authentication.TokenAdditionalClaims})">
            <summary>
                Generates a token.
            </summary>
            <param name="credentials">The application credentials.</param>
            <param name="claims">Additional claims for the token.</param>
            <returns>A success state with the token if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="T:Vonage.Video.Authentication.Role">
            <summary>
                Defines values for the role parameter of the GenerateToken method of the OpenTok class.
            </summary>
        </member>
        <member name="F:Vonage.Video.Authentication.Role.Publisher">
            <summary>
                A publisher can publish streams, subscribe to streams, and signal. (This is the default
                value if you do not set a role when calling GenerateToken method of the OpenTok class.
            </summary>
        </member>
        <member name="F:Vonage.Video.Authentication.Role.Subscriber">
            <summary>
                A subscriber can only subscribe to streams.
            </summary>
        </member>
        <member name="F:Vonage.Video.Authentication.Role.Moderator">
            <summary>
                In addition to the privileges granted to a publisher, a moderator can perform moderation
                functions, such as forcing clients to disconnect, to stop publishing streams, or to
                mute audio in published streams. See the
                <a href="https://tokbox.com/developer/guides/moderation/">Moderation developer guide</a>.
            </summary>
        </member>
        <member name="F:Vonage.Video.Authentication.Role.PublisherOnly">
            <summary>
                A publisher-only role can publish streams, but not signal.
            </summary>
        </member>
        <member name="T:Vonage.Video.Authentication.TokenAdditionalClaims">
            <summary>
                Represents additional claims for the Video Client's token.
            </summary>
        </member>
        <member name="F:Vonage.Video.Authentication.TokenAdditionalClaims.DefaultScope">
            <summary>
                Represents the default scope (session.connect).
            </summary>
        </member>
        <member name="P:Vonage.Video.Authentication.TokenAdditionalClaims.Role">
            <summary>
                This defines the role the user will have. There are three roles: subscriber, publisher, and moderator. Subscribers
                can only subscribe to streams in the session (they cannot publish). Publishers can subscribe and publish streams to
                the session, and they can use the signaling API. Moderators have the privileges of publishers and, in addition,
                they can also force other users to disconnect from the session or to cease publishing. The default role (if no
                value is passed) is publisher.
            </summary>
        </member>
        <member name="P:Vonage.Video.Authentication.TokenAdditionalClaims.Scope">
            <summary>
                The session's scope.
            </summary>
        </member>
        <member name="P:Vonage.Video.Authentication.TokenAdditionalClaims.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Authentication.TokenAdditionalClaims.Claims">
            <summary>
                The custom claims.
            </summary>
        </member>
        <member name="M:Vonage.Video.Authentication.TokenAdditionalClaims.Parse(System.String,System.String,Vonage.Video.Authentication.Role,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Creates claims.
            </summary>
            <param name="sessionId"> The session ID corresponding to the session to which the user will connect.</param>
            <param name="scope">The session's scope.</param>
            <param name="role">
                This defines the role the user will have. There are three roles: subscriber, publisher, and
                moderator. Subscribers can only subscribe to streams in the session (they cannot publish). Publishers can subscribe
                and publish streams to the session, and they can use the signaling API. Moderators have the privileges of
                publishers and, in addition, they can also force other users to disconnect from the session or to cease publishing.
                The default role (if no value is passed) is publisher.
            </param>
            <param name="claims">The custom claims.</param>
            <returns>A success state with claims if the parsing succeeded. A failure state with an error if it failed.</returns>
        </member>
        <member name="M:Vonage.Video.Authentication.TokenAdditionalClaims.ToDataDictionary">
            <summary>
                Converts claims to a dictionary.
            </summary>
            <returns>The claims dictionary.</returns>
        </member>
        <member name="T:Vonage.Video.Authentication.VideoToken">
            <summary>
                Represents a token for the Video Client.
            </summary>
        </member>
        <member name="P:Vonage.Video.Authentication.VideoToken.SessionId">
            <summary>
                The session Id.
            </summary>
        </member>
        <member name="P:Vonage.Video.Authentication.VideoToken.Token">
            <summary>
                The token.
            </summary>
        </member>
        <member name="M:Vonage.Video.Authentication.VideoToken.#ctor(System.String,System.String)">
            <summary>
                Creates a token.
            </summary>
            <param name="sessionId"> The session Id.</param>
            <param name="token"> The token.</param>
        </member>
        <member name="T:Vonage.Video.Authentication.VideoTokenGenerator">
            <inheritdoc cref="T:Vonage.Video.Authentication.IVideoTokenGenerator" />
        </member>
        <member name="M:Vonage.Video.Authentication.VideoTokenGenerator.GenerateToken(Vonage.Request.Credentials,Vonage.Common.Monads.Result{Vonage.Video.Authentication.TokenAdditionalClaims})">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest">
            <summary>
                Represents a request to add a stream to a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.BroadcastId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.HasAudio">
            <summary>
                Whether to include the stream's audio.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.HasVideo">
            <summary>
                Whether to include the stream's video.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.StreamId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.WithBroadcastId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.WithDisabledAudio">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.WithDisabledVideo">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequestBuilder.WithStreamId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForBroadcastId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForBroadcastId.WithBroadcastId(System.Guid)">
            <summary>
                Sets the BroadcastId on the builder.
            </summary>
            <param name="value">The broadcast id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForStreamId">
            <summary>
                Represents a builder that allows to set the StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForStreamId.WithStreamId(System.Guid)">
            <summary>
                Sets the StreamId on the builder.
            </summary>
            <param name="value">The stream id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForOptional">
            <summary>
                Represents a builder that allows to set optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForOptional.WithDisabledAudio">
            <summary>
                Disables audio on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.AddStreamToBroadcast.IBuilderForOptional.WithDisabledVideo">
            <summary>
                Disables video on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast">
            <summary>
                Represents a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.ApplicationId">
            <summary>
                The Vonage Application UUID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.BroadcastUrls">
            <summary>
                An object containing details about the HLS and RTMP broadcasts.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.CreatedAt">
            <summary>
                The time the broadcast started, expressed in milliseconds since the Unix epoch (January 1, 1970, 00:00:00 UTC).
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.HasAudio">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.HasVideo">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.Id">
            <summary>
                The unique ID for the broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.MaxBitrate">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.MaxDuration">
            <summary>
                The maximum duration for the broadcast (if one was set), in seconds.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.MultiBroadcastTag">
            <summary>
                The unique tag for simultaneous broadcasts (if one was set).
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.Resolution">
            <summary>
                The resolution of the archive, either "640x480" (SD landscape, the default), "1280x720" (HD landscape), "1920x1080"
                (FHD landscape), "480x640" (SD portrait), "720x1280" (HD portrait),or "1080x1920" (FHD portrait). You may want to
                use a portrait aspect ratio for archives that include video streams from mobile devices (which often use the
                portrait aspect ratio). This property only applies to composed archives. If you set this property and set the
                outputMode property to "individual", the call to the REST method results in an error.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.SessionId">
            <summary>
                The OpenTok session ID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.Settings">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.Status">
            <summary>
                Current status of the broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.StreamMode">
            <summary>
                Whether streams included in the archive are selected automatically ("auto", the default) or manually ("manual").
                When streams are selected automatically ("auto"), all streams in the session can be included in the archive. When
                streams are selected manually ("manual"), you specify streams to be included based on calls to this REST method.
                You can specify whether a stream's audio, video, or both are included in the archive. In composed archives, in both
                automatic and manual modes, the archive composer includes streams based on stream prioritization rules.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.Streams">
            <summary>
                An array of objects corresponding to streams currently being broadcast. This is only set for a broadcast with the
                status set to "started" and the streamMode set to "manual"
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.UpdatedAt">
            <summary>
                For this start method, this timestamp matches the createdAt timestamp.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.BroadcastStatus">
            <summary>
                Represents the status of a broadcast.
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.BroadcastStatus.Started">
            <summary>
                Indicates the broadcast is started.
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.BroadcastStatus.Stopped">
            <summary>
                Indicates the broadcast is stopped.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.BroadcastUrl">
            <summary>
                Represents information regarding HLS and RTMP broadcasts.
            </summary>
            <param name="Hls">
                If you specified an HLS endpoint, the object includes an hls property, which is set to the URL for the HLS
                broadcast. Note this HLS broadcast URL points to an index file, an .M3U8- formatted playlist that contains a list
                of URLs to .ts media segment files (MPEG-2 transport stream files). While the URLs of both the playlist index file
                and media segment files are provided as soon as the HTTP response is returned, these URLs should not be accessed
                until 15 – 20 seconds later, after the initiation of the HLS broadcast, due to the delay between the HLS broadcast
                and the live streams in the OpenTok session. See
                https://developer.apple.com/library/ios/technotes/tn2288/_index.html for more information about the playlist index
                file and media segment files for HLS.
            </param>
            <param name="Rtmp">
                If you specified RTMP stream endpoints, the object includes an rtmp property. This is an array of objects that
                include information on each of the RTMP streams. Each of these objects has the following properties: id (the ID you
                assigned to the RTMP stream),serverUrl (the server URL), streamName (the stream name), and status property (which
                is set to "connecting"). You can call the OpenTok REST method to check for status updates for the broadcast.
            </param>
        </member>
        <member name="M:Vonage.Video.Broadcast.Broadcast.BroadcastUrl.#ctor(System.Uri,Vonage.Video.Broadcast.Broadcast.RtmpStream[])">
            <summary>
                Represents information regarding HLS and RTMP broadcasts.
            </summary>
            <param name="Hls">
                If you specified an HLS endpoint, the object includes an hls property, which is set to the URL for the HLS
                broadcast. Note this HLS broadcast URL points to an index file, an .M3U8- formatted playlist that contains a list
                of URLs to .ts media segment files (MPEG-2 transport stream files). While the URLs of both the playlist index file
                and media segment files are provided as soon as the HTTP response is returned, these URLs should not be accessed
                until 15 – 20 seconds later, after the initiation of the HLS broadcast, due to the delay between the HLS broadcast
                and the live streams in the OpenTok session. See
                https://developer.apple.com/library/ios/technotes/tn2288/_index.html for more information about the playlist index
                file and media segment files for HLS.
            </param>
            <param name="Rtmp">
                If you specified RTMP stream endpoints, the object includes an rtmp property. This is an array of objects that
                include information on each of the RTMP streams. Each of these objects has the following properties: id (the ID you
                assigned to the RTMP stream),serverUrl (the server URL), streamName (the stream name), and status property (which
                is set to "connecting"). You can call the OpenTok REST method to check for status updates for the broadcast.
            </param>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.BroadcastUrl.Hls">
            <summary>
                If you specified an HLS endpoint, the object includes an hls property, which is set to the URL for the HLS
                broadcast. Note this HLS broadcast URL points to an index file, an .M3U8- formatted playlist that contains a list
                of URLs to .ts media segment files (MPEG-2 transport stream files). While the URLs of both the playlist index file
                and media segment files are provided as soon as the HTTP response is returned, these URLs should not be accessed
                until 15 – 20 seconds later, after the initiation of the HLS broadcast, due to the delay between the HLS broadcast
                and the live streams in the OpenTok session. See
                https://developer.apple.com/library/ios/technotes/tn2288/_index.html for more information about the playlist index
                file and media segment files for HLS.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.BroadcastUrl.Rtmp">
            <summary>
                If you specified RTMP stream endpoints, the object includes an rtmp property. This is an array of objects that
                include information on each of the RTMP streams. Each of these objects has the following properties: id (the ID you
                assigned to the RTMP stream),serverUrl (the server URL), streamName (the stream name), and status property (which
                is set to "connecting"). You can call the OpenTok REST method to check for status updates for the broadcast.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.RtmpStream">
            <summary>
                Represents a RtmpStream.
            </summary>
            <param name="Id">The stream Id.</param>
            <param name="StreamName">The stream name.</param>
            <param name="ServerUrl">The server url.</param>
            <param name="Status">The stream status.</param>
        </member>
        <member name="M:Vonage.Video.Broadcast.Broadcast.RtmpStream.#ctor(System.Guid,System.String,System.Uri,Vonage.Video.Broadcast.Broadcast.RtmpStatus)">
            <summary>
                Represents a RtmpStream.
            </summary>
            <param name="Id">The stream Id.</param>
            <param name="StreamName">The stream name.</param>
            <param name="ServerUrl">The server url.</param>
            <param name="Status">The stream status.</param>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.RtmpStream.Id">
            <summary>The stream Id.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.RtmpStream.StreamName">
            <summary>The stream name.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.RtmpStream.ServerUrl">
            <summary>The server url.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.RtmpStream.Status">
            <summary>The stream status.</summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.RtmpStatus">
            <summary>
                The status of the RTMP stream. Poll frequently to check status updates.
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.RtmpStatus.Connecting">
            <summary>
                Indicates the platform is in the process of connecting to the remote RTMP server. This is the initial state, and it
                is the status if you start when there are no streams published in the session. It changes to "live" when there are
                streams (or it changes to one of the other states).
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.RtmpStatus.Live">
            <summary>
                Indicates platform has successfully connected to the remote RTMP server, and the media is streaming.
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.RtmpStatus.Offline">
            <summary>
                Indicates platform could not connect to the remote RTMP server. This is due to an unreachable server or an error in
                the RTMP handshake. Causes include rejected RTMP connections, non-existing RTMP applications, rejected stream
                names, authentication errors, etc. Check that the server is online, and that you have provided the correct server
                URL and stream name.
            </summary>
        </member>
        <member name="F:Vonage.Video.Broadcast.Broadcast.RtmpStatus.Error">
            <summary>
                Indicates there is an error in the platform.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.BroadcastSettings">
            <summary>
            </summary>
            <param name="Hls"></param>
        </member>
        <member name="M:Vonage.Video.Broadcast.Broadcast.BroadcastSettings.#ctor(Vonage.Video.Broadcast.Broadcast.HlsSettings)">
            <summary>
            </summary>
            <param name="Hls"></param>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.BroadcastSettings.Hls">
            <summary></summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.HlsSettings">
            <summary>
            </summary>
            <param name="Dvr"></param>
            <param name="LowLatency"></param>
        </member>
        <member name="M:Vonage.Video.Broadcast.Broadcast.HlsSettings.#ctor(System.Boolean,System.Boolean)">
            <summary>
            </summary>
            <param name="Dvr"></param>
            <param name="LowLatency"></param>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.HlsSettings.Dvr">
            <summary></summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.HlsSettings.LowLatency">
            <summary></summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.Broadcast.LiveStream">
            <summary>
                Represents a stream currently being broadcast.
            </summary>
            <param name="StreamId"> The stream ID of the stream included in the broadcast.</param>
            <param name="HasAudio">  Whether the stream's audio is included in the broadcast.</param>
            <param name="HasVideo">  Whether the stream's video is included in the broadcast.</param>
        </member>
        <member name="M:Vonage.Video.Broadcast.Broadcast.LiveStream.#ctor(System.Guid,System.Boolean,System.Boolean)">
            <summary>
                Represents a stream currently being broadcast.
            </summary>
            <param name="StreamId"> The stream ID of the stream included in the broadcast.</param>
            <param name="HasAudio">  Whether the stream's audio is included in the broadcast.</param>
            <param name="HasVideo">  Whether the stream's video is included in the broadcast.</param>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.LiveStream.StreamId">
            <summary> The stream ID of the stream included in the broadcast.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.LiveStream.HasAudio">
            <summary>  Whether the stream's audio is included in the broadcast.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.Broadcast.LiveStream.HasVideo">
            <summary>  Whether the stream's video is included in the broadcast.</summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.BroadcastClient">
            <summary>
                Represents a client exposing live broadcast features.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.AddStreamToBroadcastAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.AddStreamToBroadcast.AddStreamToBroadcastRequest})">
            <summary>
                Adds a stream to a live streaming broadcast.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.ChangeBroadcastLayoutAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest})">
            <summary>
                Dynamically changes the layout type of a live streaming broadcast.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state if the operation succeeded. A failure state with the error message if it failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.GetBroadcastAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest})">
            <summary>
                Retrieves a live streaming broadcast.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the broadcast if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.GetBroadcastsAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest})">
            <summary>
                Retrieves all live streaming broadcasts.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with broadcasts if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.RemoveStreamFromBroadcastAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest})">
            <summary>
                Removes a live streaming broadcast.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.StartBroadcastsAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest})">
            <summary>
                Starts a live stream broadcast for an OpenTok session.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the broadcast if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.BroadcastClient.StopBroadcastAsync(Vonage.Common.Monads.Result{Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest})">
            <summary>
                Stops a live stream broadcast.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the broadcast if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest">
            <summary>
                Represents a request to change a broadcast layout.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.BroadcastId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.Layout">
            <summary>
                The new layout to apply on the broadcast.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequestBuilder.WithBroadcastId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.ChangeBroadcastLayoutRequestBuilder.WithLayout(Vonage.Server.Layout)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForBroadcastId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForBroadcastId.WithBroadcastId(System.Guid)">
            <summary>
                Sets the BroadcastId on the builder.
            </summary>
            <param name="value">The broadcast id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForLayout">
            <summary>
                Represents a builder that allows to set the Layout.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.ChangeBroadcastLayout.IBuilderForLayout.WithLayout(Vonage.Server.Layout)">
            <summary>
                Sets the Layout on the builder.
            </summary>
            <param name="value">The layout.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest">
            <summary>
                Represents a request to retrieve a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest.BroadcastId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.GetBroadcastRequestBuilder.WithBroadcastId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcast.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcast.IBuilderForBroadcastId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcast.IBuilderForBroadcastId.WithBroadcastId(System.Guid)">
            <summary>
                Sets the BroadcastId on the builder.
            </summary>
            <param name="value">The broadcast id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest">
            <summary>
                Represents a request to retrieve broadcasts.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.Count">
            <summary>
                The count query parameter to limit the number of archives to be returned. The default number of archives returned
                is 50 (or fewer, if there are fewer than 50 archives). The maximum number of archives the call will return is 1000.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.Offset">
            <summary>
                The offset query parameters to specify the index offset of the first archive. 0 is offset of the most recently
                started archive (excluding deleted archive). 1 is the offset of the archive that started prior to the most recent
                archive. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.SessionId">
            <summary>
                The sessionId query parameter to list archives for a specific session ID. (This is useful when listing multiple
                archives for an automatically archived session.)
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequestBuilder.WithCount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequestBuilder.WithOffset(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForApplicationId">
            <summary>
                Represents a GetBroadcastRequestBuilder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForOptional">
            <summary>
                Represents a builder for optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForOptional.WithCount(System.Int32)">
            <summary>
                Sets a count query parameter to limit the number of archives to be returned. The default number of archives
                returned
                is 50 (or fewer, if there are fewer than 50 archives). The maximum number of archives the call will return is 1000.
            </summary>
            <param name="value">The count.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForOptional.WithOffset(System.Int32)">
            <summary>
                Sets an offset query parameters to specify the index offset of the first archive. 0 is offset of the most recently
                started archive (excluding deleted archive). 1 is the offset of the archive that started prior to the most recent
                archive. The default value is 0.
            </summary>
            <param name="value">The offset.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.GetBroadcasts.IBuilderForOptional.WithSessionId(System.String)">
            <summary>
                Sets a sessionId query parameter to list archives for a specific session ID. (This is useful when listing multiple
                archives for an automatically archived session.)
            </summary>
            <param name="value"></param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsResponse">
            <summary>
                Represents a response from GetBroadcasts.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsResponse.Count">
            <summary>
                The number of broadcasts in the the response.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.GetBroadcasts.GetBroadcastsResponse.Items">
            <summary>
                The list of broadcasts.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest">
            <summary>
                Represents a request to remove a stream from a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.BroadcastId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.StreamId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequestBuilder.WithBroadcastId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.RemoveStreamFromBroadcastRequestBuilder.WithStreamId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForBroadcastId">
            <summary>
                Represents a builder that allows to set the BroadcastId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForBroadcastId.WithBroadcastId(System.Guid)">
            <summary>
                Sets the BroadcastId on the builder.
            </summary>
            <param name="value">The broadcast id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForStreamId">
            <summary>
                Represents a builder that allows to set the StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.RemoveStreamFromBroadcast.IBuilderForStreamId.WithStreamId(System.Guid)">
            <summary>
                Sets the StreamId on the builder.
            </summary>
            <param name="value">The stream id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest">
            <summary>
                Represents a request to start a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.ApplicationId">
            <summary>
                Vonage Application UUID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.Layout">
            <summary>
                Specify this to assign the initial layout type for the broadcast. If you do not specify an initial layout type, the
                broadcast stream uses the Best Fit layout type. For more information, see Configuring Video Layout for the OpenTok
                live streaming feature.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.MaxBitrate">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.MaxDuration">
            <summary>
                The maximum duration for the broadcast, in seconds. The broadcast will automatically stop when the maximum duration
                is reached. You can set the maximum duration to a value from 60 (60 seconds) to 36000 (10 hours). The default
                maximum duration is 4 hours (14,400 seconds)
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.MultiBroadcastTag">
            <summary>
                Set this to support multiple broadcasts for the same session simultaneously. Set this to a unique string for each
                simultaneous broadcast of an ongoing session. See Simultaneous broadcasts.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.Outputs">
            <summary>
                This object defines the types of broadcast streams you want to start (both HLS and RTMP). You can include HLS,
                RTMP, or both as broadcast streams. If you include RTMP streaming, you can specify up to five target RTMP streams
                (or just one). Vonage streams the session to each RTMP URL you specify. Note that OpenTok live streaming supports
                RTMP and RTMPS.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.Resolution">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.StreamMode">
            <summary>
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput">
            <summary>
                Defines the output for starting a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Hls">
            <summary>
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Streams">
            <summary>
                Represents the types of broadcast streams you want to start.
            </summary>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Stream">
            <summary>
                Represents a stream to broadcast.
            </summary>
            <param name="Id">The unique ID for the stream.</param>
            <param name="ServerUrl">The RTMP server url.</param>
            <param name="StreamName">The stream name.</param>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Stream.#ctor(System.Guid,System.String,System.String)">
            <summary>
                Represents a stream to broadcast.
            </summary>
            <param name="Id">The unique ID for the stream.</param>
            <param name="ServerUrl">The RTMP server url.</param>
            <param name="StreamName">The stream name.</param>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Stream.Id">
            <summary>The unique ID for the stream.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Stream.ServerUrl">
            <summary>The RTMP server url.</summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput.Stream.StreamName">
            <summary>The stream name.</summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithLayout(Vonage.Server.Layout)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithManualStreamMode">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithMaxBitrate(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithMaxDuration(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithMultiBroadcastTag(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithOutputs(Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithResolution(Vonage.Server.RenderResolution)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.IBuilderForApplicationId">
            <summary>
                Represents a StartBroadcastRequestBuilder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.IBuilderForSessionId">
            <summary>
                Represents a StartBroadcastRequestBuilder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.IBuilderForLayout">
            <summary>
                Represents a StartBroadcastRequestBuilder that allows to set the Layout.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForLayout.WithLayout(Vonage.Server.Layout)">
            <summary>
                Sets the Layout on the builder.
            </summary>
            <param name="value">The layout.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOutputs">
            <summary>
                Represents a StartBroadcastRequestBuilder that allows to set Outputs.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOutputs.WithOutputs(Vonage.Video.Broadcast.StartBroadcast.StartBroadcastRequest.BroadcastOutput)">
            <summary>
                Sets the Outputs on the builder.
            </summary>
            <param name="value">The outputs.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional">
            <summary>
                Represents a StartBroadcastRequestBuilder that allows to set optional values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional.WithManualStreamMode">
            <summary>
                Sets the StreamMode to Manual on the builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional.WithMaxBitrate(System.Int32)">
            <summary>
                Sets the MaxBitrate on the builder.
            </summary>
            <param name="value">The bitrate.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional.WithMaxDuration(System.Int32)">
            <summary>
                Sets the MaxDuration on the builder.
            </summary>
            <param name="value">The duration.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional.WithMultiBroadcastTag(System.String)">
            <summary>
                Sets the MultiBroadcastTag on the builder.
            </summary>
            <param name="value">The tag.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StartBroadcast.IBuilderForOptional.WithResolution(Vonage.Server.RenderResolution)">
            <summary>
                Sets the Resolution on the builder.
            </summary>
            <param name="value">The resolution.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest">
            <summary>
                Represents a request to stop a broadcast.
            </summary>
        </member>
        <member name="P:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest.BroadcastId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.StopBroadcastRequestBuilder.WithBroadcastId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Broadcast.StopBroadcast.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Broadcast.StopBroadcast.IBuilderForBroadcastId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Broadcast.StopBroadcast.IBuilderForBroadcastId.WithBroadcastId(System.Guid)">
            <summary>
                Sets the BroadcastId on the builder.
            </summary>
            <param name="value">The broadcast id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.IVideoClient">
            <summary>
                Exposes Video clients.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.ArchiveClient">
            <summary>
                Client for archiving.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.BroadcastClient">
            <summary>
                Client for live streaming and broadcasting.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.ModerationClient">
            <summary>
                Client for moderating connections.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.SessionClient">
            <summary>
                Client for managing sessions.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.SignalingClient">
            <summary>
                Client for sending signals to participants.
            </summary>
        </member>
        <member name="P:Vonage.Video.IVideoClient.SipClient">
            <summary>
                Clients for managing SIP calls in a video session.
            </summary>
        </member>
        <member name="T:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest">
            <summary>
                Represents a request to disconnect a connection.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.ConnectionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequestBuilder.WithConnectionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Moderation.DisconnectConnection.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.DisconnectConnection.IBuilderForConnectionId">
            <summary>
                Represents a builder that allows to set the ConnectionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.IBuilderForConnectionId.WithConnectionId(System.String)">
            <summary>
                Sets the ConnectionId on the builder.
            </summary>
            <param name="value">The connection id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.DisconnectConnection.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.DisconnectConnection.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.ModerationClient">
            <summary>
                Represents a client exposing moderation features.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.ModerationClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Moderation.ModerationClient.DisconnectConnectionAsync(Vonage.Common.Monads.Result{Vonage.Video.Moderation.DisconnectConnection.DisconnectConnectionRequest})">
            <summary>
                Forces a client to disconnect from a session
            </summary>
            <param name="request">The request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Moderation.ModerationClient.MuteStreamAsync(Vonage.Common.Monads.Result{Vonage.Video.Moderation.MuteStream.MuteStreamRequest})">
            <summary>
                Mutes a specific publisher stream
            </summary>
            <param name="request">The request.</param>
            <returns>Success with the stream information if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Moderation.ModerationClient.MuteStreamsAsync(Vonage.Common.Monads.Result{Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest})">
            <summary>
                Forces all streams (except for an optional list of streams) in a session to mute published audio. You can also use
                this method to disable the force mute state of a session.
            </summary>
            <param name="request">The request.</param>
            <returns>Success with the stream information if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStream.MuteStreamRequest">
            <summary>
                Represents a request to mute a stream.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.StreamId">
            <summary>
                The stream Id.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamRequestBuilder.WithStreamId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStream.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStream.IBuilderForStreamId">
            <summary>
                Represents a builder that allows to set the StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.IBuilderForStreamId.WithStreamId(System.String)">
            <summary>
                Sets the StreamId on the builder.
            </summary>
            <param name="value">The stream id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStream.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStream.MuteStreamResponse">
            <summary>
                Represents the response when a stream has been muted.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.ApplicationId">
            <summary>
                The Vonage application ID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.CreatedAt">
            <summary>
                The time at which the project was created (a UNIX timestamp, in milliseconds).
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.Environment">
            <summary>
                This is set to "standard" or "enterprise", and it refers to the environment a project is running on. Enterprise
                package partners have access to the enterprise environment.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.Name">
            <summary>
                The name, if you specified one when creating the project; or an empty string if you did not specify a name.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.Status">
            <summary>
                Whether the project is active ("ACTIVE") or suspended ("SUSPENDED").
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStream.MuteStreamResponse.#ctor(System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
                Creates a response.
            </summary>
            <param name="applicationId">  The Vonage application ID.</param>
            <param name="status"> Whether the project is active ("ACTIVE") or suspended ("SUSPENDED").</param>
            <param name="name">
                The name, if you specified one when creating the project; or an empty string if you did not specify
                a name.
            </param>
            <param name="environment">
                This is set to "standard" or "enterprise", and it refers to the environment a project is
                running on. Enterprise package partners have access to the enterprise environment.
            </param>
            <param name="createdAt">   The time at which the project was created (a UNIX timestamp, in milliseconds).</param>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest">
            <summary>
                Represents a request to mute streams.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.Configuration">
            <summary>
                The request content.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration">
            <summary>
                Represents a configuration for muting streams.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration.Active">
            <summary>
                Whether to mute streams in the session (true) and enable the mute state of the session, or to disable the mute
                state of the session (false). With the mute state enabled (true), all current and future streams published to the
                session (with the exception of streams in the excludedStreamIds array) are muted. When you call this method with
                the active property set to false, future streams published to the session are not muted (but any existing muted
                streams remain muted).
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration.ExcludedStreamIds">
            <summary>
                The stream IDs for streams that should not be muted. This is an optional property. If you omit this property, all
                streams in the session will be muted. This property only applies when the active property is set to true. When the
                active property is set to false, it is ignored. The elements in the excludedStreamIds array are stream IDs
                (strings) for the streams you wish to exclude from being muted. If you do not wish to include an array of excluded
                streams, do not include any body content.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration.#ctor(System.Boolean,System.String[])">
            <summary>
                Creates a configuration.
            </summary>
            <param name="active">
                Whether to mute streams in the session (true) and enable the mute state of the session, or to
                disable the mute state of the session (false). With the mute state enabled (true), all current and future streams
                published to the session (with the exception of streams in the excludedStreamIds array) are muted. When you call
                this method with the active property set to false, future streams published to the session are not muted (but any
                existing muted streams remain muted).
            </param>
            <param name="excludedStreamIds">
                The stream IDs for streams that should not be muted. This is an optional property. If
                you omit this property, all streams in the session will be muted. This property only applies when the active
                property is set to true. When the active property is set to false, it is ignored. The elements in the
                excludedStreamIds array are stream IDs (strings) for the streams you wish to exclude from being muted. If you do
                not wish to include an array of excluded streams, do not include any body content.
            </param>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequestBuilder.WithConfiguration(Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.IBuilderForConfiguration">
            <summary>
                Represents a builder that allows to set the Configuration.
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.IBuilderForConfiguration.WithConfiguration(Vonage.Video.Moderation.MuteStreams.MuteStreamsRequest.MuteStreamsConfiguration)">
            <summary>
                Sets the Configuration on the builder.
            </summary>
            <param name="value">The configuration.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse">
            <summary>
                Represents the response when streams have been muted.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.ApplicationId">
            <summary>
                The Vonage application ID.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.CreatedAt">
            <summary>
                The time at which the project was created (a UNIX timestamp, in milliseconds).
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.Environment">
            <summary>
                This is set to "standard" or "enterprise", and it refers to the environment a project is running on. Enterprise
                package partners have access to the enterprise environment.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.Name">
            <summary>
                The name, if you specified one when creating the project; or an empty string if you did not specify a name.
            </summary>
        </member>
        <member name="P:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.Status">
            <summary>
                Whether the project is active ("ACTIVE") or suspended ("SUSPENDED").
            </summary>
        </member>
        <member name="M:Vonage.Video.Moderation.MuteStreams.MuteStreamsResponse.#ctor(System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
                Creates a response.
            </summary>
            <param name="applicationId">  The Vonage application ID.</param>
            <param name="status"> Whether the project is active ("ACTIVE") or suspended ("SUSPENDED").</param>
            <param name="name">
                The name, if you specified one when creating the project; or an empty string if you did not specify
                a name.
            </param>
            <param name="environment">
                This is set to "standard" or "enterprise", and it refers to the environment a project is
                running on. Enterprise package partners have access to the enterprise environment.
            </param>
            <param name="createdAt">   The time at which the project was created (a UNIX timestamp, in milliseconds).</param>
        </member>
        <member name="T:Vonage.Video.Sessions.ArchiveMode">
            <summary>
                Defines values for a session's Archive mode.
            </summary>
        </member>
        <member name="F:Vonage.Video.Sessions.ArchiveMode.Manual">
            <summary>
                The session is not archived automatically.
            </summary>
        </member>
        <member name="F:Vonage.Video.Sessions.ArchiveMode.Always">
            <summary>
                The session is archived automatically (as soon as there are clients publishing streams
                to the session).
            </summary>
        </member>
        <member name="T:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest">
            <summary>
                Represents a request to change a stream layout.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.Items">
            <summary>
                The layout items.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem">
            <summary>
                Represents a request to change a stream with layout classes.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem.Id">
            <summary>
                The stream Id.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem.LayoutClassList">
            <summary>
                The layout classes.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem.#ctor(System.String,System.String[])">
            <summary>
                Creates a new layout item.
            </summary>
            <param name="id">The stream Id.</param>
            <param name="layoutClassList">The layout classes.</param>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequestBuilder.WithItem(Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForItems">
            <summary>
                Represents a builder that allows to add an Item.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.ChangeStreamLayout.IBuilderForItems.WithItem(Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest.LayoutItem)">
            <summary>
                Adds an Item on the builder.
            </summary>
            <param name="value">The item.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.CreateSession.CreateSessionRequest">
            <summary>
                Represents a request for creating a session.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.ArchiveMode">
            <summary>
                Set to always to have the session archived automatically. With the archiveMode set to manual (the default), you can
                archive the session by calling the REST /archive POST method. If you set the archiveMode to always, you must also
                set the p2p.preference parameter to disabled (the default).
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.Default">
            <summary>
                Creates a default request with empty ip address, relayed media mode and manual archive mode.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.Location">
            <summary>
                The IP address that the Vonage Video APi will use to situate the session in its global network. If no location hint
                is passed in (which is recommended), the session uses a media server based on the location of the first client
                connecting to the session. Pass a location hint in only if you know the general geographic region (and a
                representative IP address) and you think the first client connecting may not be in that region. Specify an IP
                address that is representative of the geographical location for the session.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.MediaMode">
            <summary>
                Indicates how streams are sent.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequest.GetUrlEncoded">
            <summary>
                Retrieves the encoded Url.
            </summary>
            <returns>The encoded Url.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequestBuilder.WithArchiveMode(Vonage.Video.Sessions.ArchiveMode)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequestBuilder.WithLocation(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequestBuilder.WithLocation(Vonage.Video.Sessions.IpAddress)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionRequestBuilder.WithMediaMode(Vonage.Video.Sessions.MediaMode)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sessions.CreateSession.IBuilderForLocation">
            <summary>
                Represents a builder that allows to set the Location.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.IBuilderForLocation.WithLocation(System.String)">
            <summary>
                Sets the Location on the builder.
            </summary>
            <param name="value">The location.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.IBuilderForLocation.WithLocation(Vonage.Video.Sessions.IpAddress)">
            <summary>
                Sets the Location on the builder.
            </summary>
            <param name="value">The location.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.CreateSession.IBuilderForMediaMode">
            <summary>
                Represents a builder that allows to set the MediaMode.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.IBuilderForMediaMode.WithMediaMode(Vonage.Video.Sessions.MediaMode)">
            <summary>
                Sets the MediaMode on the builder.
            </summary>
            <param name="value">The media mode.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.CreateSession.IBuilderForArchiveMode">
            <summary>
                Represents a builder that allows to set the ArchiveMode.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.IBuilderForArchiveMode.WithArchiveMode(Vonage.Video.Sessions.ArchiveMode)">
            <summary>
                Sets the ArchiveMode on the builder.
            </summary>
            <param name="value">The archive mode.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.CreateSession.CreateSessionResponse">
            <summary>
                Represents the response when a session has been created.
            </summary>
        </member>
        <member name="F:Vonage.Video.Sessions.CreateSession.CreateSessionResponse.NoSessionCreated">
            <summary>
                Indicates no session was created.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.CreateSession.CreateSessionResponse.SessionId">
            <summary>
                Gets or sets the session Id.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.CreateSession.CreateSessionResponse.#ctor(System.String)">
            <summary>
                Creates a new response.
            </summary>
            <param name="sessionId">The created session Id.</param>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStream.GetStreamRequest">
            <summary>
                Represents a request to retrieve a stream.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamRequest.StreamId">
            <summary>
                The stream Id.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamRequestBuilder.WithStreamId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sessions.GetStream.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStream.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStream.IBuilderForStreamId">
            <summary>
                Represents a builder that allows to set the StreamId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.IBuilderForStreamId.WithStreamId(System.String)">
            <summary>
                Sets the StreamId on the builder.
            </summary>
            <param name="value">The stream id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStream.GetStreamResponse">
            <summary>
                Represents the response of a GetStreamRequest.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamResponse.Id">
            <summary>
                The stream Id.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamResponse.LayoutClassList">
            <summary>
                An array of the layout classes for the stream.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamResponse.Name">
            <summary>
                The stream name (if one was set when the client published the stream).
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStream.GetStreamResponse.VideoType">
            <summary>
                Set to "camera", "screen", or "custom". A "screen" video uses screen sharing on the publisher as the video source;
                a "custom" video is published by a web client using an HTML VideoTrack element as the video source.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStream.GetStreamResponse.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>
                Creates a response.
            </summary>
            <param name="id">The stream ID.</param>
            <param name="videoType">The video type.</param>
            <param name="name"></param>
            <param name="layoutClassList"></param>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStreams.GetStreamsRequest">
            <summary>
                Represents a request to retrieve streams.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sessions.GetStreams.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStreams.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStreams.GetStreamsResponse">
            <summary>
                Represents a response for the GetStreamsRequest.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Count">
            <summary>
                Number of items in the response.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Items">
            <summary>
                Stream layouts for requested session IDs.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.#ctor(System.Int32,Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream[])">
            <summary>
                Creates a response.
            </summary>
            <param name="count">The number of elements.</param>
            <param name="items">The streams.</param>
        </member>
        <member name="T:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream">
            <summary>
                Represents a stream.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream.Id">
            <summary>
                The stream Id.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream.LayoutClassList">
            <summary>
                An array of the layout classes for the stream.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream.Name">
            <summary>
                The stream name (if one was set when the client published the stream).
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="P:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream.VideoType">
            <summary>
                Set to "camera", "screen", or "custom". A "screen" video uses screen sharing on the publisher as the video source;
                a "custom" video is published by a web client using an HTML VideoTrack element as the video source.
            </summary>
            <remarks>
                This struct should be read-only. The setter is mandatory for deserialization.
            </remarks>
        </member>
        <member name="M:Vonage.Video.Sessions.GetStreams.GetStreamsResponse.Stream.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>
                Creates a stream.
            </summary>
            <param name="id">The stream ID.</param>
            <param name="videoType">The video type.</param>
            <param name="name"></param>
            <param name="layoutClassList"></param>
        </member>
        <member name="T:Vonage.Video.Sessions.IpAddress">
            <summary>
                Represents a valid IpAddress.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.IpAddress.Address">
            <summary>
                The address.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.IpAddress.Empty">
            <summary>
                Returns an empty address.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sessions.IpAddress.Localhost">
            <summary>
                Returns the Localhost address.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.IpAddress.Parse(System.String)">
            <summary>
                Parses the provided ip address.
            </summary>
            <param name="location">The ip address.</param>
            <returns>Success if the parsing operation succeeded, Failure if it failed.</returns>
        </member>
        <member name="T:Vonage.Video.Sessions.MediaMode">
            <summary>
                Defines values for a session's Media mode.
            </summary>
        </member>
        <member name="F:Vonage.Video.Sessions.MediaMode.Routed">
            <summary>
                The session will transmit streams using the OpenTok Media Router.
            </summary>
        </member>
        <member name="F:Vonage.Video.Sessions.MediaMode.Relayed">
            <summary>
                The session will attempt to transmit streams directly between clients. If two clients
                cannot send and receive each others' streams, due to firewalls on the clients' networks,
                their streams will be relayed using the OpenTok TURN Server.
            </summary>
        </member>
        <member name="T:Vonage.Video.Sessions.SessionClient">
            <summary>
                Represents a client exposing session features.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sessions.SessionClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Sessions.SessionClient.ChangeStreamLayoutAsync(Vonage.Common.Monads.Result{Vonage.Video.Sessions.ChangeStreamLayout.ChangeStreamLayoutRequest})">
            <summary>
                Changes how the stream is displayed in the layout of a composed Vonage Video archive.
            </summary>
            <param name="request">The request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.SessionClient.CreateSessionAsync(Vonage.Common.Monads.Result{Vonage.Video.Sessions.CreateSession.CreateSessionRequest})">
            <summary>
                Creates a new session.
            </summary>
            <param name="request">The request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Sessions.SessionClient.GetStreamAsync(Vonage.Common.Monads.Result{Vonage.Video.Sessions.GetStream.GetStreamRequest})">
            <summary>
                Retrieves a stream.
            </summary>
            <param name="request">The request.</param>
            <returns>
                A success state with the stream if the operation succeeded. A failure state with the error message if it
                failed.
            </returns>
        </member>
        <member name="M:Vonage.Video.Sessions.SessionClient.GetStreamsAsync(Vonage.Common.Monads.Result{Vonage.Video.Sessions.GetStreams.GetStreamsRequest})">
            <summary>
                Retrieves information on all Vonage Video streams in a session.
            </summary>
            <param name="request">The request.</param>
            <returns>A success state with streams if the operation succeeded. A failure state with the error message if it failed.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignal.SendSignalRequest">
            <summary>
                Represents a request to send a signal to specific participant.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignal.SendSignalRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignal.SendSignalRequest.ConnectionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignal.SendSignalRequest.Content">
            <summary>
                The signal content.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignal.SendSignalRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequestBuilder.WithConnectionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequestBuilder.WithContent(Vonage.Video.Signaling.SignalContent)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.SendSignalRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignal.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignal.IBuilderForConnectionId">
            <summary>
                Represents a builder that allows to set the ConnectionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.IBuilderForConnectionId.WithConnectionId(System.String)">
            <summary>
                Sets the ConnectionId on the builder.
            </summary>
            <param name="value">The connection id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignal.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignal.IBuilderForContent">
            <summary>
                Represents a builder that allows to set the Content.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignal.IBuilderForContent.WithContent(Vonage.Video.Signaling.SignalContent)">
            <summary>
                Sets the Content on the builder.
            </summary>
            <param name="value">The content.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignals.SendSignalsRequest">
            <summary>
                Represents a request to send a signal to all participants.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.Content">
            <summary>
                The signal content.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequestBuilder.WithContent(Vonage.Video.Signaling.SignalContent)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.SendSignalsRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignals.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignals.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SendSignals.IBuilderForContent">
            <summary>
                Represents a builder that allows to set the Content.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SendSignals.IBuilderForContent.WithContent(Vonage.Video.Signaling.SignalContent)">
            <summary>
                Sets the Content on the builder.
            </summary>
            <param name="value">The content.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Signaling.SignalContent">
            <summary>
                Represents a signal to be sent.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SignalContent.Data">
            <summary>
                Payload that is being sent to the client. This cannot exceed 8kb.
            </summary>
        </member>
        <member name="P:Vonage.Video.Signaling.SignalContent.Type">
            <summary>
                Type of data that is being sent to the client. This cannot exceed 128 bytes.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SignalContent.#ctor(System.String,System.String)">
            <summary>
                Creates a signal.
            </summary>
            <param name="type">Type of data that is being sent to the client. This cannot exceed 128 bytes.</param>
            <param name="data">Payload that is being sent to the client. This cannot exceed 8kb.</param>
        </member>
        <member name="T:Vonage.Video.Signaling.SignalingClient">
            <summary>
                Represents a client exposing signaling features.
            </summary>
        </member>
        <member name="M:Vonage.Video.Signaling.SignalingClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Signaling.SignalingClient.SendSignalAsync(Vonage.Common.Monads.Result{Vonage.Video.Signaling.SendSignal.SendSignalRequest})">
            <summary>
                Sends signals to a single participant in an active Vonage Video session.
            </summary>
            <param name="request">The signal request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Signaling.SignalingClient.SendSignalsAsync(Vonage.Common.Monads.Result{Vonage.Video.Signaling.SendSignals.SendSignalsRequest})">
            <summary>
                Sends signals to all participants in an active Vonage Video session.
            </summary>
            <param name="request">The signal request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.InitiateCallRequest">
            <summary>
                Represents a request to initiate an outbound Sip call.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.Sip">
            <summary>
                The sip element.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.Token">
            <summary>
                The OpenTok token to be used for the participant being called. You can add token data to identify that the
                participant is on a SIP endpoint or for other identifying data, such as phone numbers. (The OpenTok client
                libraries include properties for inspecting the connection data for a client connected to a session.) See the Token
                Creation developer guide.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.EnableEncryptedMedia">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.EnableForceMute">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.EnableVideo">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithAuthentication(Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithFrom(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithSipUri(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.InitiateCallRequestBuilder.WithToken(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.IBuilderForToken">
            <summary>
                Represents a builder that allows to set the Token.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForToken.WithToken(System.String)">
            <summary>
                Sets the Token on the builder.
            </summary>
            <param name="value">The token.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.IBuilderForSipUri">
            <summary>
                Represents a builder that allows to set the Sip uri.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForSipUri.WithSipUri(System.Uri)">
            <summary>
                Sets the Sip uri on the builder.
            </summary>
            <param name="value">The uri.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip">
            <summary>
                Represents a builder for optional sip values.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.EnableEncryptedMedia">
            <summary>
                Indicates the transmitted media must be encrypted.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.EnableForceMute">
            <summary>
                Indicates the SIP endpoint observes force mute moderation.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.EnableVideo">
            <summary>
                Indicates the SIP call will include video.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.WithAuthentication(Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication)">
            <summary>
                Specifies the authentication credentials to be used in the SIP Invite Request.
            </summary>
            <param name="sipAuthentication">The authentication.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.WithFrom(System.String)">
            <summary>
                Specifies the number that will be sent to the SIP number as the caller.
            </summary>
            <param name="value">The number.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.IBuilderForOptionalSip.WithHeader(System.String,System.String)">
            <summary>
                Specifies a custom header to be added to the SIP Invite Request.
            </summary>
            <param name="key">The header key.</param>
            <param name="value">The header value.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.InitiateCallResponse">
            <summary>
                Represents the response when initiating a call.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallResponse.ConnectionId">
            <summary>
                The OpenTok connection ID for the SIP call's connection in the OpenTok session. You can use this connection ID to
                terminate the SIP call, using the OpenTok REST API.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallResponse.Id">
            <summary>
                A unique ID for the SIP call.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.InitiateCallResponse.StreamId">
            <summary>
                The OpenTok stream ID for the SIP call's stream in the OpenTok session.
            </summary>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.SipElement">
            <summary>
                Represents a SIP element.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.Authentication">
            <summary>
                Contains the username and password to be used in the the SIP INVITE request for HTTP digest
                authentication, if it is required by your SIP platform.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.From">
            <summary>
                The number or string that will be sent to the final SIP number as the caller. It must be a string in the form of
                from@example.com, where from can be a string or a number. If from is set to a number (for example,
                "14155550101@example.com"), it will show up as the incoming number on PSTN phones. If from is undefined or set to a
                string (for example, "joe@example.com"),  +00000000 will show up as the incoming number on PSTN phones.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.HasEncryptedMedia">
            <summary>
                Indicates whether the media must be transmitted encrypted. The default value is false.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.HasForceMute">
            <summary>
                Indicates whether the SIP end point observes force mute moderation. Also, with observeForceMute set to true, the
                caller can press"*6" to unmute and mute the published audio. For the "*6" mute toggle to work, the SIP caller must
                negotiate RFC2833 DTMFs (RFC2833/RFC4733 digits). The mute toggle is not supported with SIP INFO or in-band DTMFs.
                A message (in English) is played to the caller when the caller mutes and unmutes, or when the SIP client is muted
                through a force mute action. The default is false.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.HasVideo">
            <summary>
                Indicates whether the SIP call will include video. With video included, the SIP client's video is included in the
                OpenTok stream that is sent to the OpenTok session. The SIP client will receive a single composed video of the
                published streams in the OpenTok session. The default value is false.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.Headers">
            <summary>
                Defines custom headers to be added to the SIP INVITE request initiated fromOpenTok to your SIP platform.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.Uri">
            <summary>
                The SIP URI to be used as destination of the SIP call initiated from OpenTok to your SIP platform. If the SIP uri
                contains a transport=tls header, the negotiation between Vonage and the SIP endpoint will be done securely. Note
                that this will only apply to the negotiation itself,and not to the transmission of audio. If you also audio
                transmission to be encrypted, set the secure property to true.
            </summary>
        </member>
        <member name="T:Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication">
            <summary>
                Represents the authentication for the SIP call.
            </summary>
            <param name="Username">
                Contains the username to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </param>
            <param name="Password">
                Contains the password to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </param>
        </member>
        <member name="M:Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication.#ctor(System.String,System.String)">
            <summary>
                Represents the authentication for the SIP call.
            </summary>
            <param name="Username">
                Contains the username to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </param>
            <param name="Password">
                Contains the password to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </param>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication.Username">
            <summary>
                Contains the username to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.InitiateCall.SipElement.SipAuthentication.Password">
            <summary>
                Contains the password to be used in the the SIP INVITE request for HTTP digest authentication,
                if it is required by your SIP platform.
            </summary>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest">
            <summary>
                Represents a request to play a tone for all participants of a session.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.Digits">
            <summary>
                The string of DTMF digits to send. This can include 0-9, '*', '#', and 'p'. A p indicates a pause of 500ms (if you
                need to add a delay in sending the digits).
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequestBuilder.WithDigits(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForDigits">
            <summary>
                Represents a builder that allows to set the Digits.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForDigits.WithDigits(System.String)">
            <summary>
                Sets the Digits on the builder.
            </summary>
            <param name="value">The digits.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoCall.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest">
            <summary>
                Represents a request to play a tone for a specific participant of a session.
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.ApplicationId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.ConnectionId">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.Digits">
            <summary>
                The string of DTMF digits to send. This can include 0-9, '*', '#', and 'p'. A p indicates a pause of 500ms (if you
                need to add a delay in sending the digits).
            </summary>
        </member>
        <member name="P:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.SessionId">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.Build">
            <summary>
                Initializes a builder.
            </summary>
            <returns>The builder.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.BuildRequestMessage">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest.GetEndpointPath">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequestBuilder.Create">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequestBuilder.WithApplicationId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequestBuilder.WithConnectionId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequestBuilder.WithDigits(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequestBuilder.WithSessionId(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForApplicationId">
            <summary>
                Represents a builder that allows to set the ApplicationId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForApplicationId.WithApplicationId(System.Guid)">
            <summary>
                Sets the ApplicationId on the builder.
            </summary>
            <param name="value">The application id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForConnectionId">
            <summary>
                Represents a builder that allows to set the ConnectionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForConnectionId.WithConnectionId(System.String)">
            <summary>
                Sets the ConnectionId on the builder.
            </summary>
            <param name="value">The connection id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForSessionId">
            <summary>
                Represents a builder that allows to set the SessionId.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForSessionId.WithSessionId(System.String)">
            <summary>
                Sets the SessionId on the builder.
            </summary>
            <param name="value">The session id.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForDigits">
            <summary>
                Represents a builder that allows to set the Digits.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.PlayToneIntoConnection.IBuilderForDigits.WithDigits(System.String)">
            <summary>
                Sets the Digits on the builder.
            </summary>
            <param name="value">The digits.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Vonage.Video.Sip.SipClient">
            <summary>
                Represents a client for handling SIP calls.
            </summary>
        </member>
        <member name="M:Vonage.Video.Sip.SipClient.#ctor(Vonage.Common.Client.VonageHttpClientConfiguration)">
            <summary>
                Creates a new client.
            </summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Vonage.Video.Sip.SipClient.InitiateCallAsync(Vonage.Common.Monads.Result{Vonage.Video.Sip.InitiateCall.InitiateCallRequest})">
            <summary>
                Connects your SIP platform to an OpenTok session.
            </summary>
            <param name="request">The request.</param>
            <returns>Success with the response if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.SipClient.PlayToneIntoCallAsync(Vonage.Common.Monads.Result{Vonage.Video.Sip.PlayToneIntoCall.PlayToneIntoCallRequest})">
            <summary>
                Sends DTMF digits to all participants in an OpenTok call.
            </summary>
            <param name="request">The request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="M:Vonage.Video.Sip.SipClient.PlayToneIntoConnectionAsync(Vonage.Common.Monads.Result{Vonage.Video.Sip.PlayToneIntoConnection.PlayToneIntoConnectionRequest})">
            <summary>
                Sends DTMF digits to a single participant in an OpenTok call.
            </summary>
            <param name="request">The request.</param>
            <returns>Success if the operation succeeds, Failure it if fails.</returns>
        </member>
        <member name="T:Vonage.Video.VideoClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.ArchiveClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.BroadcastClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.ModerationClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.SessionClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.SignalingClient">
            <inheritdoc />
        </member>
        <member name="P:Vonage.Video.VideoClient.SipClient">
            <inheritdoc />
        </member>
        <member name="T:Vonage.Server.Layout">
            <summary>
                Represents a layout.
            </summary>
            <param name="ScreenshareType">
                Set the screenshareType property to the layout type to use when there is a screen-sharing stream in the session.
                (This property is optional.) Note if you set the screenshareType property, you must set the type property to
                "bestFit" and leave the stylesheet property unset.
            </param>
            <param name="Stylesheet">
                Used for the custom layout to define the visual layout.
            </param>
            <param name="Type">
                Specify this to assign the initial layout type for the archive. This applies only to composed archives. Valid
                values for the layout
                property are "bestFit" (best fit), "custom" (custom), "horizontalPresentation" (horizontal presentation), "pip"
                (picture-in-picture), and "verticalPresentation" (vertical presentation)). If you specify a "custom" layout type,
                set the stylesheet property of the layout object to the stylesheet. (For other layout types, do not set a
                stylesheet property.).
            </param>
        </member>
        <member name="M:Vonage.Server.Layout.#ctor(System.Nullable{Vonage.Server.LayoutType},System.String,Vonage.Server.LayoutType)">
            <summary>
                Represents a layout.
            </summary>
            <param name="ScreenshareType">
                Set the screenshareType property to the layout type to use when there is a screen-sharing stream in the session.
                (This property is optional.) Note if you set the screenshareType property, you must set the type property to
                "bestFit" and leave the stylesheet property unset.
            </param>
            <param name="Stylesheet">
                Used for the custom layout to define the visual layout.
            </param>
            <param name="Type">
                Specify this to assign the initial layout type for the archive. This applies only to composed archives. Valid
                values for the layout
                property are "bestFit" (best fit), "custom" (custom), "horizontalPresentation" (horizontal presentation), "pip"
                (picture-in-picture), and "verticalPresentation" (vertical presentation)). If you specify a "custom" layout type,
                set the stylesheet property of the layout object to the stylesheet. (For other layout types, do not set a
                stylesheet property.).
            </param>
        </member>
        <member name="P:Vonage.Server.Layout.ScreenshareType">
            <summary>
                Set the screenshareType property to the layout type to use when there is a screen-sharing stream in the session.
                (This property is optional.) Note if you set the screenshareType property, you must set the type property to
                "bestFit" and leave the stylesheet property unset.
            </summary>
        </member>
        <member name="P:Vonage.Server.Layout.Stylesheet">
            <summary>
                Used for the custom layout to define the visual layout.
            </summary>
        </member>
        <member name="P:Vonage.Server.Layout.Type">
            <summary>
                Specify this to assign the initial layout type for the archive. This applies only to composed archives. Valid
                values for the layout
                property are "bestFit" (best fit), "custom" (custom), "horizontalPresentation" (horizontal presentation), "pip"
                (picture-in-picture), and "verticalPresentation" (vertical presentation)). If you specify a "custom" layout type,
                set the stylesheet property of the layout object to the stylesheet. (For other layout types, do not set a
                stylesheet property.).
            </summary>
        </member>
        <member name="T:Vonage.Server.LayoutType">
            <summary>
                Represents the layout type.
            </summary>
        </member>
        <member name="F:Vonage.Server.LayoutType.BestFit">
            <summary>
                Best fit.
            </summary>
        </member>
        <member name="F:Vonage.Server.LayoutType.Custom">
            <summary>
                A custom layout.
            </summary>
        </member>
        <member name="F:Vonage.Server.LayoutType.HorizontalPresentation">
            <summary>
                Horizontal presentation.
            </summary>
        </member>
        <member name="F:Vonage.Server.LayoutType.VerticalPresentation">
            <summary>
                Vertical presentation.
            </summary>
        </member>
        <member name="F:Vonage.Server.LayoutType.Pip">
            <summary>
                Picture-in-picture.
            </summary>
        </member>
        <member name="T:Vonage.Server.OutputMode">
            <summary>
                Defines values for the OutputMode property of an Archive object.
            </summary>
        </member>
        <member name="F:Vonage.Server.OutputMode.Composed">
            <summary>
                All streams in the archive are recorded to a single (composed) file.
            </summary>
        </member>
        <member name="F:Vonage.Server.OutputMode.Individual">
            <summary>
                Each stream in the archive is recorded to its own individual file.
            </summary>
        </member>
        <member name="T:Vonage.Server.RenderResolution">
            <summary>
                Enum for representing resolutions with orientation.
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.StandardDefinitionLandscape">
            <summary>
                Standard definition (SD) resolution with landscape orientation (640x480)
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.StandardDefinitionPortrait">
            <summary>
                Standard definition (SD) resolution with portrait orientation (480x640)
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.HighDefinitionLandscape">
            <summary>
                High definition (HD) resolution with landscape orientation (1280x780)
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.HighDefinitionPortrait">
            <summary>
                High definition (HD) resolution with portrait orientation (780x1280)
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.FullHighDefinitionLandscape">
            <summary>
                Full high definition (FHD) resolution with landscape orientation (1920x1080)
            </summary>
        </member>
        <member name="F:Vonage.Server.RenderResolution.FullHighDefinitionPortrait">
            <summary>
                Full high definition (FHD) resolution with portrait orientation (1080x1920)
            </summary>
        </member>
        <member name="T:Vonage.Server.StreamMode">
            <summary>
                Whether streams included in an archive or broadcast are selected automatically or manually.
            </summary>
        </member>
        <member name="F:Vonage.Server.StreamMode.Auto">
            <summary>
                All streams in the session can be included.
            </summary>
        </member>
        <member name="F:Vonage.Server.StreamMode.Manual">
            <summary>
                You will specify streams to be included in the archive or broadcast.
            </summary>
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties">
            <summary>
                Represents the properties for Advanced Machine Detection.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.BeepTimeout">
            <summary>
                Maximum time in seconds Vonage should wait for a machine beep to be detected. A machine event
                with sub_state set to beep_timeout will be sent if the timeout is exceeded.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.Behavior">
            <summary>
                When hangup is used, the call will be terminated if a machine is detected. When continue is
                used, the call will continue even if a machine is detected.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AdvancedMachineDetectionProperties.Mode">
            <summary>
                Detect if machine answered and sends a human or machine status in the webhook payload. When set to
                detect_beep, the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </summary>
        </member>
        <member name="M:Vonage.Voice.AdvancedMachineDetectionProperties.#ctor(Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior,Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode,System.Int32)">
            <summary>
                Constructor for AdvancedMachineDetectionProperties.
            </summary>
            <param name="behavior">
                When hangup is used, the call will be terminated if a machine is detected. When continue is
                used, the call will continue even if a machine is detected.
            </param>
            <param name="mode">
                Detect if machine answered and sends a human or machine status in the webhook payload. When set to
                detect_beep, the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </param>
            <param name="beepTimeout">
                Maximum time in seconds Vonage should wait for a machine beep to be detected. A machine event
                with sub_state set to beep_timeout will be sent if the timeout is exceeded.
            </param>
            <exception cref="T:Vonage.Common.Exceptions.VonageException">When Beep Timeout is lower than 45, or higher than 120.</exception>
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior">
            <summary>
                Represents the behavior for AdvancedMachineDetection.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior.Continue">
            <summary>
                Indicates the call will continue even if a machine is detected.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionBehavior.Hangup">
            <summary>
                Indicates the call will be terminated if a machine is detected.
            </summary>
        </member>
        <member name="T:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode">
            <summary>
                Represents the mode for AdvancedMachineDetection.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode.Detect">
            <summary>
                Indicates the system detects if a machine answered and send a status in the webhook payload.
            </summary>
        </member>
        <member name="F:Vonage.Voice.AdvancedMachineDetectionProperties.MachineDetectionMode.DetectBeep">
            <summary>
                Indicates the system also attempts to detect voice mail beep and sends an additional parameter sub_state in the
                webhook with the value beep_start.
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.To">
            <summary>
            The number the call came from (this could be your Vonage number if the call is started programmatically)
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.From">
            <summary>
            The call the number is to (this could be a Vonage number or another phone number)
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.Uuid">
            <summary>
            A unique identifier for this call
            </summary>
        </member>
        <member name="P:Vonage.Voice.AnswerWebhooks.Answer.ConversationUuid">
            <summary>
            A unique identifier for this conversation
            </summary>
        </member>
        <member name="T:Vonage.Voice.CallCommand">
            <summary>
                Represents a command to start a call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AdvancedMachineDetection">
            <summary>
                Configure the behavior of Vonage's advanced machine detection. Overrides machineDetection if both are set.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AnswerMethod">
            <summary>
                Optional. The HTTP method used to send event information to answer_url. The default value is GET.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.AnswerUrl">
            <summary>
                The webhook endpoint where you provide the Vonage Call Control Object that governs this call. As soon as your user
                answers a call, Platform requests this NCCO from answer_url. Use answer_method to manage the HTTP method.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.EventMethod">
            <summary>
                Optional. The HTTP method used to send event information to event_url. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.EventUrl">
            <summary>
                Optional. Platform sends event information asynchronously to this endpoint when status changes. For more
                information about the values sent, see callback.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.From">
            <summary>
                The endpoint you are calling from. Possible value are the same as to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.LengthTimer">
            <summary>
                Optional. Set the number of seconds that elapse before Vonage hangs up after the call state changes to in_progress.
                The default value is 7200, two hours. This is also the maximum value.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.MachineDetection">
            <summary>
                Optional. Configure the behavior when Vonage detects that a destination is an answerphone.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.Ncco">
            <summary>
                This will convert to ncco as per the CallCommandConverter - it is preferable to use this over the JArray Ncco
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.RandomFromNumber">
            <summary>
                Set to <code>true</code> to use random phone number as the <code>from</code>. This number will be selected from the
                list of nubmers assigned to the current application. <code>RandomFromNumber = true  </code> cannot be used together
                with <code>From</code>
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.RingingTimer">
            <summary>
                Optional. Set the number of seconds that elapse before Vonage hangs up after the call state changes to 'ringing'.
                The default value is 60, the maximum value is 120.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommand.To">
            <summary>
                The single or mixed collection of endpoint types you connected to. Possible values.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommandResponse.Message">
            <summary>
            A string explaining the state of this request.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallCommandResponse.Uuid">
            <summary>
            The unique id for this request.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEditCommand.Action">
            <summary>
            Use one of the following options to modify the call:
            hangup    Terminates this call leg.
            mute      Mutes this call leg.
            unmute    Unmutes this call leg.
            earmuff   Prevents the recipient of this call leg from hearing other parts of the conversation.
            unearmuff Removes the earmuff effect from this call leg.
            transfer  Transfers this call leg to another NCCO, as specified by the destination parameter.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEditCommand.Destination">
            <summary>
            Optional. A JSON object pointing to a replacement NCCO, when action is transfer.
            </summary>        
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.ContentType">
            <summary>
            The internet media type for the audio you are streaming.Possible values are: audio/l16; rate=16000
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.DtmfAnswer">
            <summary>
            Set the digits that are sent to the user as soon as the Call is answered. The * and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Headers">
            <summary>
            A JSON object containing any metadata you want.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Number">
            <summary>
            The phone number to connect to in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Type">
            <summary>
            One of the following: phone, websocket, sip
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallEndpoint.Uri">
            <summary>
            The URI to the websocket you are streaming to.
            OR
            The SIP URI to the endpoint you are connecting to in the format sip:rebekka@sip.example.com.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.ConversationUuid">
            <summary>
            A unique identifier for the Conversation this Call is part of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Direction">
            <summary>
            Possible values are outbound or inbound.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Duration">
            <summary>
            The time elapsed for the Call to take place in seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.EndTime">
            <summary>
            The time the Call ended
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.From">
            <summary>
            The endpoint you called from. Possible values are the same as to 
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Network">
            <summary>
            The Mobile Country Code Mobile Network Code (MCCMNC) for the carrier network used to make this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Price">
            <summary>
            The total price charged for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Rate">
            <summary>
            The price per minute for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.RecordingUrl">
            <summary>
            The URL to download a call or conversation recording from.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.StartTime">
            <summary>
            The time the Call started
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Status">
            <summary>
            The status of the Call. Possible values are:
             started - Platform has stared the Call.
             ringing - the user's handset is ringing.
             answered - the user has answered your Call.
             timeout - your user did not answer your Call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.To">
            <summary>
            The single or mixed collection of endpoint types you connected to.Possible value are:
             phone - phone numbers in e.164 format.Options are:
               number - the phone number to connect to in E.164 format.
               dtmfAnswer - Set the digits that are sent to the user as soon as the Call is answered.The* and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallRecord.Uuid">
            <summary>
             A unique identifier for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.ConversationUuid">
            <summary>
            A unique identifier for the Conversation this Call is part of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Direction">
            <summary>
            Possible values are outbound or inbound.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Status">
            <summary>
            The status of the Call. Possible values are:
             started - Platform has stared the Call.
             ringing - the user's handset is ringing.
             answered - the user has answered your Call.
             timeout - your user did not answer your Call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallResponse.Uuid">
            <summary>
             A unique identifier for this Call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.Status">
            <summary>
            Filter on the status of this Call.Possible values are:
             started - Platform has stared the call.
             ringing - the user's handset is ringing.
             answered - the user has answered your call.
             timeout - your user did not answer your call with ringing_timer.
             machine - Platform detected an answering machine.
             completed - Platform has terminated this call.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.DateStart">
            <summary>
            Return the records that occurred after this point in time.
            Times must be in UTC, they will not be converted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.DateEnd">
            <summary>
            Return the records that occurred before this point in time.
            Times must be in UTC, they will not be converted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.PageSize">
            <summary>
            Return this amount of records in the response. The default value is 10.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.RecordIndex">
            <summary>
            Return page_size Calls from this index in the response. That is, if your request returns 300 Calls, set record_index to 5 in order to return Calls 50 to 59. The default value is 0. That is, the first page_size Calls.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.Order">
            <summary>
            Return the results in:
             asc - ascending order.This is the default value.
             desc - descending order.
            </summary>
        </member>
        <member name="P:Vonage.Voice.CallSearchFilter.ConversationUuid">
            <summary>
             Return all the records associated with a specific Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.DtmfCommand.Digits">
            <summary>
            The array of digits to send to the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.StartTime">
            <summary>
            call start time
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.Rate">
            <summary>
            cost rate for the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Answered.Network">
            <summary>
            Network the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Detail">
            <summary>
            Extra detail for the status webhook - only present in some instances
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Direction">
            <summary>
            Call direction, can be either inbound or outbound
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.From">
            <summary>
            The number the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.Status">
            <summary>
            Call status
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.CallStatusEvent.To">
            <summary>
            The number the call was made to
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Duration">
            <summary>
            Call length (in seconds)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.EndTime">
            <summary>
            Timestamp (ISO 8601 format) of the end time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Network">
            <summary>
            The type of network that was used in the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Price">
            <summary>
            Total cost of the call (EUR)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.Rate">
            <summary>
            Cost per minute of the call (EUR)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Completed.StartTime">
            <summary>
            Timestamp (ISO 8601 format)
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.no_detail">
            <summary>
            no detail provided
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.unmapped_detail">
            <summary>
            detail provided but not mapped to an enum
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.invalid_number">
            <summary>
            number invalid
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.restricted">
            <summary>
            Rejected by carrier
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.declined">
            <summary>
            rejected by callee
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.cannot_route">
            <summary>
            cannot route to the number
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.number_out_of_service">
            <summary>
            Number is not available anymore.
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.internal_error">
            <summary>
            Server error or failure
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.carrier_timeout">
            <summary>
            Carrier timed out
            </summary>
        </member>
        <member name="F:Vonage.Voice.EventWebhooks.DetailedStatus.unavailable">
            <summary>
            Callee is temorarily unavailable.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.DtmfResult.Digits">
            <summary>
            the dtmf digits input by the user
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.DtmfResult.TimedOut">
            <summary>
            indicates whether the dtmf input timed out
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Error.Reason">
            <summary>
            Information about the nature of the error
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Error.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Event.Uuid">
            <summary>
            The unique identifier for this call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.EventBase.TimeStamp">
            <summary>
            Timestamp (ISO 8601 format)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.HumanMachine.Uuid">
            <summary>
            The unique identifier for this call (Note call_uuid, not uuid as in some other endpoints)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.Dtmf">
            <summary>
            Result of Dtmf input
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.Speech">
            <summary>
            Result of the speech recognition
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.TimedOut">
            <summary>
                The buttons pressed by the user
            </summary>
            <summary>
                Whether the input action timed out: true if it did, false if not
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.ConversationUuid">
            <summary>
                The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.From">
            <summary>
                The number the call came from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.MultiInput.To">
            <summary>
                The number the call was made to
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Notification`1.ConversationUuid">
            <summary>
            A unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Notification`1.Payload">
            <summary>
            Custom payload of for the notification action
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.StartTime">
            <summary>
            Timestamp (ISO 8601 format) of the start time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.RecordingUrl">
            <summary>
            Where to download the recording from
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.Size">
            <summary>
            The size of the recording file (in bytes)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.Uuid">
            <summary>
            A unique identifier for this recording
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.EndTime">
            <summary>
            Timestamp (ISO 8601 format) of the end time of the call
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Record.ConversationUuid">
            <summary>
            The unique identifier for this conversation
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechRecognitionResult.Text">
            <summary>
            Transcript text representing the words that the user spoke.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechRecognitionResult.Confidence">
            <summary>
            The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.Error">
            <summary>
            Error field in case there was a problem during speech recognition - will not be present if nothing went wrong.
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.SpeechResults">
            <summary>
            Array of SpeechRecognitionResults
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.SpeechResult.TimeoutReason">
            <summary>
            Indicates if the input ended when user stopped speaking (end_on_silence_timeout), by max duration timeout (max_duration) or if the user didn't say anything (start_timeout)
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Transfer.ConversationUuidFrom">
            <summary>
            The conversation ID that the leg was originally in
            </summary>
        </member>
        <member name="P:Vonage.Voice.EventWebhooks.Transfer.ConversationUuidTo">
            <summary>
            The conversation ID that the leg was transferred to
            </summary>
        </member>
        <member name="P:Vonage.Voice.GetRecordingResponse.ResultStream">
            <summary>
            Stream of bytes containg the recording file's content
            </summary>
        </member>
        <member name="P:Vonage.Voice.GetRecordingResponse.Status">
            <summary>
            Response Status of the HTTP Request
            </summary>
        </member>
        <member name="T:Vonage.Voice.IVoiceClient">
            <summary>
                Represents a client to expose Voice capabilities.
            </summary>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.CreateCallAsync(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <summary>
            POST /v1/calls - create an outbound SIP or PSTN Call
            </summary>
            <param name="command"></param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <returns></returns>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCallAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls/{uuid} - retrieve information about a single Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetCallsAsync(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <summary>
            GET /v1/calls - retrieve information about all your Calls
            <param name="filter">Filter to search calls on</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            </summary>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.GetRecordingAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            GET - retrieves the recording from a call based off of the input url
            </summary>
            <param name="recordingUrl">Url where the recorded call lives</param>
            <param name="creds">Overridden credentials</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
            <returns>A response containing a byte array representing the file stream</returns>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartDtmfAsync(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/dtmf - send Dual-tone multi-frequency(DTMF) tones to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartStreamAsync(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/stream - stream an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StartTalkAsync(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid}/talk - send a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopStreamAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/stream - stop streaming an audio file to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.StopTalkAsync(System.String,Vonage.Request.Credentials)">
            <summary>
            DELETE /v1/calls/{uuid}/talk - stop sending a synthesized speech message to an active Call
            </summary>
            <param name="id">id of call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="M:Vonage.Voice.IVoiceClient.UpdateCallAsync(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <summary>
            PUT /v1/calls/{uuid} - modify an existing Call
            </summary>
            <param name="id">id of call</param>
            <param name="cmd">Command to execute against call</param>
            <param name="creds">(Optional) Overridden credentials for only this request</param>
            <exception cref="T:Vonage.Common.Exceptions.VonageHttpRequestException">thrown if an error is encountered when talking to the API</exception>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.AdvancedMachineDetection">
            <summary>
                Configure the behavior of Vonage's advanced machine detection. Overrides machineDetection if both are set.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Endpoint">
            <summary>
                Connect to a single endpoint.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventMethod">
            <summary>
                The HTTP method Vonage uses to make the request to eventUrl. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventType">
            <summary>
                Set to synchronous to:
                make the connect action synchronous
                enable eventUrl to return an NCCO that overrides the current NCCO when a call moves to specific states.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.EventUrl">
            <summary>
                Set the webhook endpoint that Vonage calls asynchronously on each of the possible Call States.
                If eventType is set to synchronous the eventUrl can return an NCCO that overrides the current
                NCCO when a timeout occurs.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.From">
            <summary>
                A number in E.164 format that identifies the caller.
                This must be one of your Vonage virtual numbers,
                another value will result in the caller ID being unknown.
                If the caller is an app user, this option should be omitted.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Limit">
            <summary>
                Maximum length of the call in seconds. The default and maximum value is 7200 seconds (2 hours).
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.MachineDetection">
            <summary>
                Configure the behavior when Vonage detects that a destination is an answerphone. Set to either:
                continue - Vonage sends an HTTP request to event_url with the Call event machine
                hangup - end the Call
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.RingbackTone">
            <summary>
                A URL value that points to a ringbackTone to be played back on repeat to the caller,
                so they don't hear silence. The ringbackTone will automatically stop playing when the call is
                fully connected. It's not recommended to use this parameter when connecting to a phone endpoint,
                as the carrier will supply their own ringbackTone.
                Example: "ringbackTone": "http://example.com/ringbackTone.wav".
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConnectAction.Timeout">
            <summary>
                If the call is unanswered, set the number in seconds before Vonage stops ringing endpoint. The default value is 60.
            </summary>
        </member>
        <member name="T:Vonage.Voice.Nccos.ConversationAction">
            <summary>
                Represents a NCCO Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Action">
            <summary>
            Returns the Conversation ActionType.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.CanHear">
            <summary>
                A list of leg UUIDs that this participant can hear.
                If not provided, the participant can hear everyone.
                If an empty list is provided, the participant will not hear any other participants
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.CanSpeak">
            <summary>
                A list of leg UUIDs that this participant can be heard by.
                If not provided, the participant can be heard by everyone.
                If an empty list is provided, the participant will not be heard by anyone
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.EndOnExit">
            <summary>
                Specifies whether a moderated conversation ends when the moderator hangs up.
                This is set to false by default, which means that the conversation only ends
                when the last remaining participant hangs up, regardless of whether the moderator
                is still on the call. Set endOnExit to true to terminate the conversation when the
                moderator hangs up.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.MusicOnHoldUrl">
            <summary>
                A URL to the mp3 file to stream to participants until the conversation starts.
                By default the conversation starts when the first person calls the virtual number
                associated with your Voice app. To stream this mp3 before the moderator joins the
                conversation, set startOnEnter to false for all users other than the moderator.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Name">
            <summary>
                The name of the Conversation room. Names are namespaced to the application level.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.Record">
            <summary>
                Set to true to record this conversation. For standard conversations,
                recordings start when one or more attendees connects to the conversation.
                For moderated conversations, recordings start when the moderator joins.
                That is, when an NCCO is executed for the named conversation where startOnEnter is set
                to true. When the recording is terminated, the URL you download the recording
                from is sent to the event URL. By default audio is recorded in MP3 format.
                See the recording guide for more details
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.ConversationAction.StartOnEnter">
            <summary>
                The default value of true ensures that the conversation starts when this caller
                joins conversation name. Set to false for attendees in a moderated conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.AppEndpoint.User">
            <summary>
            	the username of the user to connect to. This username must have been added as a user
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.Endpoint.Type">
            <summary>
            the type of endpoint being connected
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.Number">
            <summary>
            The phone number to connect to in E.164 format.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.DtmfAnswer">
            <summary>
            Set the digits that are sent to the user as soon as the Call is answered. 
            The * and # digits are respected. You create pauses using p. Each pause is 500ms.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.PhoneEndpoint.OnAnswer">
            <summary>
            An object containing a required url key. 
            The URL serves an NCCO to execute in the number being connected to, 
            before that call is joined to your existing conversation. 
            Optionally, the ringbackTone key can be specified with a URL value that points to a 
            ringbackTone to be played back on repeat to the caller, so they do not hear just silence. 
            The ringbackTone will automatically stop playing when the call is fully connected. 
            Example: {"url":"https://example.com/answer", "ringbackTone":"http://example.com/ringbackTone.wav" }.
            Please note, the key ringback is still supported.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.SipEndpoint.Uri">
            <summary>
            the SIP URI to the endpoint you are connecting to in the format sip:rebekka@sip.example.com.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.SipEndpoint.Headers">
            <summary>
            key => value string pairs containing any metadata you need 
            e.g. { "location": "New York City", "occupation": "developer" }
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.VbcEndpoint.Extension">
            <summary>
            the VBC extension to connect the call to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.ContentType">
            <summary>
            the internet media type for the audio you are streaming. Possible values are: audio/l16;rate=16000 or audio/l16;rate=8000.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.Headers">
            <summary>
            an object containing any metadata you want. See connecting to a websocket for example headers
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.Endpoints.WebsocketEndpoint.Uri">
            <summary>
            the URI to the websocket you are streaming to.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.EventUrl">
            <summary>
            Vonage sends the digits pressed by the callee to this URL 1) after timeOut pause in activity or when # is pressed for DTMF or 2) after user stops speaking or 30 seconds of speech for speech input.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.EventMethod">
            <summary>
            The HTTP method used to send event information to event_url The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Dtmf">
            <summary>
            DTMF settings. Should be specified to enable DTMF input. If all the DTMF input settings will have default values, it should be specified as empty object
            NOTE: this is serialized as an empty object if not initalized by the user
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Type">
            <summary>
            Acceptable input type. Can be set as [ "dtmf" ] for DTMF input only, [ "speech" ] for ASR only, or [ "dtmf", "speech" ] for both.
            Is required.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.MultiInputAction.Speech">
            <summary>
            Speech recognition settings. Should be specified to enable speech input.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.Payload">
            <summary>
            The JSON object body to send to your event URL
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.EventUrl">
            <summary>
            The URL to send events to. If you return an NCCO when you receive a notification, it will replace the current NCCO
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.NotifyAction.EventMethod">
            <summary>
            The HTTP method to use when sending payload to your eventUrl
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.BeepStart">
            <summary>
            Set to true to play a beep when a recording starts
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Channels">
            <summary>
            The number of channels to record (maximum 32). 
            If the number of participants exceeds channels any additional participants 
            will be added to the last channel in file. split conversation must also be enabled
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EndOnKey">
            <summary>
            Stop recording when a digit is pressed on the handset. Possible values are: *, # or any single digit e.g. 9
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EndOnSilence">
            <summary>
            Stop recording after n seconds of silence. 
            Once the recording is stopped the recording data is sent to event_url. 
            The range of possible values is 3&lt;=endOnSilence&lt;=10.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EventMethod">
            <summary>
            The HTTP method used to make the request to eventUrl. The default value is POST.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.EventUrl">
            <summary>
            The URL to the webhook endpoint that is called asynchronously when a recording is finished. 
            If the message recording is hosted by Vonage, this webhook contains the URL you need to download 
            the recording and other meta data.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Format">
            <summary>
            Record the Call in a specific format.
            The default value is mp3, or wav when recording more than 2 channels.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.Split">
            <summary>
            Record the sent and received audio in separate channels of a stereo 
            recording—set to conversation to enable this.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.RecordAction.TimeOut">
            <summary>
            The maximum length of a recording in seconds. One the recording is stopped the recording 
            data is sent to event_url. The range of possible values 
            is between 3 seconds and 7200 seconds (2 hours)
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Uuid">
            <summary>
            The unique ID of the Call leg for the user to capture the speech of.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.EndOnSilence">
            <summary>
            Controls how long the system will wait after user stops speaking to decide the input is completed. The default value is 2 (seconds). The range of possible values is between 1 second and 10 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Language">
            <summary>
            Expected language of the user's speech. Format: BCP-47. Default: en-US see list of supported languages: https://developer.nexmo.com/voice/voice-api/guides/asr#language
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.Context">
            <summary>
            Array of hints (strings) to improve recognition quality if certain words are expected from the user.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.StartTimeout">
            <summary>
            Controls how long the system will wait for the user to start speaking. The range of possible values is between 1 second and 10 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.SpeechSettings.MaxDuration">
            <summary>
            Controls maximum speech duration (from the moment user starts speaking). The default value is 60 (seconds). The range of possible values is between 1 and 60 seconds.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.BargeIn">
            <summary>
            Set to true so this action is terminated when the user presses a button on the keypad. 
            Use this feature to enable users to choose an option without having to listen to the whole message 
            in your Interactive Voice Response (IVR ). If you set bargeIn to true on one more Stream actions then 
            the next non-stream action in the NCCO stack must be an input action. The default value is false.
            Once bargeIn is set to true it will stay true (even if bargeIn: false is set in a following action) 
            until an input action is encountered
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.Level">
            <summary>
            Set the audio level of the stream in the range -1 &gt;=level&lt;=1 with a precision of 0.1. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.Loop">
            <summary>
            The number of times audio is repeated before the Call is closed. The default value is 1. Set to 0 to loop infinitely.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.StreamAction.StreamUrl">
            <summary>
            An array containing a single URL to an mp3 or wav (16-bit) audio file 
            to stream to the Call or Conversation.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.BargeIn">
            <summary>
            Set to true so this action is terminated when the user presses a button on the keypad. 
            Use this feature to enable users to choose an option without having to listen to the whole message 
            in your Interactive Voice Response (IVR ). If you set bargeIn to true on one more Stream actions then 
            the next non-stream action in the NCCO stack must be an input action. The default value is false.
            Once bargeIn is set to true it will stay true (even if bargeIn: false is set in a following action) 
            until an input action is encountered
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Language">
            <summary>
            The language (<see href="https://tools.ietf.org/html/bcp47">BCP-47</see>format) for the message you are sending. Default: en-US. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Level">
            <summary>
            The volume level that the speech is played. This can be any value between -1 to 1 with 0 being the default.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Loop">
            <summary>
            The number of times text is repeated before the Call is closed. The default value is 1. Set to 0 to loop infinitely.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Premium">
            <summary>
                Set to true to use the premium version of the specified style if available, otherwise the standard version will be
                used. The default value is false.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Style">
            <summary>
            The vocal style (vocal range, tessitura and timbre). Default: 0. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.Nccos.TalkAction.Text">
            <summary>
            A string of up to 1,500 characters (excluding SSML tags) containing the message to be 
            synthesized in the Call or Conversation. A single comma in text adds a short pause to the 
            synthesized speech. To add a longer pause a break tag needs to be used in SSML. 
            To use SSML tags, you must enclose the text in a speak element.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.StreamUrl">
            <summary>
            An array of URLs pointing to the .mp3 or .wav audio file to stream.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.Loop">
            <summary>
            Set to 0 to replay the audio file at stream_url when the stream ends.
            </summary>
        </member>
        <member name="P:Vonage.Voice.StreamCommand.Level">
            <summary>
            Set the audio level of the stream in the range -1 &gt;= level &lt;= 1 with a precision of 0.1. The default value is 0.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Text">
            <summary>
            A UTF-8 and URL encoded string of up to 1500 characters containing
            the message to be synthesized in the Call or Conversation. Each
            comma in text adds a short pause to the synthesized speech.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Loop">
            <summary>
            Set to 0 to replay the audio file at stream_url when the stream ends. The default value is 1.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Level">
            <summary>
            The volume level that the speech is played. This can be any value between -1 to 1 in 0.1 increments, with 0 being the default.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Language">
            <summary>
            The language (<see href="https://tools.ietf.org/html/bcp47">BCP-47</see>format) for the message you are sending. Default: en-US. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Style">
            <summary>
            The vocal style (vocal range, tessitura and timbre). Default: 0. Possible values are listed in the <see href="https://developer.nexmo.com/voice/voice-api/guides/text-to-speech#supported-languages">Text-To-Speech guide</see>.
            </summary>
        </member>
        <member name="P:Vonage.Voice.TalkCommand.Premium">
            <summary>
            Set to `true` to use the premium version of the specified style if available, otherwise the standard version will be used. You can find more information about Premium Voices in the [Text-To-Speech guide](https://developer.vonage.com/en/voice/voice-api/guides/text-to-speech#premium-voices).
            </summary>
        </member>
        <member name="T:Vonage.Voice.VoiceClient">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Initializes a VoiceClient.
            </summary>
            <param name="credentials">Credentials to use for api calls.</param>
        </member>
        <member name="M:Vonage.Voice.VoiceClient.CreateCallAsync(Vonage.Voice.CallCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCallAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetCallsAsync(Vonage.Voice.CallSearchFilter,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.GetRecordingAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartDtmfAsync(System.String,Vonage.Voice.DtmfCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartStreamAsync(System.String,Vonage.Voice.StreamCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StartTalkAsync(System.String,Vonage.Voice.TalkCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopStreamAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.StopTalkAsync(System.String,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="M:Vonage.Voice.VoiceClient.UpdateCallAsync(System.String,Vonage.Voice.CallEditCommand,Vonage.Request.Credentials)">
            <inheritdoc />
        </member>
        <member name="T:Vonage.VonageClient">
            <summary>
                Represents a client to use all features from Vonage's APIs.
            </summary>
        </member>
        <member name="M:Vonage.VonageClient.#ctor(Vonage.Request.Credentials)">
            <summary>
                Constructor for VonageClient.
            </summary>
            <param name="credentials">Credentials to be used for further HTTP calls.</param>
        </member>
        <member name="P:Vonage.VonageClient.ConversationsClient">
            <summary>
                Exposes Conversations features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.Credentials">
            <summary>
                Gets or sets credentials for this client.
            </summary>
            <remarks>Setting the value from this property will initialize all clients instances.</remarks>
            <exception cref="T:System.ArgumentNullException">When the value is null.</exception>
        </member>
        <member name="P:Vonage.VonageClient.MeetingsClient">
            <summary>
                Exposes Meetings features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.NumberInsightV2Client">
            <summary>
                Exposes Number Insight V2 features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.ProactiveConnectClient">
            <summary>
                Exposes ProactiveConnect features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.SubAccountsClient">
            <summary>
                Exposes SubAccounts features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.UsersClient">
            <summary>
                Exposes User management features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.VerifyV2Client">
            <summary>
                Exposes VerifyV2 features.
            </summary>
        </member>
        <member name="P:Vonage.VonageClient.VideoClient">
            <summary>
                Exposes Video features.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
            Specifies that null is allowed as an input even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
            Specifies that null is disallowed as an input even if the corresponding type allows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
            Applied to a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified parameter value.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable
            by diagnostics if the argument to the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
            Gets the condition parameter value.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
            Indicates that an API is experimental and it may change in the future.
            </summary>
            <remarks>
            This attribute allows call sites to be flagged with a diagnostic that indicates that an experimental
            feature is used. Authors can use this attribute to ship preview features in their assemblies.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class,
            specifying the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
            Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
            <remarks>
            The diagnostic ID is shown in build output for warnings and errors.
            <para>This property represents the unique ID that can be used to suppress the warnings or errors, if needed.</para>
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
            Gets or sets the URL for corresponding documentation.
            The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
            <remarks>An example format string is <c>https://contoso.com/obsoletion-warnings/{0}</c>.</remarks>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
            Specifies that an output may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter may be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
            Specifies that an output will not be null even if the corresponding type allows it.
            Specifies that an input argument was not null when the call returns.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
            Specifies that the output will be non-null if the named parameter is non-null.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">The associated parameter name. The output will be non-null if the argument to the parameter specified is non-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
            Gets the associated parameter name.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
            Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Index">
            <summary>Represent a type can be used to index a collection either from the start or the end.</summary>
            <remarks>
            Index is used by the C# compiler to support the new index syntax
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 } ;
            int lastElement = someArray[^1]; // lastElement = 5
            </code>
            </remarks>
        </member>
        <member name="M:System.Index.#ctor(System.Int32,System.Boolean)">
            <summary>Construct an Index using a value and indicating if the index is from the start or from the end.</summary>
            <param name="value">The index value. it has to be zero or positive number.</param>
            <param name="fromEnd">Indicating if the index is from the start or from the end.</param>
            <remarks>
            If the Index constructed from the end, index value 1 means pointing at the last element and index value 0 means pointing at beyond last element.
            </remarks>
        </member>
        <member name="P:System.Index.Start">
            <summary>Create an Index pointing at first element.</summary>
        </member>
        <member name="P:System.Index.End">
            <summary>Create an Index pointing at beyond last element.</summary>
        </member>
        <member name="M:System.Index.FromStart(System.Int32)">
            <summary>Create an Index from the start at the position indicated by the value.</summary>
            <param name="value">The index value from the start.</param>
        </member>
        <member name="M:System.Index.FromEnd(System.Int32)">
            <summary>Create an Index from the end at the position indicated by the value.</summary>
            <param name="value">The index value from the end.</param>
        </member>
        <member name="P:System.Index.Value">
            <summary>Returns the index value.</summary>
        </member>
        <member name="P:System.Index.IsFromEnd">
            <summary>Indicates whether the index is from the start or the end.</summary>
        </member>
        <member name="M:System.Index.GetOffset(System.Int32)">
            <summary>Calculate the offset from the start using the giving collection length.</summary>
            <param name="length">The length of the collection that the Index will be used with. length has to be a positive value</param>
            <remarks>
            For performance reason, we don't validate the input length parameter and the returned offset value against negative values.
            we don't validate either the returned offset is greater than the input length.
            It is expected Index will be used with collections which always have non negative length/count. If the returned offset is negative and
            then used to index a collection will get out of range exception which will be same affect as the validation.
            </remarks>
        </member>
        <member name="M:System.Index.Equals(System.Object)">
            <summary>Indicates whether the current Index object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.Equals(System.Index)">
            <summary>Indicates whether the current Index object is equal to another Index object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Index.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Index.op_Implicit(System.Int32)~System.Index">
            <summary>Converts integer number to an Index.</summary>
        </member>
        <member name="M:System.Index.ToString">
            <summary>Converts the value of the current Index object to its equivalent string representation.</summary>
        </member>
        <member name="T:System.Range">
            <summary>Represent a range has start and end indexes.</summary>
            <remarks>
            Range is used by the C# compiler to support the range syntax.
            <code>
            int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
            int[] subArray1 = someArray[0..2]; // { 1, 2 }
            int[] subArray2 = someArray[1..^0]; // { 2, 3, 4, 5 }
            </code>
            </remarks>
        </member>
        <member name="P:System.Range.Start">
            <summary>Represent the inclusive start index of the Range.</summary>
        </member>
        <member name="P:System.Range.End">
            <summary>Represent the exclusive end index of the Range.</summary>
        </member>
        <member name="M:System.Range.#ctor(System.Index,System.Index)">
            <summary>Construct a Range object using the start and end indexes.</summary>
            <param name="start">Represent the inclusive start index of the range.</param>
            <param name="end">Represent the exclusive end index of the range.</param>
        </member>
        <member name="M:System.Range.Equals(System.Object)">
            <summary>Indicates whether the current Range object is equal to another object of the same type.</summary>
            <param name="value">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.Equals(System.Range)">
            <summary>Indicates whether the current Range object is equal to another Range object.</summary>
            <param name="other">An object to compare with this object</param>
        </member>
        <member name="M:System.Range.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
        </member>
        <member name="M:System.Range.ToString">
            <summary>Converts the value of the current Range object to its equivalent string representation.</summary>
        </member>
        <member name="M:System.Range.StartAt(System.Index)">
            <summary>Create a Range object starting from start index to the end of the collection.</summary>
        </member>
        <member name="M:System.Range.EndAt(System.Index)">
            <summary>Create a Range object starting from first element in the collection to the end Index.</summary>
        </member>
        <member name="P:System.Range.All">
            <summary>Create a Range object starting from first element to the end.</summary>
        </member>
        <member name="M:System.Range.GetOffsetAndLength(System.Int32)">
            <summary>Calculate the start offset and length of range object using a collection length.</summary>
            <param name="length">The length of the collection that the range will be used with. length has to be a positive value.</param>
            <remarks>
            For performance reason, we don't validate the input length parameter against negative values.
            It is expected Range will be used with collections which always have non negative length/count.
            We validate the range is inside the length scope though.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CollectionBuilderAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initialize the attribute to refer to the <paramref name="methodName"/> method on the <paramref name="builderType"/> type.
            </summary>
            <param name="builderType">The type of the builder to use to construct the collection.</param>
            <param name="methodName">The name of the method on the builder to use to construct the collection.</param>
            <remarks>
            <paramref name="methodName"/> must refer to a static method that accepts a single parameter of
            type <see cref="T:System.ReadOnlySpan`1"/> and returns an instance of the collection being built containing
            a copy of the data from that span.  In future releases of .NET, additional patterns may be supported.
            </remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.BuilderType">
            <summary>
            Gets the type of the builder to use to construct the collection.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.MethodName">
            <summary>
            Gets the name of the method on the builder to use to construct the collection.
            </summary>
            <remarks>
            This should match the metadata name of the target method.
            For example, this might be ".ctor" if targeting the type's constructor.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiresLocationAttribute">
            <summary>
            Reserved for use by a compiler for tracking metadata.
            This attribute should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
